{"version":3,"sources":["webpack:///js/0.0e5f47f2f5e2dd4b77f5.js","webpack:///./src/views/dashboard/index.vue","webpack:///./~/zrender/lib/core/util.js","webpack:///./~/echarts/lib/util/number.js","webpack:///./~/zrender/lib/core/vector.js","webpack:///./~/echarts/lib/util/graphic.js","webpack:///./~/zrender/lib/graphic/Path.js","webpack:///./~/echarts/lib/echarts.js","webpack:///./~/zrender/lib/core/env.js","webpack:///./~/echarts/lib/util/format.js","webpack:///./~/echarts/lib/util/model.js","webpack:///./~/zrender/lib/core/BoundingRect.js","webpack:///./~/echarts/lib/util/clazz.js","webpack:///./~/echarts/lib/model/Component.js","webpack:///./~/echarts/lib/model/Model.js","webpack:///./~/zrender/lib/core/curve.js","webpack:///./~/zrender/lib/contain/text.js","webpack:///./~/zrender/lib/mixin/Eventful.js","webpack:///./~/zrender/lib/tool/color.js","webpack:///./~/echarts/lib/data/List.js","webpack:///./~/echarts/lib/scale/Scale.js","webpack:///./~/echarts/lib/util/layout.js","webpack:///./~/zrender/lib/config.js","webpack:///./~/zrender/lib/container/Group.js","webpack:///./~/zrender/lib/core/PathProxy.js","webpack:///./~/zrender/lib/core/event.js","webpack:///./~/zrender/lib/core/matrix.js","webpack:///./src/api/inbox.js","webpack:///./~/echarts/lib/CoordinateSystem.js","webpack:///./~/echarts/lib/coord/axisHelper.js","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/echarts/lib/scale/Interval.js","webpack:///./~/echarts/lib/util/component.js","webpack:///./~/zrender/lib/core/timsort.js","webpack:///./~/zrender/lib/graphic/Displayable.js","webpack:///./~/zrender/lib/graphic/Gradient.js","webpack:///./~/echarts/lib/chart/helper/Symbol.js","webpack:///./~/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./~/echarts/lib/component/marker/MarkerModel.js","webpack:///./~/echarts/lib/component/marker/MarkerView.js","webpack:///./~/echarts/lib/component/marker/markerHelper.js","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./~/echarts/lib/model/Series.js","webpack:///./~/echarts/lib/model/mixin/colorPalette.js","webpack:///./~/echarts/lib/util/symbol.js","webpack:///./~/echarts/lib/view/Chart.js","webpack:///./src/components/PanThumb/index.vue","webpack:///./~/zrender/lib/Element.js","webpack:///./~/zrender/lib/animation/Animator.js","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/zrender/lib/contain/util.js","webpack:///./~/zrender/lib/core/LRU.js","webpack:///./~/zrender/lib/core/guid.js","webpack:///./~/zrender/lib/core/log.js","webpack:///./~/zrender/lib/graphic/Image.js","webpack:///./~/zrender/lib/graphic/Pattern.js","webpack:///./~/zrender/lib/graphic/Style.js","webpack:///./~/zrender/lib/graphic/helper/poly.js","webpack:///line.vue","webpack:///index.vue?80a2","webpack:///index.vue?95e5","webpack:///index.vue?4dfe","webpack:///weekly_using.vue","webpack:///index.vue?818f","webpack:///./src/components/PanThumb/index.vue?5bd0","webpack:///./src/views/dashboard/editor/weekly_using.vue?9942","webpack:///./src/views/dashboard/default/index.vue?ad00","webpack:///./src/views/dashboard/editor/index.vue?3038","webpack:///./~/echarts/lib/ExtensionAPI.js","webpack:///./~/echarts/lib/chart/helper/Line.js","webpack:///./~/echarts/lib/chart/helper/LineDraw.js","webpack:///./~/echarts/lib/chart/helper/LinePath.js","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/echarts/lib/chart/line.js","webpack:///./~/echarts/lib/chart/line/LineSeries.js","webpack:///./~/echarts/lib/chart/line/LineView.js","webpack:///./~/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./~/echarts/lib/chart/line/poly.js","webpack:///./~/echarts/lib/component/axis.js","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/echarts/lib/component/axis/AxisView.js","webpack:///./~/echarts/lib/component/grid.js","webpack:///./~/echarts/lib/component/markLine.js","webpack:///./~/echarts/lib/component/markPoint.js","webpack:///./~/echarts/lib/component/marker/MarkLineModel.js","webpack:///./~/echarts/lib/component/marker/MarkLineView.js","webpack:///./~/echarts/lib/component/marker/MarkPointModel.js","webpack:///./~/echarts/lib/component/marker/MarkPointView.js","webpack:///./~/echarts/lib/component/tooltip.js","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/echarts/lib/coord/Axis.js","webpack:///./~/echarts/lib/coord/axisDefault.js","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/echarts/lib/coord/axisModelCreator.js","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./~/echarts/lib/coord/cartesian/Grid.js","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js","webpack:///./~/echarts/lib/coord/cartesian/axisLabelInterval.js","webpack:///./~/echarts/lib/data/DataDiffer.js","webpack:///./~/echarts/lib/data/helper/completeDimensions.js","webpack:///./~/echarts/lib/layout/points.js","webpack:///./~/echarts/lib/loading/default.js","webpack:///./~/echarts/lib/model/Global.js","webpack:///./~/echarts/lib/model/OptionManager.js","webpack:///./~/echarts/lib/model/globalDefault.js","webpack:///./~/echarts/lib/model/mixin/areaStyle.js","webpack:///./~/echarts/lib/model/mixin/boxLayout.js","webpack:///./~/echarts/lib/model/mixin/itemStyle.js","webpack:///./~/echarts/lib/model/mixin/lineStyle.js","webpack:///./~/echarts/lib/model/mixin/textStyle.js","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/echarts/lib/processor/dataSample.js","webpack:///./~/echarts/lib/scale/Log.js","webpack:///./~/echarts/lib/scale/Ordinal.js","webpack:///./~/echarts/lib/scale/Time.js","webpack:///./~/echarts/lib/util/throttle.js","webpack:///./~/echarts/lib/view/Component.js","webpack:///./~/echarts/lib/visual/seriesColor.js","webpack:///./~/echarts/lib/visual/symbol.js","webpack:///./src/components/PanThumb/index.vue?5834","webpack:///./src/views/dashboard/editor/weekly_using.vue?b983","webpack:///./src/views/dashboard/default/index.vue?2a88","webpack:///./src/views/dashboard/editor/index.vue?c154","webpack:///./~/vue-count-to/dist/vue-count-to.min.js","webpack:///./src/components/Charts/line.vue","webpack:///./src/views/dashboard/default/index.vue","webpack:///./src/views/dashboard/editor/index.vue","webpack:///./src/views/dashboard/editor/weekly_using.vue","webpack:///./src/components/PanThumb/index.vue?a4d1","webpack:///./src/views/dashboard/editor/weekly_using.vue?9bc2","webpack:///./src/views/dashboard/default/index.vue?cdd2","webpack:///./src/views/dashboard/editor/index.vue?fa01","webpack:///./src/components/Charts/line.vue?79a2","webpack:///./src/views/dashboard/index.vue?ac1e","webpack:///./~/zrender/lib/Handler.js","webpack:///./~/zrender/lib/Layer.js","webpack:///./~/zrender/lib/Painter.js","webpack:///./~/zrender/lib/Storage.js","webpack:///./~/zrender/lib/animation/Animation.js","webpack:///./~/zrender/lib/animation/Clip.js","webpack:///./~/zrender/lib/animation/easing.js","webpack:///./~/zrender/lib/contain/arc.js","webpack:///./~/zrender/lib/contain/cubic.js","webpack:///./~/zrender/lib/contain/line.js","webpack:///./~/zrender/lib/contain/path.js","webpack:///./~/zrender/lib/contain/quadratic.js","webpack:///./~/zrender/lib/contain/windingLine.js","webpack:///./~/zrender/lib/core/GestureMgr.js","webpack:///./~/zrender/lib/core/bbox.js","webpack:///./~/zrender/lib/dom/HandlerProxy.js","webpack:///./~/zrender/lib/graphic/CompoundPath.js","webpack:///./~/zrender/lib/graphic/LinearGradient.js","webpack:///./~/zrender/lib/graphic/RadialGradient.js","webpack:///./~/zrender/lib/graphic/Text.js","webpack:///./~/zrender/lib/graphic/helper/roundRect.js","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/zrender/lib/graphic/mixin/RectText.js","webpack:///./~/zrender/lib/graphic/shape/Arc.js","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/zrender/lib/graphic/shape/Circle.js","webpack:///./~/zrender/lib/graphic/shape/Line.js","webpack:///./~/zrender/lib/graphic/shape/Polygon.js","webpack:///./~/zrender/lib/graphic/shape/Polyline.js","webpack:///./~/zrender/lib/graphic/shape/Rect.js","webpack:///./~/zrender/lib/graphic/shape/Ring.js","webpack:///./~/zrender/lib/graphic/shape/Sector.js","webpack:///./~/zrender/lib/mixin/Animatable.js","webpack:///./~/zrender/lib/mixin/Draggable.js","webpack:///./~/zrender/lib/mixin/Transformable.js","webpack:///./~/zrender/lib/tool/path.js","webpack:///./~/zrender/lib/tool/transformPath.js","webpack:///./~/zrender/lib/zrender.js"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","Component","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","slice","Function","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","get","prefixedKey","removeKey","noop","_trim","str","replace","number","linearMap","val","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","round","x","precision","Math","min","max","toFixed","asc","arr","sort","a","b","getPrecision","isNaN","e","count","getPrecisionSafe","dotIndex","getPixelPrecision","dataExtent","pixelExtent","log","LN10","dataQuantity","floor","sizeQuantity","abs","isFinite","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","parseDate","Date","ret","quantity","pow","nice","exp10","f","reformIntervals","list","littleThan","lg","interval","close","curr","Infinity","currClose","splice","isNumeric","v","ArrayCtor","Float32Array","vector","create","y","out","copy","add","v1","v2","scaleAndAdd","sub","sqrt","lenSquare","mul","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","applyTransform","m","lengthSquare","dist","distSquare","hasFillOrStroke","fillOrStroke","liftColor","color","colorTool","lift","cacheElementStl","el","__hoverStlDirty","stroke","style","fill","hoverStyle","__hoverStl","normalStyle","name","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","__zr","addHover","setStyle","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","traverse","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","dataIndex","isAnimationEnabled","postfix","duration","getShallow","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","zrUtil","pathTool","Path","matrix","graphic","Group","Image","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","extendShape","opts","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","boundingRect","getBoundingRect","aspect","width","height","cx","cy","resizePath","mergePath","pathRect","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","opt","hoverSilentOnTouch","on","setText","textStyle","labelModel","labelPosition","labelOffset","labelColor","textStyleModel","getModel","textDistance","textFont","getFont","textPosition","textOffset","textFill","getTextColor","updateProps","initProps","getTransform","ancestor","mat","identity","getLocalTransform","parent","vertex","transform","invert","transformDirection","direction","hBase","vBase","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","isGroup","anid","oldEl","newProp","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","strokeNoScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirty","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","extendFrom","defaultShape","thisShape","init","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","prioritySortFunc","prio","themeStorage","id","group","_dom","zr","_zr","zrender","renderer","devicePixelRatio","_throttledZrFlush","throttle","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_api","ExtensionAPI","_coordSysMgr","CoordinateSystemManager","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","query","eachComponent","model","index","view","__viewId","__alive","doDispatchAction","silent","payloadType","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","__model","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","__id","remove","dispose","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","env","node","ignore","frameDrawNum","needProgressive","progressive","stopAnimation","blendMode","canvasSupported","z","zlevel","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","__lastOnlyGraphic","o","optionPreprocessorFuncs","setTheme","getOption","getWidth","getHeight","getRenderedCanvas","pixelRatio","backgroundColor","getDisplayList","painter","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","mathMax","left","top","right","bottom","canvasList","dpr","canvas","getBoundingClientRect","targetCanvas","img","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","getItemVisual","coordSysMgr","restoreData","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","browser","weChat","MOUSE_EVENT_NAMES","eveName","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","groupIdBase","echarts","version","dependencies","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","getInstanceByDom","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","format","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","navigator","os","ua","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","userAgent","numberUtil","textContain","formatUtil","addCommas","toCamelCase","upperCaseFirst","group1","charAt","normalizeCssArray","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","formatTpl","tpl","paramsList","encode","seriesLen","$vars","alias","k","s2d","formatTime","date","getFullYear","M","getMonth","getDate","h","getHours","getMinutes","getSeconds","capitalFirst","substr","truncateText","has","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","createDataFormatModel","dataFormatMixin","seriesName","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","getFormattedLabel","dimIndex","itemModel","getItemModel","formatter","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","parsedKey","queryType","queryParam","queryComponents","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","checkClassType","superCall","superApply","IS_CONTAINER","host","hasOwn","enableClassExtend","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","options","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","setReadOnly","properties","getDependencies","deps","arrayPush","clazzUtil","componentUtil","componentIndex","defaultOption","dependentModels","uid","layoutMode","parentModel","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","mergeOption","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","doGet","pathArr","getParent","getParentMethod","ignoreParent","parsePath","thisParentModel","isEmpty","Ctor","customizeGetParent","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","getTextWidth","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textAlign","textBaseline","textLineLen","lineHeight","adjustTextPositionOnRect","textRect","textHeight","halfHeight","containerWidth","ellipsis","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","join","charCode","charCodeAt","font","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","m1","m2","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","normalizeDimensions","dimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","getDimensionInfo","hostModel","transferProperties","_storage","originalStorage","dim","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","DataDiffer","TRANSFERABLE_PROPERTIES","__wrappedMethods","propName","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","_extent","listProto","hasItemOption","getDimension","initData","nameList","dimValueGetter","size","dimensionInfoMap","idList","nameRepeatCount","DataCtor","dimName","stackedValue","getValues","hasValue","getDataExtent","dimData","dimExtent","getSum","sum","rawIndex","mid","indexOfNearest","maxDistance","nearestIdx","minDist","Number","MAX_VALUE","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","Scale","_interval","scaleProto","extent","unionExtent","unionExtentFromData","getExtent","setExtent","start","end","thisExtent","getTicksLabels","labels","ticks","getTicks","getLabel","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","enoughParamNumber","ignoreSize","hasProp","hNames","vNames","hResult","vResult","copyLayoutParams","config","debugMode","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","rotate","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","out0","out1","out2","out3","out4","out5","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","fetchList","_fetch2","default","fetchUnReadList","order","delReceiveMail","idArr","idStr","_Observable","Observable","observer","setTimeout","defineProperty","_fetch","__esModule","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","OrdinalScale","IntervalScale","axisHelper","getScaleExtent","axis","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","setBlank","getNeedCrossZero","niceScaleExtent","splitNumber","base","niceExtent","minInterval","getInterval","intervalScale","origin","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","getAxisLabelInterval","tickCoords","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","tick","excludes","mathFloor","mathCeil","roundingErrorFix","niceTicks","_niceExtent","reverse","expandSize","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","rectHover","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","getSymbolSize","symbolSize","getScale","Symbol","seriesScope","updateData","driftSymbol","drift","symbolUtil","symbolProto","_createSymbol","symbolType","symbolPath","createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","getItemStyle","elStyle","setColor","opacity","valueDim","onEmphasis","ratio","onNormal","fadeOut","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","point","symbolDrawProto","oldData","_data","SymbolCtor","newIdx","symbolEl","oldIdx","execute","enableAnimation","fillLabel","label","MarkerModel","createdBySelf","hostSeries","__hostSeries","newOpt","modelPropName","markerOpt","markerModel","formattedValue","html","markerGroupMap","__keep","markerModelKey","renderSeries","hasXOrY","hasXAndY","valueAxisDim","markerTypeCalculatorWithExtent","mlType","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","numCalculate","markerTypeCalculator","average","dataTransform","axisInfo","getAxisInfo","baseAxis","valueAxis","baseDataDim","valueDataDim","xAxis","radiusAxis","yAxis","angleAxis","dataDim","coordDimToDataDim","valueIndex","getAxis","dataDimToCoordDim","getOtherAxis","getBaseAxis","dataFilter","containData","getAxisType","axisDim","axisModelCreator","AxisModel","resetRange","getCoordSysModel","gridIndex","gridId","extraOption","classUtil","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","fillDataTextStyle","newSeriesOption","getLinkedData","getRawData","coordDim","multipleSeries","valStr","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipDataIndex","getTooltipPosition","colorIdx","colorNameMap","colorPalette","Triangle","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","line","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","textVerticalAlign","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","Chart","elSetState","state","toggleHighlight","dataIdx","chartProto","injectStyle","ssrContext","guid","Transformable","Animatable","clipPath","decomposeTransform","beforeUpdate","afterUpdate","updateTransform","hide","show","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","delay","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","PI2","normalizeRadian","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","idStart","ZImage","globalImageCache","src","_image","cachedImgObj","onload","pending","sWidth","sHeight","drawImage","repeat","createPattern","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","shadowBlur","shadowOffsetX","shadowOffsetY","textStroke","textShadowBlur","textShadowOffsetX","textShadowOffsetY","textTransform","textRotation","blend","prevStyle","firstDraw","styleName","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","smoothSpline","smoothBezier","points","smooth","controlPoints","smoothConstraint","cp1","cp2","className","listData","require","watch","dataList","setLine","mounted","getElementById","methods","xAxisData","receiveData","sendData","week","substring","receiveCount","sendCount","markLineReceive","markLineSend","_i","_i2","title","grid","containLabel","tooltip","axisLine","axisTick","splitLine","markPoint","markLine","effect","animationDuration","symbol","required","zIndex","_interopRequireDefault","_extends2","_extends3","_vuex","_PanThumb","_PanThumb2","components","PanThumb","emptyGif","computed","mapGetters","_weekly_using","_weekly_using2","_inbox","_vueCountTo","_vueCountTo2","WeeklyUsing","countTo","statisticsData","inbox_count","outbox_count","draft_count","month_inbox_count","unread_mail","weekly_using","frequertContacts","mail","avatarUrl","unreadList","created","fetchData","unreadMails","_this","then","items","toUnreadMail","$store","commit","$router","_line","_line2","LineChart","_index","_index2","_index3","_index4","EditorDashboard","DefaultDashboard","currentRole","roles","sources","mappings","file","sourcesContent","sourceRoot","chartInstance","echartsAPIList","makeSymbolTypeKey","symbolCategory","lineData","createLine","LinePath","setLinePoints","targetShape","cpx1","cpy1","updateSymbolAndLabelBeforeLineUpdate","lineGroup","symbolFrom","symbolTo","invScale","parentNode","fromPos","pointAt","toPos","tangent","tangentAt","atan2","__position","halfPercent","cp","__verticalAlign","__textAlign","_createLine","SYMBOL_CATEGORIES","lineProto","linePoints","_updateCommonStl","lineStyle","hoverLineStyle","getLineStyle","visualColor","visualOpacity","defaultLabelColor","defaultText","showLabel","hoverShowLabel","rawVal","textStyleHoverModel","linePath","isPointNaN","pt","lineNeedsDraw","pts","LineDraw","ctor","_ctor","LineGroup","lineDrawProto","oldLineData","_lineData","LineCtor","isLine","straightLineProto","bezierCurveProto","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","axesInfo","completeDimensions","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","legendHoverLink","clipOverflow","smoothMonotone","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","onBand","halfBandWidth","getBandWidth","dir","sign","getStackedOnPoints","valueStart","onZero","baseDataOffset","stackedOnSameSign","stackedData","dataToPoint","createGridClipShape","cartesian","hasAnimation","xExtent","yExtent","isHorizontal","createPolarClipShape","getAngleAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","r0","clockwise","inverse","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","toGlobalCoord","dataToCoord","stopLen","outerColors","minCoord","maxCoord","coordSpan","unshift","gradient","lineAnimationDiff","polyHelper","symbolDraw","_symbolDraw","_lineGroup","lineStyleModel","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","lineJoin","stackedOnSmooth","getAreaStyle","categoryAxis","getAxesByScale","isLabelIgnored","current","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","stackedOnBBox","makeAxisEventDataBase","axisModel","innerTextLayout","verticalAlign","rotationDiff","endTextLayout","textRotate","onLeft","tooltipOpt","AxisBuilder","nameDirection","tickDirection","labelDirection","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","getGroup","pt1","pt2","lineCap","isBlank","tickModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","isTwoLabelOverlapped","firstRect","nextRect","axisLabelShow","labelMargin","labelRotation","labelLayout","categoryData","textEls","triggerEvent","tickVal","itemTextStyleModel","textColor","pos","labelBeforeFormat","textEl","targetType","firstLabel","lastLabel","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","truncatedText","formatterParams","__fullText","__truncatedText","content","rawTick","layoutAxis","gridModel","getZero","theAxis","rawAxisPosition","axisPosition","getRect","rectBound","axisOffset","posMap","dirMap","getLabelInterval","axisBuilderAttrs","selfBuilderAttrs","AxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","gridRect","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","areaStyle","isInifinity","ifMarkLineHasOnlyDim","fromCoord","toCoord","otherDimIndex","markLineFilter","markerHelper","updateSingleMarkerEndLayout","isFrom","xPx","yPx","getMarkerPosition","createList","mlModel","coordDimsInfos","info","fromData","toData","optData","markLineTransform","to","mlFrom","mlTo","markLineModel","mlData","__from","__to","updateDataVisualAndLayout","seriesData","lineDrawMap","lineDraw","lineColor","fromSymbolSize","fromSymbol","toSymbolSize","toSymbol","borderWidth","updateMarkerLayout","mpData","mpModel","dataOpt","markPointModel","symbolDrawMap","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","cssText","fontSize","assembleCssText","tooltipModel","transitionDuration","padding","zrColor","borderName","camelCase","TooltipContent","_x","_y","appendChild","_container","_show","_hideTimeout","onmouseenter","enterable","clearTimeout","_inContent","onmousemove","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","isShow","showContent","triggerOn","alwaysShowContent","confine","showDelay","hideDelay","borderColor","borderRadius","extraCssText","axisPointer","animationDurationUpdate","animationEasingUpdate","crossStyle","shadowStyle","dataEqual","makeLineShape","makeRectShape","makeSectorShape","refixTooltipPosition","viewWidth","viewHeight","confineTooltipPosition","calcTooltipPosition","domWidth","domHeight","rectWidth","rectHeight","updatePosition","positionExpr","ifSeriesSupportAxisTrigger","_axisPointers","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastHover","_alwaysShowContent","_seriesGroupByAxis","_prepareAxisTriggerData","crossText","_crossText","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_tryShow","_mousemove","_hide","_showTimeout","seriesHaveDataOnIndex","_series","isTriggerAxis","findHover","manuallyHideTip","seriesGroupByAxis","globalTrigger","_showAxisTooltip","_ticket","_hideAxisPointer","_resetLastHover","_showItemTooltipContent","subTooltipModel","defaultHtml","asyncTicket","_showTooltipContent","axisPointerModel","axisPointerType","_showAxisPointer","allNotShow","seriesCoordSysSameAxis","allCoordSys","pointToData","contentNotChange","lastHover","valIndex","_showSinglePointer","_showPolarPointer","_showCartesianPointer","_dispatchAndShowSeriesTooltipContent","moveGridLine","otherExtent","pointerEl","_getPointerElement","moveAnimation","moveGridShadow","bandWidth","_updateCrossText","otherAxis","movePolarLine","mouseCoord","pointToCoord","coordToPoint","movePolarShadow","crossStyleModel","pointerModel","initShape","axisPointers","pointerType","styleModel","isShadow","elementType","seriesList","rootTooltipModel","baseDimIndex","sampleSeriesIndex","payloadBatch","firstDataIndex","firstLine","seriesTooltipModel","ticket","cbTicket","fixExtentWithBands","nTick","normalizedExtent","Axis","coordToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","axisExtent","_isBlank","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","splitArea","timeAxis","logAxis","logBase","rangeStart","rangeEnd","setRange","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","axisLabelInterval","Axis2D","coordExtent","_labelInterval","toLocalCoord","dimAxisMapper","_axes","Cartesian","_dimList","getAxes","addAxis","_dataCoordConvert","input","dimList","output","Cartesian2D","axisX","axisY","dataToPoints","isAxisUsedInTheGrid","getLabelUnionRect","labelCount","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","updateAxisTransfrom","coordBase","axisExtentSum","findAxesModels","axesTypes","isCartesian2D","gridProto","ifAxisCanNotOnZero","otherAxisDim","axes","axesMap","_updateScale","adjustAxes","axesList","getBoxLayoutParams","labelUnionRect","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","_findConvertTarget","coordsList","createAxisCreator","axisPositionUsed","axesCount","grids","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","defaultNames","extraPrefix","value0","retrieveValue","guessOrdinal","eachSeriesByType","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","seriesModels","filterBySubType","cpt","assertSeriesInitialized","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","resultItem","ComponentModelClass","newCptTypes","componentOption","getComponent","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","getSeriesByName","oneSeries","getSeriesByType","getSeries","rawSeriesIndex","eachRawSeries","eachRawSeriesByType","isSeriesFiltered","filterSeries","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","platform","fontFamily","fontStyle","fontWeight","animationThreshold","progressiveThreshold","getBorderLineDash","lineType","getLineDash","dotSize","dashSize","gTextStyleModel","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","visualMap","componentName","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","samplers","nearest","indexSampler","sampler","fixRoundingError","originalVal","intervalScaleProto","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","rank","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","ONE_SECOND","ONE_MINUTE","ONE_DAY","lib","ORIGIN_METHOD","RATE","fn","debounce","exec","lastExec","getTime","timer","currCall","lastCall","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","componentProto","encodeColor","colorAccessPath","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","locals","configurable","enumerable","startVal","endVal","autoplay","Boolean","decimals","validator","decimal","separator","prefix","suffix","useEasing","easingFn","localStartVal","displayValue","formatNumber","printVal","paused","localDuration","startTime","timestamp","rAF","countDown","$emit","pauseResume","cancelAnimationFrame","reset","isNumber","destroyed","u","staticRenderFns","_scopeId","keys","esModule","$createElement","_self","_c","_v","_s","Vue","_vm","staticClass","attrs","staticStyle","avatar","_l","href","aria-label","border","viewBox","aria-hidden","transform-origin","font-size","padding-top","icon-class","ref","click","$event","_f","receiveDate","sendName","class","tag","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","Handler","proxy","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","hovered","hoveredTarget","lastHoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","eventArgs","setCursorStyle","cursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downel","_upel","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","restore","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","Painter","root","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","getViewportRoot","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","invTransform","_doPaintEl","token","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","wh","cwh","plt","prb","pathToImage","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","_renderList","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","remainder","arg","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_a","_b","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","pointPair","center","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","extremity","fromPoints","xDim","yDim","tx","ty","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","eventTool","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","handlerDomProxyProto","paths","_updatePathDirty","globalCoord","strokeText","fillText","r1","r2","r3","r4","total","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","interpolate","segs","w2","w3","maxValue","lastIndexOf","align","baseline","shadowColor","textShadowColor","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","curveTool","roundRectHelper","shadowTemp","modified","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","mIdentity","transformableProto","parentHasTransform","tmpTransform","transformCoordToGlobal","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathList","pathEl","pathBundle","nPoint","mathAtan2","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation"],"mappings":"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","file":"js/0.0e5f47f2f5e2dd4b77f5.js","sourcesContent":["webpackJsonp([0],Array(302).concat([\n/* 302 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(2)(\n  /* script */\n  __webpack_require__(392),\n  /* template */\n  __webpack_require__(564),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 303 */,\n/* 304 */,\n/* 305 */,\n/* 306 */,\n/* 307 */,\n/* 308 */,\n/* 309 */,\n/* 310 */,\n/* 311 */,\n/* 312 */,\n/* 313 */,\n/* 314 */,\n/* 315 */,\n/* 316 */,\n/* 317 */,\n/* 318 */,\n/* 319 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n/* 320 */\n/***/ (function(module, exports) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * Fix rounding error of float numbers\n     * @param {number} x\n     * @return {number}\n     */\n    number.round = function (x, precision) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        return +(+x).toFixed(precision);\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n        var dotIndex = str.indexOf('.');\n        if (dotIndex < 0) {\n            return 0;\n        }\n        return str.length - 1 - dotIndex;\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    /**\n     * @param {string|Date|number} value\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Treat as ISO format. See issue #3623\n            var ret = new Date(value);\n            if (isNaN(+ret)) {\n                // FIXME new Date('1970-01-01') is UTC, new Date('1970/01/01') is local\n                ret = new Date(new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'));\n            }\n            return ret;\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\n    };\n\n    // \"Nice Numbers for Graph Labels\" of Graphic Gems\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\n     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     * @param  {number} val\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exp10 = number.quantity(val);\n        var f = val / exp10; // between 1 and 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        return nf * exp10;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n/* 321 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n/* 322 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(319);\n\n    var pathTool = __webpack_require__(606);\n    var round = Math.round;\n    var Path = __webpack_require__(323);\n    var colorTool = __webpack_require__(337);\n    var matrix = __webpack_require__(346);\n    var vector = __webpack_require__(321);\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(343);\n\n    graphic.Image = __webpack_require__(377);\n\n    graphic.Text = __webpack_require__(589);\n\n    graphic.Circle = __webpack_require__(596);\n\n    graphic.Sector = __webpack_require__(602);\n\n    graphic.Ring = __webpack_require__(601);\n\n    graphic.Polygon = __webpack_require__(598);\n\n    graphic.Polyline = __webpack_require__(599);\n\n    graphic.Rect = __webpack_require__(600);\n\n    graphic.Line = __webpack_require__(597);\n\n    graphic.BezierCurve = __webpack_require__(595);\n\n    graphic.Arc = __webpack_require__(594);\n\n    graphic.CompoundPath = __webpack_require__(586);\n\n    graphic.LinearGradient = __webpack_require__(587);\n\n    graphic.RadialGradient = __webpack_require__(588);\n\n    graphic.BoundingRect = __webpack_require__(328);\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n/* 323 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(357);\n    var zrUtil = __webpack_require__(319);\n    var PathProxy = __webpack_require__(344);\n    var pathContain = __webpack_require__(580);\n\n    var Pattern = __webpack_require__(378);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n/* 324 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(325);\n\n    var GlobalModel = __webpack_require__(478);\n    var ExtensionAPI = __webpack_require__(440);\n    var CoordinateSystemManager = __webpack_require__(349);\n    var OptionManager = __webpack_require__(479);\n\n    var ComponentModel = __webpack_require__(330);\n    var SeriesModel = __webpack_require__(365);\n\n    var ComponentView = __webpack_require__(493);\n    var ChartView = __webpack_require__(368);\n    var graphic = __webpack_require__(322);\n    var modelUtil = __webpack_require__(327);\n    var throttle = __webpack_require__(492);\n\n    var zrender = __webpack_require__(608);\n    var zrUtil = __webpack_require__(319);\n    var colorTool = __webpack_require__(337);\n    var Eventful = __webpack_require__(336);\n    var timsort = __webpack_require__(356);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts (dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this);\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.time && console.time('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            // console.time && console.timeEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            var view = ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId];\n            if (view && view.__alive) {\n                view[method](model, ecModel, ecIns._api, payload);\n            }\n        }, ecIns);\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // if (__DEV__) {\n        //     zrUtil.assert(\n        //         !this[IN_MAIN_PROCESS],\n        //         '`dispatchAction` should not be called during main process.'\n        //         + 'unless updateMathod is \"none\".'\n        //     );\n        // }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        for (var i = 0; i < payloads.length; i++) {\n            var batchItem = payloads[i];\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var actions = [];\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.4.0',\n        dependencies: {\n            zrender: '3.3.0'\n        }\n    };\n\n    function enableConnect(chart) {\n\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n\n    }\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(494));\n    echarts.registerPreprocessor(__webpack_require__(486));\n    echarts.registerLoading('default', __webpack_require__(477));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    //\n    echarts.List = __webpack_require__(339);\n    echarts.Model = __webpack_require__(331);\n\n    echarts.graphic = __webpack_require__(322);\n    echarts.number = __webpack_require__(320);\n    echarts.format = __webpack_require__(326);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(346);\n    echarts.vector = __webpack_require__(321);\n    echarts.color = __webpack_require__(337);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38)))\n\n/***/ }),\n/* 325 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n/* 326 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(319);\n    var numberUtil = __webpack_require__(320);\n    var textContain = __webpack_require__(335);\n\n    var formatUtil = {};\n    /**\n     * 每三位默认加,格式化\n     * @type {string|number} x\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var y = date.getFullYear();\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var h = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n/***/ }),\n/* 327 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(326);\n    var nubmerUtil = __webpack_require__(320);\n    var Model = __webpack_require__(331);\n    var zrUtil = __webpack_require__(319);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n\n            var seriesIndex = this.seriesIndex;\n            var seriesName = this.name;\n\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: seriesIndex,\n                seriesName: seriesName,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-';\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, goeName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = parsedKey[2];\n\n            if (!mainType || !queryType) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            queryParam[queryType.toLowerCase()] = value;\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n/***/ }),\n/* 328 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(321);\n    var matrix = __webpack_require__(346);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n/* 329 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(319);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n/* 330 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(331);\n    var zrUtil = __webpack_require__(319);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(353);\n    var clazzUtil = __webpack_require__(329);\n    var layout = __webpack_require__(341);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(482));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n/* 331 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(319);\n    var clazzUtil = __webpack_require__(329);\n    var env = __webpack_require__(325);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(484));\n    mixin(Model, __webpack_require__(481));\n    mixin(Model, __webpack_require__(485));\n    mixin(Model, __webpack_require__(483));\n\n    module.exports = Model;\n\n\n/***/ }),\n/* 332 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(321);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n/* 333 */,\n/* 334 */,\n/* 335 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = __webpack_require__(319);\n    var BoundingRect = __webpack_require__(328);\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n/* 336 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n/* 337 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(374);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n/* 338 */,\n/* 339 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(331);\n    var DataDiffer = __webpack_require__(474);\n\n    var zrUtil = __webpack_require__(319);\n    var modelUtil = __webpack_require__(327);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string>} dimensions\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {number}\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var nearestIdx = -1;\n        if (dimData) {\n            var minDist = Number.MAX_VALUE;\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var diff = value - this.get(dim, i, stack);\n                var dist = Math.abs(diff);\n                if (\n                    diff <= maxDistance\n                    && (dist < minDist\n                        // For the case of two data are same on xAxis, which has sequence data.\n                        // Show the nearest index\n                        // https://github.com/ecomfe/echarts/issues/2869\n                        || (dist === minDist && diff > 0)\n                    )\n                ) {\n                    minDist = dist;\n                    nearestIdx = i;\n                }\n            }\n        }\n        return nearestIdx;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38)))\n\n/***/ }),\n/* 340 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(329);\n\n    function Scale() {\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n/* 341 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(319);\n    var BoundingRect = __webpack_require__(328);\n    var numberUtil = __webpack_require__(320);\n    var formatUtil = __webpack_require__(326);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n        var hNames = ['width', 'left', 'right']; // Order by priority.\n        var vNames = ['height', 'top', 'bottom']; // Order by priority.\n        var hResult = merge(hNames);\n        var vResult = merge(vNames);\n\n        copy(hNames, targetOption, hResult);\n        copy(vNames, targetOption, vResult);\n\n        function merge(names) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n/***/ }),\n/* 342 */\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n/* 343 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(319);\n    var Element = __webpack_require__(370);\n    var BoundingRect = __webpack_require__(328);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n/* 344 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(332);\n    var vec2 = __webpack_require__(321);\n    var bbox = __webpack_require__(584);\n    var BoundingRect = __webpack_require__(328);\n    var dpr = __webpack_require__(342).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n/* 345 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(336);\n    var env = __webpack_require__(325);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n/* 346 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n/* 347 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.fetchList = fetchList;\nexports.fetchUnReadList = fetchUnReadList;\nexports.delReceiveMail = delReceiveMail;\n\nvar _fetch = __webpack_require__(35);\n\nvar _fetch2 = _interopRequireDefault(_fetch);\n\nvar _Observable = __webpack_require__(64);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction fetchList(query) {\n    return (0, _fetch2.default)({\n        url: '/inbox/list',\n        method: 'get',\n        params: query\n    });\n}\n\nfunction fetchUnReadList() {\n    return (0, _fetch2.default)({\n        url: '/inbox/list',\n        method: 'get',\n        params: { status: 0, sort: 'receiveDate', order: 'descending' }\n    });\n}\n\nfunction delReceiveMail(idArr) {\n    var idStr = String(idArr);\n    console.log('要删除的收件id:' + idStr);\n    return _Observable.Observable.create(function (observer) {\n        setTimeout(function () {\n            observer.next(true);\n        }, 1000);\n    });\n}\n\n/***/ }),\n/* 348 */,\n/* 349 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(319);\n\n    /**\n     * Interface of Coordinate System Class\n     *\n     * create:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *     @return {Object} coordinate system instance\n     *\n     * update:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *\n     * convertToPixel:\n     * convertFromPixel:\n     *     These two methods is also responsible for determine whether this\n     *     coodinate system is applicable to the given `finder`.\n     *     Each coordinate system will be tried, util one returns none\n     *     null/undefined value.\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {Object} finder\n     *     @param {Array|number} value\n     *     @return {Array|number} convert result.\n     *\n     * containPoint:\n     *     @param {Array.<number>} point In pixel coordinate system.\n     *     @return {boolean}\n     */\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n/* 350 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(490);\n    var IntervalScale = __webpack_require__(352);\n    __webpack_require__(491);\n    __webpack_require__(489);\n    var Scale = __webpack_require__(340);\n\n    var numberUtil = __webpack_require__(320);\n    var zrUtil = __webpack_require__(319);\n    var textContain = __webpack_require__(335);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        axis.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var extent = axisHelper.getScaleExtent(axis, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axis.type === 'category' ? scale.getLabel(tick) : tick,\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n/* 351 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(319);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n/* 352 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(320);\n    var formatUtil = __webpack_require__(326);\n    var Scale = __webpack_require__(340);\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            var interval = this._interval;\n            var extent = this._extent;\n            var ticks = [];\n\n            // Consider this case: using dataZoom toolbox, zoom and zoom.\n            var safeLimit = 10000;\n\n            if (interval) {\n                var niceExtent = this._niceExtent;\n                var precision = getPrecisionSafe(interval) + 2;\n\n                if (extent[0] < niceExtent[0]) {\n                    ticks.push(extent[0]);\n                }\n                var tick = niceExtent[0];\n\n                while (tick <= niceExtent[1]) {\n                    ticks.push(tick);\n                    // Avoid rounding error\n                    tick = roundingErrorFix(tick + interval, precision);\n                    if (ticks.length > safeLimit) {\n                        return [];\n                    }\n                }\n                // Consider this case: the last item of ticks is smaller\n                // than niceExtent[1] and niceExtent[1] === extent[1].\n                if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceExtent[1])) {\n                    ticks.push(extent[1]);\n                }\n            }\n\n            return ticks;\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} n\n         * @return {number}\n         */\n        getLabel: function (data) {\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n            // var niceSpan = numberUtil.nice(span, false);\n            var step = roundingErrorFix(\n                numberUtil.nice(span / splitNumber, true),\n                Math.max(\n                    getPrecisionSafe(extent[0]),\n                    getPrecisionSafe(extent[1])\n                // extent may be [0, 1], and step should have 1 more digits.\n                // To make it safe we add 2 more digits\n                ) + 2\n            );\n\n            var precision = getPrecisionSafe(step) + 2;\n            // Niced extent inside original extent\n            var niceExtent = [\n                roundingErrorFix(mathCeil(extent[0] / step) * step, precision),\n                roundingErrorFix(mathFloor(extent[1] / step) * step, precision)\n            ];\n\n            this._interval = step;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundingErrorFix(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundingErrorFix(mathCeil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n/* 353 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(319);\n    var clazz = __webpack_require__(329);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n/* 354 */,\n/* 355 */,\n/* 356 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n/* 357 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(319);\n\n    var Style = __webpack_require__(379);\n\n    var Element = __webpack_require__(370);\n    var RectText = __webpack_require__(593);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n/* 358 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n/* 359 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(319);\n    var symbolUtil = __webpack_require__(367);\n    var graphic = __webpack_require__(322);\n    var numberUtil = __webpack_require__(320);\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n/* 360 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(322);\n    var Symbol = __webpack_require__(359);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n/* 361 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var modelUtil = __webpack_require__(327);\n    var zrUtil = __webpack_require__(319);\n    var env = __webpack_require__(325);\n\n    var formatUtil = __webpack_require__(326);\n    var addCommas = formatUtil.addCommas;\n    var encodeHTML = formatUtil.encodeHTML;\n\n    function fillLabel(opt) {\n        modelUtil.defaultEmphasis(\n            opt.label,\n            modelUtil.LABEL_OPTIONS\n        );\n    }\n    var MarkerModel = __webpack_require__(324).extendComponentModel({\n\n        type: 'marker',\n\n        dependencies: ['series', 'grid', 'polar', 'geo'],\n        /**\n         * @overrite\n         */\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            if (__DEV__) {\n                if (this.type === 'marker') {\n                    throw new Error('Marker component is abstract component. Use markLine, markPoint, markArea instead.');\n                }\n            }\n            this.mergeDefaultAndTheme(option, ecModel);\n            this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var hostSeries = this.__hostSeries;\n            return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n        },\n\n        mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n            var MarkerModel = this.constructor;\n            var modelPropName = this.mainType + 'Model';\n            if (!createdBySelf) {\n                ecModel.eachSeries(function (seriesModel) {\n\n                    var markerOpt = seriesModel.get(this.mainType);\n\n                    var markerModel = seriesModel[modelPropName];\n                    if (!markerOpt || !markerOpt.data) {\n                        seriesModel[modelPropName] = null;\n                        return;\n                    }\n                    if (!markerModel) {\n                        if (isInit) {\n                            // Default label emphasis `position` and `show`\n                            fillLabel(markerOpt);\n                        }\n                        zrUtil.each(markerOpt.data, function (item) {\n                            // FIXME Overwrite fillLabel method ?\n                            if (item instanceof Array) {\n                                fillLabel(item[0]);\n                                fillLabel(item[1]);\n                            }\n                            else {\n                                fillLabel(item);\n                            }\n                        });\n\n                        markerModel = new MarkerModel(\n                            markerOpt, this, ecModel\n                        );\n\n                        zrUtil.extend(markerModel, {\n                            mainType: this.mainType,\n                            // Use the same series index and name\n                            seriesIndex: seriesModel.seriesIndex,\n                            name: seriesModel.name,\n                            createdBySelf: true\n                        });\n\n                        markerModel.__hostSeries = seriesModel;\n                    }\n                    else {\n                        markerModel.mergeOption(markerOpt, ecModel, true);\n                    }\n                    seriesModel[modelPropName] = markerModel;\n                }, this);\n            }\n        },\n\n        formatTooltip: function (dataIndex) {\n            var data = this.getData();\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n            var name = data.getName(dataIndex);\n            var html = encodeHTML(this.name);\n            if (value != null || name) {\n                html += '<br />';\n            }\n            if (name) {\n                html += encodeHTML(name);\n                if (value != null) {\n                    html += ' : ';\n                }\n            }\n            if (value != null) {\n                html += encodeHTML(formattedValue);\n            }\n            return html;\n        },\n\n        getData: function () {\n            return this._data;\n        },\n\n        setData: function (data) {\n            this._data = data;\n        }\n    });\n\n    zrUtil.mixin(MarkerModel, modelUtil.dataFormatMixin);\n\n    module.exports = MarkerModel;\n\n\n/***/ }),\n/* 362 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(324).extendComponentView({\n\n        type: 'marker',\n\n        init: function () {\n            /**\n             * Markline grouped by series\n             * @private\n             * @type {Object}\n             */\n            this.markerGroupMap = {};\n        },\n\n        render: function (markerModel, ecModel, api) {\n            var markerGroupMap = this.markerGroupMap;\n            for (var name in markerGroupMap) {\n                if (markerGroupMap.hasOwnProperty(name)) {\n                    markerGroupMap[name].__keep = false;\n                }\n            }\n\n            var markerModelKey = this.type + 'Model';\n            ecModel.eachSeries(function (seriesModel) {\n                var markerModel = seriesModel[markerModelKey];\n                markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n            }, this);\n\n            for (var name in markerGroupMap) {\n                if (markerGroupMap.hasOwnProperty(name) && !markerGroupMap[name].__keep) {\n                    this.group.remove(markerGroupMap[name].group);\n                }\n            }\n        },\n\n        renderSeries: function () {}\n    });\n\n\n/***/ }),\n/* 363 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(319);\n    var numberUtil = __webpack_require__(320);\n    var indexOf = zrUtil.indexOf;\n\n    function hasXOrY(item) {\n        return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n    }\n\n    function hasXAndY(item) {\n        return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n    }\n\n    function getPrecision(data, valueAxisDim, dataIndex) {\n        var precision = -1;\n        do {\n            precision = Math.max(\n                numberUtil.getPrecision(data.get(\n                    valueAxisDim, dataIndex\n                )),\n                precision\n            );\n            data = data.stackedOn;\n        } while (data);\n\n        return precision;\n    }\n\n    function markerTypeCalculatorWithExtent(\n        mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex\n    ) {\n        var coordArr = [];\n        var value = numCalculate(data, targetDataDim, mlType);\n\n        var dataIndex = data.indexOfNearest(targetDataDim, value, true);\n        coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex, true);\n        coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex, true);\n\n        var precision = getPrecision(data, targetDataDim, dataIndex);\n        if (precision >= 0) {\n            coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n        }\n\n        return coordArr;\n    }\n\n    var curry = zrUtil.curry;\n    // TODO Specified percent\n    var markerTypeCalculator = {\n        /**\n         * @method\n         * @param {module:echarts/data/List} data\n         * @param {string} baseAxisDim\n         * @param {string} valueAxisDim\n         */\n        min: curry(markerTypeCalculatorWithExtent, 'min'),\n        /**\n         * @method\n         * @param {module:echarts/data/List} data\n         * @param {string} baseAxisDim\n         * @param {string} valueAxisDim\n         */\n        max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n        /**\n         * @method\n         * @param {module:echarts/data/List} data\n         * @param {string} baseAxisDim\n         * @param {string} valueAxisDim\n         */\n        average: curry(markerTypeCalculatorWithExtent, 'average')\n    };\n\n    /**\n     * Transform markPoint data item to format used in List by do the following\n     * 1. Calculate statistic like `max`, `min`, `average`\n     * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n     * @param  {module:echarts/model/Series} seriesModel\n     * @param  {module:echarts/coord/*} [coordSys]\n     * @param  {Object} item\n     * @return {Object}\n     */\n    var dataTransform = function (seriesModel, item) {\n        var data = seriesModel.getData();\n        var coordSys = seriesModel.coordinateSystem;\n\n        // 1. If not specify the position with pixel directly\n        // 2. If `coord` is not a data array. Which uses `xAxis`,\n        // `yAxis` to specify the coord on each dimension\n\n        // parseFloat first because item.x and item.y can be percent string like '20%'\n        if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n            var dims = coordSys.dimensions;\n            var axisInfo = getAxisInfo(item, data, coordSys, seriesModel);\n\n            // Clone the option\n            // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n            item = zrUtil.clone(item);\n\n            if (item.type\n                && markerTypeCalculator[item.type]\n                && axisInfo.baseAxis && axisInfo.valueAxis\n            ) {\n                var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n                var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n\n                item.coord = markerTypeCalculator[item.type](\n                    data, axisInfo.baseDataDim, axisInfo.valueDataDim,\n                    otherCoordIndex, targetCoordIndex\n                );\n                // Force to use the value of calculated value.\n                item.value = item.coord[targetCoordIndex];\n            }\n            else {\n                // FIXME Only has one of xAxis and yAxis.\n                var coord = [\n                    item.xAxis != null ? item.xAxis : item.radiusAxis,\n                    item.yAxis != null ? item.yAxis : item.angleAxis\n                ];\n                // Each coord support max, min, average\n                for (var i = 0; i < 2; i++) {\n                    if (markerTypeCalculator[coord[i]]) {\n                        var dataDim = seriesModel.coordDimToDataDim(dims[i])[0];\n                        coord[i] = numCalculate(data, dataDim, coord[i]);\n                    }\n                }\n                item.coord = coord;\n            }\n        }\n        return item;\n    };\n\n    var getAxisInfo = function (item, data, coordSys, seriesModel) {\n        var ret = {};\n\n        if (item.valueIndex != null || item.valueDim != null) {\n            ret.valueDataDim = item.valueIndex != null\n                ? data.getDimension(item.valueIndex) : item.valueDim;\n            ret.valueAxis = coordSys.getAxis(seriesModel.dataDimToCoordDim(ret.valueDataDim));\n            ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n            ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n        }\n        else {\n            ret.baseAxis = seriesModel.getBaseAxis();\n            ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n            ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n            ret.valueDataDim = seriesModel.coordDimToDataDim(ret.valueAxis.dim)[0];\n        }\n\n        return ret;\n    };\n\n    /**\n     * Filter data which is out of coordinateSystem range\n     * [dataFilter description]\n     * @param  {module:echarts/coord/*} [coordSys]\n     * @param  {Object} item\n     * @return {boolean}\n     */\n    var dataFilter = function (coordSys, item) {\n        // Alwalys return true if there is no coordSys\n        return (coordSys && coordSys.containData && item.coord && !hasXOrY(item))\n            ? coordSys.containData(item.coord) : true;\n    };\n\n    var dimValueGetter = function (item, dimName, dataIndex, dimIndex) {\n        // x, y, radius, angle\n        if (dimIndex < 2) {\n            return item.coord && item.coord[dimIndex];\n        }\n        return item.value;\n    };\n\n    var numCalculate = function (data, valueDataDim, type) {\n        if (type === 'average') {\n            var sum = 0;\n            var count = 0;\n            data.each(valueDataDim, function (val, idx) {\n                if (!isNaN(val)) {\n                    sum += val;\n                    count++;\n                }\n            }, true);\n            return sum / count;\n        }\n        else {\n            return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n        }\n    };\n\n    module.exports = {\n        dataTransform: dataTransform,\n        dataFilter: dataFilter,\n        dimValueGetter: dimValueGetter,\n        getAxisInfo: getAxisInfo,\n        numCalculate: numCalculate\n    };\n\n\n/***/ }),\n/* 364 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(330);\n    var zrUtil = __webpack_require__(319);\n    var axisModelCreator = __webpack_require__(467);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(466));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n/* 365 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(319);\n    var formatUtil = __webpack_require__(326);\n    var classUtil = __webpack_require__(329);\n    var modelUtil = __webpack_require__(327);\n    var ComponentModel = __webpack_require__(330);\n    var colorPaletteMixin = __webpack_require__(366);\n    var env = __webpack_require__(325);\n    var layout = __webpack_require__(341);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', this.getInitialData(option, ecModel));\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Array.<number>} data indices.\n         */\n        getAxisTooltipDataIndex: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n/* 366 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(329);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n/* 367 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(322);\n    var BoundingRect = __webpack_require__(328);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n/* 368 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(343);\n    var componentUtil = __webpack_require__(353);\n    var clazzUtil = __webpack_require__(329);\n    var modelUtil = __webpack_require__(327);\n    var zrUtil = __webpack_require__(319);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n/* 369 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(500)\n}\nvar Component = __webpack_require__(2)(\n  /* script */\n  __webpack_require__(383),\n  /* template */\n  __webpack_require__(546),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-175b5043\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 370 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(375);\n    var Eventful = __webpack_require__(336);\n    var Transformable = __webpack_require__(605);\n    var Animatable = __webpack_require__(603);\n    var zrUtil = __webpack_require__(319);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n/* 371 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(575);\n    var color = __webpack_require__(337);\n    var util = __webpack_require__(319);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n/* 372 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n/***/ }),\n/* 373 */\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n/* 374 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n/* 375 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n/* 376 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(342);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n/* 377 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(357);\n    var BoundingRect = __webpack_require__(328);\n    var zrUtil = __webpack_require__(319);\n\n    var LRU = __webpack_require__(374);\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n/* 378 */\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n/* 379 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n/* 380 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(592);\n    var smoothBezier = __webpack_require__(591);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n/* 381 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar echarts = __webpack_require__(324);\n\n__webpack_require__(445);\n\n__webpack_require__(454);\n__webpack_require__(455);\n__webpack_require__(460);\nexports.default = {\n  name: 'lineChart',\n  props: {\n    className: {\n      type: String,\n      default: 'line-chart'\n    },\n    id: {\n      type: String,\n      default: 'line-chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '280px'\n    },\n    listData: {\n      type: Array,\n      require: true\n    }\n  },\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n\n  watch: {\n    listData: function listData(dataList) {\n      this.setLine(dataList);\n    }\n  },\n  mounted: function mounted() {\n    this.chart = echarts.init(document.getElementById(this.id));\n    this.setLine(this.listData);\n  },\n\n  methods: {\n    setLine: function setLine(dataList) {\n      var xAxisData = [];\n      var receiveData = [];\n      var sendData = [];\n      for (var i = 0; i < dataList.length; i++) {\n        var item = dataList[i];\n        xAxisData.push(item.week.substring(item.week.length - 2) + '周');\n        receiveData.push(item.receiveCount);\n        sendData.push(item.sendCount);\n      }\n      var markLineReceive = [];\n      var markLineSend = [];\n      for (var _i = 1; _i < receiveData.length; _i++) {\n        markLineReceive.push([{\n          xAxis: _i - 1,\n          yAxis: receiveData[_i - 1],\n          value: receiveData[_i] - receiveData[_i - 1]\n        }, {\n          xAxis: _i,\n          yAxis: receiveData[_i]\n        }]);\n      }\n      for (var _i2 = 1; _i2 < sendData.length; _i2++) {\n        markLineSend.push([{\n          xAxis: _i2 - 1,\n          yAxis: sendData[_i2 - 1],\n          value: sendData[_i2] - sendData[_i2 - 1]\n        }, {\n          xAxis: _i2,\n          yAxis: sendData[_i2]\n        }]);\n      }\n      this.chart.setOption({\n        title: {\n          text: 'Awesome Chart'\n        },\n        grid: {\n          left: 0,\n          right: 0,\n          bottom: 20,\n          containLabel: true\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        animationDelay: 1000,\n        xAxis: {\n          data: xAxisData,\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          }\n        },\n\n        yAxis: {\n          splitLine: {\n            show: false\n          },\n          show: false\n        },\n        series: [{\n          name: '收件数',\n          type: 'line',\n          data: receiveData,\n          markPoint: {\n            data: [{ type: 'max', name: '最大值' }, { type: 'min', name: '最小值' }]\n          },\n          itemStyle: {\n            normal: {\n              color: '#30b08f'\n            }\n          },\n          markLine: {\n            silent: true,\n            smooth: true,\n            effect: {\n              show: true\n            },\n            animationDuration: function animationDuration(idx) {\n              return idx * 100;\n            },\n\n            animationDelay: 1000,\n            animationEasing: 'quadraticInOut',\n            distance: 1,\n            label: {\n              normal: {\n                position: 'middle'\n              }\n            },\n            symbol: ['none', 'none'],\n            data: markLineReceive\n          }\n        }, {\n          name: '发件数',\n          type: 'line',\n          data: sendData,\n          markPoint: {\n            data: [{ type: 'max', name: '最大值' }, { type: 'min', name: '最小值' }]\n          },\n          itemStyle: {\n            normal: {\n              color: '#F08A5D'\n            }\n          },\n          markLine: {\n            silent: true,\n            smooth: true,\n            effect: {\n              show: true\n            },\n            animationDuration: function animationDuration(idx) {\n              return idx * 100;\n            },\n\n            animationDelay: 1000,\n            animationEasing: 'quadraticInOut',\n            distance: 1,\n            label: {\n              normal: {\n                position: 'middle'\n              }\n            },\n            symbol: ['none', 'none'],\n            data: markLineSend\n          }\n        }]\n      });\n    }\n  }\n};\n\n/***/ }),\n/* 382 */,\n/* 383 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  name: 'PanThumb',\n  props: {\n    image: {\n      type: String,\n      required: true\n    },\n    zIndex: {\n      type: Number,\n      default: 100\n    },\n    width: {\n      type: String,\n      default: '150px'\n    },\n    height: {\n      type: String,\n      default: '150px'\n    }\n  },\n  data: function data() {\n    return {};\n  }\n};\n\n/***/ }),\n/* 384 */,\n/* 385 */,\n/* 386 */,\n/* 387 */,\n/* 388 */,\n/* 389 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = __webpack_require__(36);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _vuex = __webpack_require__(25);\n\nvar _PanThumb = __webpack_require__(369);\n\nvar _PanThumb2 = _interopRequireDefault(_PanThumb);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'dashboard-default',\n  components: { PanThumb: _PanThumb2.default },\n  data: function data() {\n    return {\n      emptyGif: 'https://wpimg.wallstcn.com/0e03b7da-db9e-4819-ba10-9016ddfdaed3'\n    };\n  },\n\n  computed: (0, _extends3.default)({}, (0, _vuex.mapGetters)(['name', 'avatar', 'email', 'uid', 'introduction', 'roles']))\n};\n\n/***/ }),\n/* 390 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = __webpack_require__(36);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _vuex = __webpack_require__(25);\n\nvar _PanThumb = __webpack_require__(369);\n\nvar _PanThumb2 = _interopRequireDefault(_PanThumb);\n\nvar _weekly_using = __webpack_require__(540);\n\nvar _weekly_using2 = _interopRequireDefault(_weekly_using);\n\nvar _inbox = __webpack_require__(347);\n\nvar _vueCountTo = __webpack_require__(530);\n\nvar _vueCountTo2 = _interopRequireDefault(_vueCountTo);\n\nvar _index = __webpack_require__(9);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n    name: 'dashboard',\n    components: { PanThumb: _PanThumb2.default, WeeklyUsing: _weekly_using2.default, countTo: _vueCountTo2.default },\n    data: function data() {\n        return {\n            chart: null,\n            statisticsData: {\n                inbox_count: 512,\n                outbox_count: 256,\n                draft_count: 128,\n                month_inbox_count: 28,\n                unread_mail: [],\n                weekly_using: [{ receiveCount: 40, sendCount: 21, week: '201701' }, { receiveCount: 48, sendCount: 19, week: '201702' }, { receiveCount: 55, sendCount: 23, week: '201703' }, { receiveCount: 68, sendCount: 26, week: '201704' }, { receiveCount: 52, sendCount: 21, week: '201705' }, { receiveCount: 64, sendCount: 23, week: '201706' }, { receiveCount: 69, sendCount: 20, week: '201707' }, { receiveCount: 61, sendCount: 26, week: '201708' }, { receiveCount: 78, sendCount: 32, week: '201709' }, { receiveCount: 73, sendCount: 22, week: '2017010' }, { receiveCount: 62, sendCount: 20, week: '2017011' }, { receiveCount: 66, sendCount: 23, week: '2017012' }],\n                frequertContacts: [{\n                    name: '撸力',\n                    mail: 'ruli@snh48.com',\n                    avatarUrl: 'http://or7rpa0sk.bkt.clouddn.com/avatar.jpg'\n                }, {\n                    name: '小鞠',\n                    mail: 'xiaoju@snh48.com',\n                    avatarUrl: 'http://or7rpa0sk.bkt.clouddn.com/avatar.jpg'\n                }, {\n                    name: '啊黄',\n                    mail: 'ahuang@snh48.com',\n                    avatarUrl: 'http://or7rpa0sk.bkt.clouddn.com/avatar.jpg'\n                }, {\n                    name: '二狗',\n                    mail: 'ergou@snh48.com',\n                    avatarUrl: 'http://or7rpa0sk.bkt.clouddn.com/avatar.jpg'\n                }, {\n                    name: '大哥',\n                    mail: 'dage@snh48.com',\n                    avatarUrl: 'http://or7rpa0sk.bkt.clouddn.com/avatar.jpg'\n                }, {\n                    name: '小四',\n                    mail: 'xiaosi@snh48.com',\n                    avatarUrl: 'http://or7rpa0sk.bkt.clouddn.com/avatar.jpg'\n                }, {\n                    name: '十七',\n                    mail: 'shiqi@snh48.com',\n                    avatarUrl: 'http://or7rpa0sk.bkt.clouddn.com/avatar.jpg'\n                }, {\n                    name: '爱总',\n                    mail: 'aizong@snh48.com',\n                    avatarUrl: 'http://or7rpa0sk.bkt.clouddn.com/avatar.jpg'\n                }]\n            },\n            unreadList: []\n        };\n    },\n    created: function created() {\n        this.fetchData();\n    },\n\n    computed: (0, _extends3.default)({}, (0, _vuex.mapGetters)(['name', 'avatar', 'email', 'uid', 'introduction', 'roles']), {\n        unreadMails: function unreadMails() {\n            return this.unreadList.slice(0, 6);\n        }\n    }),\n    methods: {\n        fetchData: function fetchData() {\n            var _this = this;\n\n            (0, _inbox.fetchUnReadList)().then(function (res) {\n                _this.unreadList = res.data.items;\n            });\n        },\n        toUnreadMail: function toUnreadMail(id) {\n            this.$store.commit('SET_MAIL_TYPE', 'receive');\n            this.$router.push({ path: '/mail_detail/index/' + id });\n        }\n    }\n};\n\n/***/ }),\n/* 391 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _line = __webpack_require__(531);\n\nvar _line2 = _interopRequireDefault(_line);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'weekly-using',\n  components: { LineChart: _line2.default },\n  props: {\n    listData: {\n      type: Array,\n      default: [],\n      require: true\n    }\n  },\n  data: function data() {\n    return {};\n  }\n};\n\n/***/ }),\n/* 392 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = __webpack_require__(36);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _vuex = __webpack_require__(25);\n\nvar _index = __webpack_require__(539);\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = __webpack_require__(538);\n\nvar _index4 = _interopRequireDefault(_index3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'dashboard',\n  components: { EditorDashboard: _index2.default, DefaultDashboard: _index4.default },\n  data: function data() {\n    return {\n      currentRole: 'EditorDashboard'\n    };\n  },\n\n  computed: (0, _extends3.default)({}, (0, _vuex.mapGetters)(['name', 'avatar', 'email', 'introduction', 'roles'])),\n  created: function created() {\n    if (this.roles.indexOf('admin') >= 0) {\n      return;\n    }\n\n    this.currentRole = 'DefaultDashboard';\n  }\n};\n\n/***/ }),\n/* 393 */,\n/* 394 */,\n/* 395 */,\n/* 396 */,\n/* 397 */,\n/* 398 */,\n/* 399 */,\n/* 400 */,\n/* 401 */,\n/* 402 */,\n/* 403 */,\n/* 404 */,\n/* 405 */,\n/* 406 */,\n/* 407 */,\n/* 408 */,\n/* 409 */,\n/* 410 */,\n/* 411 */,\n/* 412 */,\n/* 413 */,\n/* 414 */,\n/* 415 */,\n/* 416 */,\n/* 417 */,\n/* 418 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(300)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".pan-item[data-v-175b5043]{width:200px;height:200px;border-radius:50%;display:inline-block;position:relative;cursor:default;box-shadow:0 1px 3px rgba(0,0,0,.2)}.pan-info-roles-container[data-v-175b5043]{padding:20px;text-align:center}.pan-thumb[data-v-175b5043]{width:100%;height:100%;background-size:100%;border-radius:50%;overflow:hidden;position:absolute;transform-origin:95% 40%;transition:all .3s ease-in-out}.pan-thumb[data-v-175b5043]:after{content:\\\"\\\";width:8px;height:8px;position:absolute;border-radius:50%;top:40%;left:95%;margin:-4px 0 0 -4px;background:radial-gradient(ellipse at center,#0e0e0e 0,#7d7e7d 100%);box-shadow:0 0 1px hsla(0,0%,100%,.9)}.pan-info[data-v-175b5043]{position:absolute;width:inherit;height:inherit;border-radius:50%;overflow:hidden;box-shadow:inset 0 0 0 5px rgba(0,0,0,.05)}.pan-info h3[data-v-175b5043]{color:#fff;text-transform:uppercase;position:relative;letter-spacing:2px;font-size:18px;margin:0 60px;padding:22px 0 0;height:85px;font-family:Open Sans,Arial,sans-serif;text-shadow:0 0 1px #fff,0 1px 2px rgba(0,0,0,.3)}.pan-info p[data-v-175b5043]{color:#fff;padding:10px 5px;font-style:italic;margin:0 30px;font-size:12px;border-top:1px solid hsla(0,0%,100%,.5)}.pan-info p a[data-v-175b5043]{display:block;color:#333;width:80px;height:80px;background:hsla(0,0%,100%,.3);border-radius:50%;color:#fff;font-style:normal;font-weight:700;text-transform:uppercase;font-size:9px;letter-spacing:1px;padding-top:24px;margin:7px auto 0;font-family:Open Sans,Arial,sans-serif;opacity:0;transition:transform .3s ease-in-out .2s,opacity .3s ease-in-out .2s,background .2s linear 0s;transform:translateX(60px) rotate(90deg)}.pan-info p a[data-v-175b5043]:hover{background:hsla(0,0%,100%,.5)}.pan-item:hover .pan-thumb[data-v-175b5043]{transform:rotate(-110deg)}.pan-item:hover .pan-info p a[data-v-175b5043]{opacity:1;transform:translateX(0) rotate(0deg)}\", \"\", {\"version\":3,\"sources\":[\"E:/web/Vue/vue-mail-front/src/components/PanThumb/index.vue\"],\"names\":[],\"mappings\":\"AACA,2BACI,YAAa,AACb,aAAc,AACd,kBAAmB,AACnB,qBAAsB,AACtB,kBAAmB,AACnB,eAAgB,AAChB,mCAAyC,CAC5C,AACD,2CACI,aAAc,AACd,iBAAmB,CACtB,AACD,4BACI,WAAY,AACZ,YAAa,AACb,qBAAsB,AACtB,kBAAmB,AACnB,gBAAiB,AACjB,kBAAmB,AACnB,yBAA0B,AAC1B,8BAAiC,CACpC,AACD,kCACI,WAAY,AACZ,UAAW,AACX,WAAY,AACZ,kBAAmB,AACnB,kBAAmB,AACnB,QAAS,AACT,SAAU,AACV,qBAAsB,AACtB,qEAAoG,AACpG,qCAA6C,CAChD,AACD,2BACI,kBAAmB,AACnB,cAAe,AACf,eAAgB,AAChB,kBAAmB,AACnB,gBAAiB,AACjB,0CAAgD,CACnD,AACD,8BACI,WAAY,AACZ,yBAA0B,AAC1B,kBAAmB,AACnB,mBAAoB,AACpB,eAAgB,AAChB,cAAe,AACf,iBAAoB,AACpB,YAAa,AACb,uCAA4C,AAC5C,iDAC6B,CAChC,AACD,6BACI,WAAY,AACZ,iBAAkB,AAClB,kBAAmB,AACnB,cAAe,AACf,eAAgB,AAChB,uCAA+C,CAClD,AACD,+BACI,cAAe,AACf,WAAY,AACZ,WAAY,AACZ,YAAa,AACb,8BAAqC,AACrC,kBAAmB,AACnB,WAAY,AACZ,kBAAmB,AACnB,gBAAiB,AACjB,yBAA0B,AAC1B,cAAe,AACf,mBAAoB,AACpB,iBAAkB,AAClB,kBAAmB,AACnB,uCAA4C,AAC5C,UAAW,AACX,8FAE0B,AAC1B,wCAA0C,CAC7C,AACD,qCACI,6BAAqC,CACxC,AACD,4CACI,yBAA2B,CAC9B,AACD,+CACI,UAAW,AACX,oCAAwC,CAC3C\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.pan-item[data-v-175b5043] {\\n    width: 200px;\\n    height: 200px;\\n    border-radius: 50%;\\n    display: inline-block;\\n    position: relative;\\n    cursor: default;\\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\\n}\\n.pan-info-roles-container[data-v-175b5043] {\\n    padding: 20px;\\n    text-align: center;\\n}\\n.pan-thumb[data-v-175b5043] {\\n    width: 100%;\\n    height: 100%;\\n    background-size: 100%;\\n    border-radius: 50%;\\n    overflow: hidden;\\n    position: absolute;\\n    transform-origin: 95% 40%;\\n    transition: all 0.3s ease-in-out;\\n}\\n.pan-thumb[data-v-175b5043]:after {\\n    content: '';\\n    width: 8px;\\n    height: 8px;\\n    position: absolute;\\n    border-radius: 50%;\\n    top: 40%;\\n    left: 95%;\\n    margin: -4px 0 0 -4px;\\n    background: radial-gradient(ellipse at center, rgba(14, 14, 14, 1) 0%, rgba(125, 126, 125, 1) 100%);\\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.9);\\n}\\n.pan-info[data-v-175b5043] {\\n    position: absolute;\\n    width: inherit;\\n    height: inherit;\\n    border-radius: 50%;\\n    overflow: hidden;\\n    box-shadow: inset 0 0 0 5px rgba(0, 0, 0, 0.05);\\n}\\n.pan-info h3[data-v-175b5043] {\\n    color: #fff;\\n    text-transform: uppercase;\\n    position: relative;\\n    letter-spacing: 2px;\\n    font-size: 18px;\\n    margin: 0 60px;\\n    padding: 22px 0 0 0;\\n    height: 85px;\\n    font-family: 'Open Sans', Arial, sans-serif;\\n    text-shadow: 0 0 1px #fff,\\n    0 1px 2px rgba(0, 0, 0, 0.3);\\n}\\n.pan-info p[data-v-175b5043] {\\n    color: #fff;\\n    padding: 10px 5px;\\n    font-style: italic;\\n    margin: 0 30px;\\n    font-size: 12px;\\n    border-top: 1px solid rgba(255, 255, 255, 0.5);\\n}\\n.pan-info p a[data-v-175b5043] {\\n    display: block;\\n    color: #333;\\n    width: 80px;\\n    height: 80px;\\n    background: rgba(255, 255, 255, 0.3);\\n    border-radius: 50%;\\n    color: #fff;\\n    font-style: normal;\\n    font-weight: 700;\\n    text-transform: uppercase;\\n    font-size: 9px;\\n    letter-spacing: 1px;\\n    padding-top: 24px;\\n    margin: 7px auto 0;\\n    font-family: 'Open Sans', Arial, sans-serif;\\n    opacity: 0;\\n    transition: transform 0.3s ease-in-out 0.2s,\\n    opacity 0.3s ease-in-out 0.2s,\\n    background 0.2s linear 0s;\\n    transform: translateX(60px) rotate(90deg);\\n}\\n.pan-info p a[data-v-175b5043]:hover {\\n    background: rgba(255, 255, 255, 0.5);\\n}\\n.pan-item:hover .pan-thumb[data-v-175b5043] {\\n    transform: rotate(-110deg);\\n}\\n.pan-item:hover .pan-info p a[data-v-175b5043] {\\n    opacity: 1;\\n    transform: translateX(0px) rotate(0deg);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 419 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(300)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".weekly-using-container{width:100%;border-bottom:1px solid #ccc}.weekly-using-container-title{color:#7f8c8d;font-size:16px;display:inline-block;margin-top:10px}\", \"\", {\"version\":3,\"sources\":[\"E:/web/Vue/vue-mail-front/src/views/dashboard/editor/weekly_using.vue\"],\"names\":[],\"mappings\":\"AACA,wBACI,WAAY,AACZ,4BAA8B,CACjC,AACD,8BACI,cAAe,AACf,eAAgB,AAChB,qBAAsB,AACtB,eAAiB,CACpB\",\"file\":\"weekly_using.vue\",\"sourcesContent\":[\"\\n.weekly-using-container {\\n    width: 100%;\\n    border-bottom: 1px solid #ccc;\\n}\\n.weekly-using-container-title {\\n    color: #7F8C8D;\\n    font-size: 16px;\\n    display: inline-block;\\n    margin-top: 10px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 420 */,\n/* 421 */,\n/* 422 */,\n/* 423 */,\n/* 424 */,\n/* 425 */,\n/* 426 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(300)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".emptyGif[data-v-50d87894]{display:block;width:45%;margin:0 auto}.dashboard-editor-container[data-v-50d87894]{background-color:#e3e3e3;min-height:100vh;margin-top:-50px;padding:100px 60px 0}.dashboard-editor-container .pan-info-roles[data-v-50d87894]{font-size:12px;font-weight:700;color:#333;display:block}.dashboard-editor-container .info-container[data-v-50d87894]{position:relative;margin-left:190px;height:150px;line-height:200px}.dashboard-editor-container .info-container .display_name[data-v-50d87894]{font-size:48px;line-height:48px;color:#212121;position:absolute;top:25px}\", \"\", {\"version\":3,\"sources\":[\"E:/web/Vue/vue-mail-front/src/views/dashboard/default/index.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,cAAe,AACf,UAAW,AACX,aAAe,CAChB,AACD,6CACE,yBAA0B,AAC1B,iBAAkB,AAClB,iBAAkB,AAClB,oBAAwB,CACzB,AACD,6DACI,eAAgB,AAChB,gBAAiB,AACjB,WAAY,AACZ,aAAe,CAClB,AACD,6DACI,kBAAmB,AACnB,kBAAmB,AACnB,aAAc,AACd,iBAAmB,CACtB,AACD,2EACM,eAAgB,AAChB,iBAAkB,AAClB,cAAe,AACf,kBAAmB,AACnB,QAAU,CACf\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.emptyGif[data-v-50d87894] {\\n  display: block;\\n  width: 45%;\\n  margin: 0 auto;\\n}\\n.dashboard-editor-container[data-v-50d87894] {\\n  background-color: #e3e3e3;\\n  min-height: 100vh;\\n  margin-top: -50px;\\n  padding: 100px 60px 0px;\\n}\\n.dashboard-editor-container .pan-info-roles[data-v-50d87894] {\\n    font-size: 12px;\\n    font-weight: 700;\\n    color: #333;\\n    display: block;\\n}\\n.dashboard-editor-container .info-container[data-v-50d87894] {\\n    position: relative;\\n    margin-left: 190px;\\n    height: 150px;\\n    line-height: 200px;\\n}\\n.dashboard-editor-container .info-container .display_name[data-v-50d87894] {\\n      font-size: 48px;\\n      line-height: 48px;\\n      color: #212121;\\n      position: absolute;\\n      top: 25px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 427 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(300)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".unread-mail-emptyTitle[data-v-51b23524]{font-size:16px;color:#f38181;padding-top:20px;text-align:center}.dashboard-container[data-v-51b23524]{padding:20px 50px}.dashboard-container .pan-info-roles[data-v-51b23524]{font-size:12px;font-weight:700;color:#333;display:block}.dashboard-container .info-container[data-v-51b23524]{position:relative;margin-left:190px;height:150px;line-height:200px}.dashboard-container .info-container .display_name[data-v-51b23524]{font-size:48px;line-height:48px;color:#212121;position:absolute;top:25px}.dashboard-container .info-container .info-wrapper[data-v-51b23524]{line-height:40px;position:absolute;bottom:0}.dashboard-container .info-container .info-wrapper .info-item[data-v-51b23524]{display:inline-block;margin-right:95px}.dashboard-container .info-container .info-wrapper .info-item .info-item-num[data-v-51b23524]{color:#212121;font-size:24px;display:inline-block;padding-right:5px}.dashboard-container .info-container .info-wrapper .info-item .info-item-text[data-v-51b23524]{color:#727272;font-size:14px;padding-right:5px;display:inline-block}.dashboard-container .info-container .dashboard-icon[data-v-51b23524]{width:22px;height:22px}.dashboard-container .btn-group[data-v-51b23524]{margin:30px 36px 30px 0}.dashboard-container .main-dashboard-container[data-v-51b23524]{width:100%;position:relative;border:1px solid #dee1e2;padding:0 10px}.dashboard-container .chart-container[data-v-51b23524]{float:left;position:relative;padding-right:10px;width:40%;border-right:1px solid #dee1e2}.dashboard-container .unread-mail-container[data-v-51b23524]{padding:12px 12px 0;float:left;width:60%;height:380px;position:relative}.dashboard-container .unread-mail-container .unread-mail-title[data-v-51b23524]{font-size:16px;color:#f38181;letter-spacing:1px;padding-left:15px;padding-bottom:10px;border-bottom:1px solid #dee1e2}.dashboard-container .unread-mail-container .unread-mail-more[data-v-51b23524]{color:#2c3e50;font-size:12px;float:right;margin-right:25px;line-height:40px}.dashboard-container .unread-mail-container .unread-mail-more[data-v-51b23524]:hover{color:#3a71a8}.dashboard-container .unread-mail-container .unread-mail-wrapper[data-v-51b23524]{padding:0 20px 0 22px}.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-item[data-v-51b23524]{cursor:pointer;padding:16px 8px 16px 16px;border-bottom:1px solid #dee1e2;position:relative}.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-item .el-tag[data-v-51b23524]{margin:0 3px}.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-item[data-v-51b23524]:before{content:\\\"\\\";height:104%;width:0;background:#30b08f;display:inline-block;position:absolute;opacity:0;left:0;top:-2px;transition:all .3s ease}.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-item[data-v-51b23524]:hover:before{opacity:1;width:3px}.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-status[data-v-51b23524]{font-size:12px;display:inline-block;color:#9b9b9b;padding-right:6px}.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-content[data-v-51b23524]{font-size:13px;color:#2c3e50}.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-content[data-v-51b23524]:hover{color:#3a71a8}.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-time[data-v-51b23524]{position:absolute;right:16px;top:16px;color:#9b9b9b}\", \"\", {\"version\":3,\"sources\":[\"E:/web/Vue/vue-mail-front/src/views/dashboard/editor/index.vue\"],\"names\":[],\"mappings\":\"AACA,yCACE,eAAgB,AAChB,cAAe,AACf,iBAAkB,AAClB,iBAAmB,CACpB,AACD,sCACE,iBAAmB,CACpB,AACD,sDACI,eAAgB,AAChB,gBAAiB,AACjB,WAAY,AACZ,aAAe,CAClB,AACD,sDACI,kBAAmB,AACnB,kBAAmB,AACnB,aAAc,AACd,iBAAmB,CACtB,AACD,oEACM,eAAgB,AAChB,iBAAkB,AAClB,cAAe,AACf,kBAAmB,AACnB,QAAU,CACf,AACD,oEACM,iBAAkB,AAClB,kBAAmB,AACnB,QAAY,CACjB,AACD,+EACQ,qBAAsB,AACtB,iBAAmB,CAC1B,AACD,8FACU,cAAe,AACf,eAAgB,AAChB,qBAAsB,AACtB,iBAAmB,CAC5B,AACD,+FACU,cAAe,AACf,eAAgB,AAChB,kBAAmB,AACnB,oBAAsB,CAC/B,AACD,sEACM,WAAY,AACZ,WAAa,CAClB,AACD,iDACI,uBAAyB,CAC5B,AACD,gEACI,WAAY,AACZ,kBAAmB,AACnB,yBAA0B,AAC1B,cAAgB,CACnB,AACD,uDACI,WAAY,AACZ,kBAAmB,AACnB,mBAAoB,AACpB,UAAW,AACX,8BAAgC,CACnC,AACD,6DACI,oBAAuB,AACvB,WAAY,AACZ,UAAW,AACX,aAAc,AACd,iBAAmB,CACtB,AACD,gFACM,eAAgB,AAChB,cAAe,AACf,mBAAoB,AACpB,kBAAmB,AACnB,oBAAqB,AACrB,+BAAiC,CACtC,AACD,+EACM,cAAe,AACf,eAAgB,AAChB,YAAa,AACb,kBAAmB,AACnB,gBAAkB,CACvB,AACD,qFACQ,aAAe,CACtB,AACD,kFACM,qBAAuB,CAC5B,AACD,oGACQ,eAAgB,AAChB,2BAA4B,AAC5B,gCAAiC,AACjC,iBAAmB,CAC1B,AACD,4GACU,YAAc,CACvB,AACD,2GACU,WAAY,AACZ,YAAa,AACb,QAAW,AACX,mBAAoB,AACpB,qBAAsB,AACtB,kBAAmB,AACnB,UAAW,AACX,OAAU,AACV,SAAU,AACV,uBAA0B,CACnC,AACD,iHACU,UAAW,AACX,SAAW,CACpB,AACD,sGACQ,eAAgB,AAChB,qBAAsB,AACtB,cAAe,AACf,iBAAmB,CAC1B,AACD,uGACQ,eAAgB,AAChB,aAAe,CACtB,AACD,6GACU,aAAe,CACxB,AACD,oGACQ,kBAAmB,AACnB,WAAY,AACZ,SAAU,AACV,aAAe,CACtB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.unread-mail-emptyTitle[data-v-51b23524] {\\n  font-size: 16px;\\n  color: #F38181;\\n  padding-top: 20px;\\n  text-align: center;\\n}\\n.dashboard-container[data-v-51b23524] {\\n  padding: 20px 50px;\\n}\\n.dashboard-container .pan-info-roles[data-v-51b23524] {\\n    font-size: 12px;\\n    font-weight: 700;\\n    color: #333;\\n    display: block;\\n}\\n.dashboard-container .info-container[data-v-51b23524] {\\n    position: relative;\\n    margin-left: 190px;\\n    height: 150px;\\n    line-height: 200px;\\n}\\n.dashboard-container .info-container .display_name[data-v-51b23524] {\\n      font-size: 48px;\\n      line-height: 48px;\\n      color: #212121;\\n      position: absolute;\\n      top: 25px;\\n}\\n.dashboard-container .info-container .info-wrapper[data-v-51b23524] {\\n      line-height: 40px;\\n      position: absolute;\\n      bottom: 0px;\\n}\\n.dashboard-container .info-container .info-wrapper .info-item[data-v-51b23524] {\\n        display: inline-block;\\n        margin-right: 95px;\\n}\\n.dashboard-container .info-container .info-wrapper .info-item .info-item-num[data-v-51b23524] {\\n          color: #212121;\\n          font-size: 24px;\\n          display: inline-block;\\n          padding-right: 5px;\\n}\\n.dashboard-container .info-container .info-wrapper .info-item .info-item-text[data-v-51b23524] {\\n          color: #727272;\\n          font-size: 14px;\\n          padding-right: 5px;\\n          display: inline-block;\\n}\\n.dashboard-container .info-container .dashboard-icon[data-v-51b23524] {\\n      width: 22px;\\n      height: 22px;\\n}\\n.dashboard-container .btn-group[data-v-51b23524] {\\n    margin: 30px 36px 30px 0;\\n}\\n.dashboard-container .main-dashboard-container[data-v-51b23524] {\\n    width: 100%;\\n    position: relative;\\n    border: 1px solid #DEE1E2;\\n    padding: 0 10px;\\n}\\n.dashboard-container .chart-container[data-v-51b23524] {\\n    float: left;\\n    position: relative;\\n    padding-right: 10px;\\n    width: 40%;\\n    border-right: 1px solid #DEE1E2;\\n}\\n.dashboard-container .unread-mail-container[data-v-51b23524] {\\n    padding: 12px 12px 0px;\\n    float: left;\\n    width: 60%;\\n    height: 380px;\\n    position: relative;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-title[data-v-51b23524] {\\n      font-size: 16px;\\n      color: #F38181;\\n      letter-spacing: 1px;\\n      padding-left: 15px;\\n      padding-bottom: 10px;\\n      border-bottom: 1px solid #DEE1E2;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-more[data-v-51b23524] {\\n      color: #2C3E50;\\n      font-size: 12px;\\n      float: right;\\n      margin-right: 25px;\\n      line-height: 40px;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-more[data-v-51b23524]:hover {\\n        color: #3A71A8;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-wrapper[data-v-51b23524] {\\n      padding: 0 20px 0 22px;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-item[data-v-51b23524] {\\n        cursor: pointer;\\n        padding: 16px 8px 16px 16px;\\n        border-bottom: 1px solid #DEE1E2;\\n        position: relative;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-item .el-tag[data-v-51b23524] {\\n          margin: 0 3px;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-item[data-v-51b23524]:before {\\n          content: \\\"\\\";\\n          height: 104%;\\n          width: 0px;\\n          background: #30B08F;\\n          display: inline-block;\\n          position: absolute;\\n          opacity: 0;\\n          left: 0px;\\n          top: -2px;\\n          transition: 0.3s ease all;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-item[data-v-51b23524]:hover:before {\\n          opacity: 1;\\n          width: 3px;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-status[data-v-51b23524] {\\n        font-size: 12px;\\n        display: inline-block;\\n        color: #9B9B9B;\\n        padding-right: 6px;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-content[data-v-51b23524] {\\n        font-size: 13px;\\n        color: #2C3E50;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-content[data-v-51b23524]:hover {\\n          color: #3A71A8;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-time[data-v-51b23524] {\\n        position: absolute;\\n        right: 16px;\\n        top: 16px;\\n        color: #9B9B9B;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 428 */,\n/* 429 */,\n/* 430 */,\n/* 431 */,\n/* 432 */,\n/* 433 */,\n/* 434 */,\n/* 435 */,\n/* 436 */,\n/* 437 */,\n/* 438 */,\n/* 439 */,\n/* 440 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(319);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\n    ];\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n/* 441 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n\n    var symbolUtil = __webpack_require__(367);\n    var vector = __webpack_require__(321);\n    // var matrix = require('zrender/lib/core/matrix');\n    var LinePath = __webpack_require__(443);\n    var graphic = __webpack_require__(322);\n    var zrUtil = __webpack_require__(319);\n    var numberUtil = __webpack_require__(320);\n\n    var SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n    function makeSymbolTypeKey(symbolCategory) {\n        return '_' + symbolCategory + 'Type';\n    }\n    /**\n     * @inner\n     */\n    function createSymbol(name, lineData, idx) {\n        var color = lineData.getItemVisual(idx, 'color');\n        var symbolType = lineData.getItemVisual(idx, name);\n        var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n        if (!symbolType || symbolType === 'none') {\n            return;\n        }\n\n        if (!zrUtil.isArray(symbolSize)) {\n            symbolSize = [symbolSize, symbolSize];\n        }\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2,\n            symbolSize[0], symbolSize[1], color\n        );\n\n        symbolPath.name = name;\n\n        return symbolPath;\n    }\n\n    function createLine(points) {\n        var line = new LinePath({\n            name: 'line'\n        });\n        setLinePoints(line.shape, points);\n        return line;\n    }\n\n    function setLinePoints(targetShape, points) {\n        var p1 = points[0];\n        var p2 = points[1];\n        var cp1 = points[2];\n        targetShape.x1 = p1[0];\n        targetShape.y1 = p1[1];\n        targetShape.x2 = p2[0];\n        targetShape.y2 = p2[1];\n        targetShape.percent = 1;\n\n        if (cp1) {\n            targetShape.cpx1 = cp1[0];\n            targetShape.cpy1 = cp1[1];\n        }\n        else {\n            targetShape.cpx1 = NaN;\n            targetShape.cpy1 = NaN;\n        }\n    }\n\n    function updateSymbolAndLabelBeforeLineUpdate () {\n        var lineGroup = this;\n        var symbolFrom = lineGroup.childOfName('fromSymbol');\n        var symbolTo = lineGroup.childOfName('toSymbol');\n        var label = lineGroup.childOfName('label');\n        // Quick reject\n        if (!symbolFrom && !symbolTo && label.ignore) {\n            return;\n        }\n\n        var invScale = 1;\n        var parentNode = this.parent;\n        while (parentNode) {\n            if (parentNode.scale) {\n                invScale /= parentNode.scale[0];\n            }\n            parentNode = parentNode.parent;\n        }\n\n        var line = lineGroup.childOfName('line');\n        // If line not changed\n        // FIXME Parent scale changed\n        if (!this.__dirty && !line.__dirty) {\n            return;\n        }\n\n        var percent = line.shape.percent;\n        var fromPos = line.pointAt(0);\n        var toPos = line.pointAt(percent);\n\n        var d = vector.sub([], toPos, fromPos);\n        vector.normalize(d, d);\n\n        if (symbolFrom) {\n            symbolFrom.attr('position', fromPos);\n            var tangent = line.tangentAt(0);\n            symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(\n                tangent[1], tangent[0]\n            ));\n            symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n        }\n        if (symbolTo) {\n            symbolTo.attr('position', toPos);\n            var tangent = line.tangentAt(1);\n            symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(\n                tangent[1], tangent[0]\n            ));\n            symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n        }\n\n        if (!label.ignore) {\n            label.attr('position', toPos);\n\n            var textPosition;\n            var textAlign;\n            var textVerticalAlign;\n\n            var distance = 5 * invScale;\n            // End\n            if (label.__position === 'end') {\n                textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n                textAlign = d[0] > 0.8 ? 'left' : (d[0] < -0.8 ? 'right' : 'center');\n                textVerticalAlign = d[1] > 0.8 ? 'top' : (d[1] < -0.8 ? 'bottom' : 'middle');\n            }\n            // Middle\n            else if (label.__position === 'middle') {\n                var halfPercent = percent / 2;\n                var tangent = line.tangentAt(halfPercent);\n                var n = [tangent[1], -tangent[0]];\n                var cp = line.pointAt(halfPercent);\n                if (n[1] > 0) {\n                    n[0] = -n[0];\n                    n[1] = -n[1];\n                }\n                textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                var rotation = -Math.atan2(tangent[1], tangent[0]);\n                if (toPos[0] < fromPos[0]) {\n                    rotation = Math.PI + rotation;\n                }\n                label.attr('rotation', rotation);\n            }\n            // Start\n            else {\n                textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n                textAlign = d[0] > 0.8 ? 'right' : (d[0] < -0.8 ? 'left' : 'center');\n                textVerticalAlign = d[1] > 0.8 ? 'bottom' : (d[1] < -0.8 ? 'top' : 'middle');\n            }\n            label.attr({\n                style: {\n                    // Use the user specified text align and baseline first\n                    textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n                    textAlign: label.__textAlign || textAlign\n                },\n                position: textPosition,\n                scale: [invScale, invScale]\n            });\n        }\n    }\n\n    /**\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     * @alias {module:echarts/chart/helper/Line}\n     */\n    function Line(lineData, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this._createLine(lineData, idx, seriesScope);\n    }\n\n    var lineProto = Line.prototype;\n\n    // Update symbol position and rotation\n    lineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\n    lineProto._createLine = function (lineData, idx, seriesScope) {\n        var seriesModel = lineData.hostModel;\n        var linePoints = lineData.getItemLayout(idx);\n\n        var line = createLine(linePoints);\n        line.shape.percent = 0;\n        graphic.initProps(line, {\n            shape: {\n                percent: 1\n            }\n        }, seriesModel, idx);\n\n        this.add(line);\n\n        var label = new graphic.Text({\n            name: 'label'\n        });\n        this.add(label);\n\n        zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n            var symbol = createSymbol(symbolCategory, lineData, idx);\n            // symbols must added after line to make sure\n            // it will be updated after line#update.\n            // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n            this.add(symbol);\n            this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n        }, this);\n\n        this._updateCommonStl(lineData, idx, seriesScope);\n    };\n\n    lineProto.updateData = function (lineData, idx, seriesScope) {\n        var seriesModel = lineData.hostModel;\n\n        var line = this.childOfName('line');\n        var linePoints = lineData.getItemLayout(idx);\n        var target = {\n            shape: {}\n        };\n        setLinePoints(target.shape, linePoints);\n        graphic.updateProps(line, target, seriesModel, idx);\n\n        zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n            var symbolType = lineData.getItemVisual(idx, symbolCategory);\n            var key = makeSymbolTypeKey(symbolCategory);\n            // Symbol changed\n            if (this[key] !== symbolType) {\n                this.remove(this.childOfName(symbolCategory));\n                var symbol = createSymbol(symbolCategory, lineData, idx);\n                this.add(symbol);\n            }\n            this[key] = symbolType;\n        }, this);\n\n        this._updateCommonStl(lineData, idx, seriesScope);\n    };\n\n    lineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n        var seriesModel = lineData.hostModel;\n\n        var line = this.childOfName('line');\n\n        var lineStyle = seriesScope && seriesScope.lineStyle;\n        var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n\n        // Optimization for large dataset\n        if (!seriesScope || lineData.hasItemOption) {\n            var itemModel = lineData.getItemModel(idx);\n\n            lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n            hoverLineStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n\n            labelModel = itemModel.getModel('label.normal');\n            hoverLabelModel = itemModel.getModel('label.emphasis');\n        }\n\n        var visualColor = lineData.getItemVisual(idx, 'color');\n        var visualOpacity = zrUtil.retrieve(\n            lineData.getItemVisual(idx, 'opacity'),\n            lineStyle.opacity,\n            1\n        );\n\n        line.useStyle(zrUtil.defaults(\n            {\n                strokeNoScale: true,\n                fill: 'none',\n                stroke: visualColor,\n                opacity: visualOpacity\n            },\n            lineStyle\n        ));\n        line.hoverStyle = hoverLineStyle;\n\n        // Update symbol\n        zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n            var symbol = this.childOfName(symbolCategory);\n            if (symbol) {\n                symbol.setColor(visualColor);\n                symbol.setStyle({\n                    opacity: visualOpacity\n                });\n            }\n        }, this);\n\n        var showLabel = labelModel.getShallow('show');\n        var hoverShowLabel = hoverLabelModel.getShallow('show');\n\n        var label = this.childOfName('label');\n        var defaultLabelColor;\n        var defaultText;\n\n        if (showLabel || hoverShowLabel) {\n            var rawVal = seriesModel.getRawValue(idx);\n            defaultText = rawVal == null\n                ? defaultText = lineData.getName(idx)\n                : isFinite(rawVal)\n                ? numberUtil.round(rawVal)\n                : rawVal;\n            defaultLabelColor = visualColor || '#000';\n        }\n\n        // label.afterUpdate = lineAfterUpdate;\n        if (showLabel) {\n            var textStyleModel = labelModel.getModel('textStyle');\n            label.setStyle({\n                text: zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType),\n                    defaultText\n                ),\n                textFont: textStyleModel.getFont(),\n                fill: textStyleModel.getTextColor() || defaultLabelColor\n            });\n\n            label.__textAlign = textStyleModel.get('align');\n            label.__verticalAlign = textStyleModel.get('baseline');\n            label.__position = labelModel.get('position');\n        }\n        else {\n            label.setStyle('text', '');\n        }\n        if (hoverShowLabel) {\n            var textStyleHoverModel = hoverLabelModel.getModel('textStyle');\n\n            label.hoverStyle = {\n                text: zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType),\n                    defaultText\n                ),\n                textFont: textStyleHoverModel.getFont(),\n                fill: textStyleHoverModel.getTextColor() || defaultLabelColor\n            };\n        }\n        else {\n            label.hoverStyle = {\n                text: ''\n            };\n        }\n\n        label.ignore = !showLabel && !hoverShowLabel;\n\n        graphic.setHoverStyle(this);\n    };\n\n    lineProto.updateLayout = function (lineData, idx) {\n        this.setLinePoints(lineData.getItemLayout(idx));\n    };\n\n    lineProto.setLinePoints = function (points) {\n        var linePath = this.childOfName('line');\n        setLinePoints(linePath.shape, points);\n        linePath.dirty();\n    };\n\n    zrUtil.inherits(Line, graphic.Group);\n\n    module.exports = Line;\n\n\n/***/ }),\n/* 442 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n\n\n    var graphic = __webpack_require__(322);\n    var LineGroup = __webpack_require__(441);\n\n\n    function isPointNaN(pt) {\n        return isNaN(pt[0]) || isNaN(pt[1]);\n    }\n    function lineNeedsDraw(pts) {\n        return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n    }\n    /**\n     * @alias module:echarts/component/marker/LineDraw\n     * @constructor\n     */\n    function LineDraw(ctor) {\n        this._ctor = ctor || LineGroup;\n        this.group = new graphic.Group();\n    }\n\n    var lineDrawProto = LineDraw.prototype;\n\n    /**\n     * @param {module:echarts/data/List} lineData\n     */\n    lineDrawProto.updateData = function (lineData) {\n\n        var oldLineData = this._lineData;\n        var group = this.group;\n        var LineCtor = this._ctor;\n\n        var hostModel = lineData.hostModel;\n\n        var seriesScope = {\n            lineStyle: hostModel.getModel('lineStyle.normal').getLineStyle(),\n            hoverLineStyle: hostModel.getModel('lineStyle.emphasis').getLineStyle(),\n            labelModel: hostModel.getModel('label.normal'),\n            hoverLabelModel: hostModel.getModel('label.emphasis')\n        };\n\n        lineData.diff(oldLineData)\n            .add(function (idx) {\n                if (!lineNeedsDraw(lineData.getItemLayout(idx))) {\n                    return;\n                }\n                var lineGroup = new LineCtor(lineData, idx, seriesScope);\n\n                lineData.setItemGraphicEl(idx, lineGroup);\n\n                group.add(lineGroup);\n            })\n            .update(function (newIdx, oldIdx) {\n                var lineGroup = oldLineData.getItemGraphicEl(oldIdx);\n                if (!lineNeedsDraw(lineData.getItemLayout(newIdx))) {\n                    group.remove(lineGroup);\n                    return;\n                }\n\n                if (!lineGroup) {\n                    lineGroup = new LineCtor(lineData, newIdx, seriesScope);\n                }\n                else {\n                    lineGroup.updateData(lineData, newIdx, seriesScope);\n                }\n\n                lineData.setItemGraphicEl(newIdx, lineGroup);\n\n                group.add(lineGroup);\n            })\n            .remove(function (idx) {\n                group.remove(oldLineData.getItemGraphicEl(idx));\n            })\n            .execute();\n\n        this._lineData = lineData;\n    };\n\n    lineDrawProto.updateLayout = function () {\n        var lineData = this._lineData;\n        lineData.eachItemGraphicEl(function (el, idx) {\n            el.updateLayout(lineData, idx);\n        }, this);\n    };\n\n    lineDrawProto.remove = function () {\n        this.group.removeAll();\n    };\n\n    module.exports = LineDraw;\n\n\n/***/ }),\n/* 443 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Line path for bezier and straight line draw\n */\n\n    var graphic = __webpack_require__(322);\n    var vec2 = __webpack_require__(321);\n\n    var straightLineProto = graphic.Line.prototype;\n    var bezierCurveProto = graphic.BezierCurve.prototype;\n\n    function isLine(shape) {\n        return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n    }\n\n    module.exports = graphic.extendShape({\n\n        type: 'ec-line',\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            percent: 1,\n            cpx1: null,\n            cpy1: null\n        },\n\n        buildPath: function (ctx, shape) {\n            (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n        },\n\n        pointAt: function (t) {\n            return isLine(this.shape)\n                ? straightLineProto.pointAt.call(this, t)\n                : bezierCurveProto.pointAt.call(this, t);\n        },\n\n        tangentAt: function (t) {\n            var shape = this.shape;\n            var p = isLine(shape)\n                ? [shape.x2 - shape.x1, shape.y2 - shape.y1]\n                : bezierCurveProto.tangentAt.call(this, t);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n/***/ }),\n/* 444 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(339);\n    var completeDimensions = __webpack_require__(475);\n    var zrUtil = __webpack_require__(319);\n    var modelUtil = __webpack_require__(327);\n    var CoordinateSystem = __webpack_require__(349);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\n        }\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['x', 'y', 'z']);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, ['lng', 'lat', 'value'])\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n/* 445 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(319);\n    var echarts = __webpack_require__(324);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(446);\n    __webpack_require__(447);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(495), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(476), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(488), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(453);\n\n\n/***/ }),\n/* 446 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(444);\n    var SeriesModel = __webpack_require__(365);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n/* 447 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(319);\n    var SymbolDraw = __webpack_require__(360);\n    var Symbol = __webpack_require__(359);\n    var lineAnimationDiff = __webpack_require__(448);\n    var graphic = __webpack_require__(322);\n    var modelUtil = __webpack_require__(327);\n    var polyHelper = __webpack_require__(449);\n    var ChartView = __webpack_require__(368);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n/* 448 */\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n/* 449 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(323);\n    var vec2 = __webpack_require__(321);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n/* 450 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(364);\n\n    __webpack_require__(452);\n\n\n/***/ }),\n/* 451 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(319);\n    var formatUtil = __webpack_require__(326);\n    var graphic = __webpack_require__(322);\n    var Model = __webpack_require__(331);\n    var numberUtil = __webpack_require__(320);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(321);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\n            // To radian.\n            labelRotation = labelRotation * PI / 180;\n\n            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelBeforeFormat = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelBeforeFormat;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            function isTwoLabelOverlapped(current, next) {\n                var firstRect = current && current.getBoundingRect().clone();\n                var nextRect = next && next.getBoundingRect().clone();\n                if (firstRect && nextRect) {\n                    firstRect.applyTransform(current.getLocalTransform());\n                    nextRect.applyTransform(next.getLocalTransform());\n                    return firstRect.intersect(nextRect);\n                }\n            }\n\n            // If min or max are user set, we need to check\n            // If the tick on min(max) are overlap on their neighbour tick\n            // If they are overlapped, we need to hide the min(max) tick label\n            if (axisModel.getMin() != null) {\n                var firstLabel = textEls[0];\n                var nextLabel = textEls[1];\n                if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n                    firstLabel.ignore = true;\n                }\n            }\n            if (axisModel.getMax() != null) {\n                var lastLabel = textEls[textEls.length - 1];\n                var prevLabel = textEls[textEls.length - 2];\n                if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n                    lastLabel.ignore = true;\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.verticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @inner\n     */\n    function innerTextLayout(opt, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            verticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            verticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            verticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            verticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n/* 452 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(319);\n    var graphic = __webpack_require__(322);\n    var AxisBuilder = __webpack_require__(451);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var AxisView = __webpack_require__(324).extendComponentView({\n\n        type: 'axis',\n\n        render: function (axisModel, ecModel) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = layoutAxis(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    AxisView.extend({\n        type: 'xAxis'\n    });\n    AxisView.extend({\n        type: 'yAxis'\n    });\n\n    /**\n     * @inner\n     */\n    function layoutAxis(gridModel, axisModel) {\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        if (axis.onZero) {\n            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\n        }\n\n        if (axisModel.getModel('axisTick').get('inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (axisModel.getModel('axisLabel').get('inside')) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\n        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    }\n\n\n/***/ }),\n/* 453 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(322);\n    var zrUtil = __webpack_require__(319);\n    var echarts = __webpack_require__(324);\n\n    __webpack_require__(471);\n\n    __webpack_require__(450);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n/* 454 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(456);\n    __webpack_require__(457);\n\n    __webpack_require__(324).registerPreprocessor(function (opt) {\n        // Make sure markLine component is enabled\n        opt.markLine = opt.markLine || {};\n    });\n\n\n/***/ }),\n/* 455 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// HINT Markpoint can't be used too much\n\n\n    __webpack_require__(458);\n    __webpack_require__(459);\n\n    __webpack_require__(324).registerPreprocessor(function (opt) {\n        // Make sure markPoint component is enabled\n        opt.markPoint = opt.markPoint || {};\n    });\n\n\n/***/ }),\n/* 456 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(361).extend({\n\n        type: 'markLine',\n\n        defaultOption: {\n            zlevel: 0,\n            z: 5,\n\n            symbol: ['circle', 'arrow'],\n            symbolSize: [8, 16],\n\n            //symbolRotate: 0,\n\n            precision: 2,\n            tooltip: {\n                trigger: 'item'\n            },\n            label: {\n                normal: {\n                    show: true,\n                    position: 'end'\n                },\n                emphasis: {\n                    show: true\n                }\n            },\n            lineStyle: {\n                normal: {\n                    type: 'dashed'\n                },\n                emphasis: {\n                    width: 3\n                }\n            },\n            animationEasing: 'linear'\n        }\n    });\n\n\n/***/ }),\n/* 457 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(319);\n    var List = __webpack_require__(339);\n    var numberUtil = __webpack_require__(320);\n\n    var markerHelper = __webpack_require__(363);\n\n    var LineDraw = __webpack_require__(442);\n\n    var markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n        var data = seriesModel.getData();\n        // Special type markLine like 'min', 'max', 'average'\n        var mlType = item.type;\n\n        if (!zrUtil.isArray(item)\n            && (\n                mlType === 'min' || mlType === 'max' || mlType === 'average'\n                // In case\n                // data: [{\n                //   yAxis: 10\n                // }]\n                || (item.xAxis != null || item.yAxis != null)\n            )\n        ) {\n            var valueAxis;\n            var valueDataDim;\n            var value;\n\n            if (item.yAxis != null || item.xAxis != null) {\n                valueDataDim = item.yAxis != null ? 'y' : 'x';\n                valueAxis = coordSys.getAxis(valueDataDim);\n\n                value = zrUtil.retrieve(item.yAxis, item.xAxis);\n            }\n            else {\n                var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n                valueDataDim = axisInfo.valueDataDim;\n                valueAxis = axisInfo.valueAxis;\n                value = markerHelper.numCalculate(data, valueDataDim, mlType);\n            }\n            var valueIndex = valueDataDim === 'x' ? 0 : 1;\n            var baseIndex = 1 - valueIndex;\n\n            var mlFrom = zrUtil.clone(item);\n            var mlTo = {};\n\n            mlFrom.type = null;\n\n            mlFrom.coord = [];\n            mlTo.coord = [];\n            mlFrom.coord[baseIndex] = -Infinity;\n            mlTo.coord[baseIndex] = Infinity;\n\n            var precision = mlModel.get('precision');\n            if (precision >= 0 && typeof value === 'number') {\n                value = +value.toFixed(precision);\n            }\n\n            mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n\n            item = [mlFrom, mlTo, { // Extra option for tooltip and label\n                type: mlType,\n                valueIndex: item.valueIndex,\n                // Force to use the value of calculated value.\n                value: value\n            }];\n        }\n\n        item = [\n            markerHelper.dataTransform(seriesModel, item[0]),\n            markerHelper.dataTransform(seriesModel, item[1]),\n            zrUtil.extend({}, item[2])\n        ];\n\n        // Avoid line data type is extended by from(to) data type\n        item[2].type = item[2].type || '';\n\n        // Merge from option and to option into line option\n        zrUtil.merge(item[2], item[0]);\n        zrUtil.merge(item[2], item[1]);\n\n        return item;\n    };\n\n    function isInifinity(val) {\n        return !isNaN(val) && !isFinite(val);\n    }\n\n    // If a markLine has one dim\n    function ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n        var otherDimIndex = 1 - dimIndex;\n        var dimName = coordSys.dimensions[dimIndex];\n        return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex])\n            && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n    }\n\n    function markLineFilter(coordSys, item) {\n        if (coordSys.type === 'cartesian2d') {\n            var fromCoord = item[0].coord;\n            var toCoord = item[1].coord;\n            // In case\n            // {\n            //  markLine: {\n            //    data: [{ yAxis: 2 }]\n            //  }\n            // }\n            if (\n                fromCoord && toCoord &&\n                (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys)\n                || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))\n            ) {\n                return true;\n            }\n        }\n        return markerHelper.dataFilter(coordSys, item[0])\n            && markerHelper.dataFilter(coordSys, item[1]);\n    }\n\n    function updateSingleMarkerEndLayout(\n        data, idx, isFrom, seriesModel, api\n    ) {\n        var coordSys = seriesModel.coordinateSystem;\n        var itemModel = data.getItemModel(idx);\n\n        var point;\n        var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n        var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n        if (!isNaN(xPx) && !isNaN(yPx)) {\n            point = [xPx, yPx];\n        }\n        else {\n            // Chart like bar may have there own marker positioning logic\n            if (seriesModel.getMarkerPosition) {\n                // Use the getMarkerPoisition\n                point = seriesModel.getMarkerPosition(\n                    data.getValues(data.dimensions, idx)\n                );\n            }\n            else {\n                var dims = coordSys.dimensions;\n                var x = data.get(dims[0], idx);\n                var y = data.get(dims[1], idx);\n                point = coordSys.dataToPoint([x, y]);\n            }\n            // Expand line to the edge of grid if value on one axis is Inifnity\n            // In case\n            //  markLine: {\n            //    data: [{\n            //      yAxis: 2\n            //      // or\n            //      type: 'average'\n            //    }]\n            //  }\n            if (coordSys.type === 'cartesian2d') {\n                var xAxis = coordSys.getAxis('x');\n                var yAxis = coordSys.getAxis('y');\n                var dims = coordSys.dimensions;\n                if (isInifinity(data.get(dims[0], idx))) {\n                    point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n                }\n                else if (isInifinity(data.get(dims[1], idx))) {\n                    point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n                }\n            }\n\n            // Use x, y if has any\n            if (!isNaN(xPx)) {\n                point[0] = xPx;\n            }\n            if (!isNaN(yPx)) {\n                point[1] = yPx;\n            }\n        }\n\n        data.setItemLayout(idx, point);\n    }\n\n    __webpack_require__(362).extend({\n\n        type: 'markLine',\n\n        updateLayout: function (markLineModel, ecModel, api) {\n            ecModel.eachSeries(function (seriesModel) {\n                var mlModel = seriesModel.markLineModel;\n                if (mlModel) {\n                    var mlData = mlModel.getData();\n                    var fromData = mlModel.__from;\n                    var toData = mlModel.__to;\n                    // Update visual and layout of from symbol and to symbol\n                    fromData.each(function (idx) {\n                        updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n                        updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n                    });\n                    // Update layout of line\n                    mlData.each(function (idx) {\n                        mlData.setItemLayout(idx, [\n                            fromData.getItemLayout(idx),\n                            toData.getItemLayout(idx)\n                        ]);\n                    });\n\n                    this.markerGroupMap[seriesModel.name].updateLayout();\n\n                }\n            }, this);\n        },\n\n        renderSeries: function (seriesModel, mlModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesName = seriesModel.name;\n            var seriesData = seriesModel.getData();\n\n            var lineDrawMap = this.markerGroupMap;\n            var lineDraw = lineDrawMap[seriesName];\n            if (!lineDraw) {\n                lineDraw = lineDrawMap[seriesName] = new LineDraw();\n            }\n            this.group.add(lineDraw.group);\n\n            var mlData = createList(coordSys, seriesModel, mlModel);\n\n            var fromData = mlData.from;\n            var toData = mlData.to;\n            var lineData = mlData.line;\n\n            mlModel.__from = fromData;\n            mlModel.__to = toData;\n            // Line data for tooltip and formatter\n            mlModel.setData(lineData);\n\n            var symbolType = mlModel.get('symbol');\n            var symbolSize = mlModel.get('symbolSize');\n            if (!zrUtil.isArray(symbolType)) {\n                symbolType = [symbolType, symbolType];\n            }\n            if (typeof symbolSize === 'number') {\n                symbolSize = [symbolSize, symbolSize];\n            }\n\n            // Update visual and layout of from symbol and to symbol\n            mlData.from.each(function (idx) {\n                updateDataVisualAndLayout(fromData, idx, true);\n                updateDataVisualAndLayout(toData, idx, false);\n            });\n\n            // Update visual and layout of line\n            lineData.each(function (idx) {\n                var lineColor = lineData.getItemModel(idx).get('lineStyle.normal.color');\n                lineData.setItemVisual(idx, {\n                    color: lineColor || fromData.getItemVisual(idx, 'color')\n                });\n                lineData.setItemLayout(idx, [\n                    fromData.getItemLayout(idx),\n                    toData.getItemLayout(idx)\n                ]);\n\n                lineData.setItemVisual(idx, {\n                    'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n                    'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n                    'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n                    'toSymbol': toData.getItemVisual(idx, 'symbol')\n                });\n            });\n\n            lineDraw.updateData(lineData);\n\n            // Set host model for tooltip\n            // FIXME\n            mlData.line.eachItemGraphicEl(function (el, idx) {\n                el.traverse(function (child) {\n                    child.dataModel = mlModel;\n                });\n            });\n\n            function updateDataVisualAndLayout(data, idx, isFrom) {\n                var itemModel = data.getItemModel(idx);\n\n                updateSingleMarkerEndLayout(\n                    data, idx, isFrom, seriesModel, api\n                );\n\n                data.setItemVisual(idx, {\n                    symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n                    symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n                    color: itemModel.get('itemStyle.normal.color') || seriesData.getVisual('color')\n                });\n            }\n\n            lineDraw.__keep = true;\n\n            lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n        }\n    });\n\n    /**\n     * @inner\n     * @param {module:echarts/coord/*} coordSys\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {module:echarts/model/Model} mpModel\n     */\n    function createList(coordSys, seriesModel, mlModel) {\n\n        var coordDimsInfos;\n        if (coordSys) {\n            coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n                var info = seriesModel.getData().getDimensionInfo(\n                    seriesModel.coordDimToDataDim(coordDim)[0]\n                ) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n                info.name = coordDim;\n                return info;\n            });\n        }\n        else {\n            coordDimsInfos =[{\n                name: 'value',\n                type: 'float'\n            }];\n        }\n\n        var fromData = new List(coordDimsInfos, mlModel);\n        var toData = new List(coordDimsInfos, mlModel);\n        // No dimensions\n        var lineData = new List([], mlModel);\n\n        var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(\n            markLineTransform, seriesModel, coordSys, mlModel\n        ));\n        if (coordSys) {\n            optData = zrUtil.filter(\n                optData, zrUtil.curry(markLineFilter, coordSys)\n            );\n        }\n        var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n            return item.value;\n        };\n        fromData.initData(\n            zrUtil.map(optData, function (item) { return item[0]; }),\n            null, dimValueGetter\n        );\n        toData.initData(\n            zrUtil.map(optData, function (item) { return item[1]; }),\n            null, dimValueGetter\n        );\n        lineData.initData(\n            zrUtil.map(optData, function (item) { return item[2]; })\n        );\n        lineData.hasItemOption = true;\n        return {\n            from: fromData,\n            to: toData,\n            line: lineData\n        };\n    }\n\n\n/***/ }),\n/* 458 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(361).extend({\n\n        type: 'markPoint',\n\n        defaultOption: {\n            zlevel: 0,\n            z: 5,\n            symbol: 'pin',\n            symbolSize: 50,\n            //symbolRotate: 0,\n            //symbolOffset: [0, 0]\n            tooltip: {\n                trigger: 'item'\n            },\n            label: {\n                normal: {\n                    show: true,\n                    position: 'inside'\n                },\n                emphasis: {\n                    show: true\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 2\n                }\n            }\n        }\n    });\n\n\n/***/ }),\n/* 459 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var SymbolDraw = __webpack_require__(360);\n    var zrUtil = __webpack_require__(319);\n    var numberUtil = __webpack_require__(320);\n\n    var List = __webpack_require__(339);\n\n    var markerHelper = __webpack_require__(363);\n\n    function updateMarkerLayout(mpData, seriesModel, api) {\n        var coordSys = seriesModel.coordinateSystem;\n        mpData.each(function (idx) {\n            var itemModel = mpData.getItemModel(idx);\n            var point;\n            var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n            var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                point = [xPx, yPx];\n            }\n            // Chart like bar may have there own marker positioning logic\n            else if (seriesModel.getMarkerPosition) {\n                // Use the getMarkerPoisition\n                point = seriesModel.getMarkerPosition(\n                    mpData.getValues(mpData.dimensions, idx)\n                );\n            }\n            else if (coordSys) {\n                var x = mpData.get(coordSys.dimensions[0], idx);\n                var y = mpData.get(coordSys.dimensions[1], idx);\n                point = coordSys.dataToPoint([x, y]);\n\n            }\n\n            // Use x, y if has any\n            if (!isNaN(xPx)) {\n                point[0] = xPx;\n            }\n            if (!isNaN(yPx)) {\n                point[1] = yPx;\n            }\n\n            mpData.setItemLayout(idx, point);\n        });\n    }\n\n    __webpack_require__(362).extend({\n\n        type: 'markPoint',\n\n        updateLayout: function (markPointModel, ecModel, api) {\n            ecModel.eachSeries(function (seriesModel) {\n                var mpModel = seriesModel.markPointModel;\n                if (mpModel) {\n                    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n                    this.markerGroupMap[seriesModel.name].updateLayout(mpModel);\n                }\n            }, this);\n        },\n\n        renderSeries: function (seriesModel, mpModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesName = seriesModel.name;\n            var seriesData = seriesModel.getData();\n\n            var symbolDrawMap = this.markerGroupMap;\n            var symbolDraw = symbolDrawMap[seriesName];\n            if (!symbolDraw) {\n                symbolDraw = symbolDrawMap[seriesName] = new SymbolDraw();\n            }\n\n            var mpData = createList(coordSys, seriesModel, mpModel);\n\n            // FIXME\n            mpModel.setData(mpData);\n\n            updateMarkerLayout(mpModel.getData(), seriesModel, api);\n\n            mpData.each(function (idx) {\n                var itemModel = mpData.getItemModel(idx);\n                var symbolSize = itemModel.getShallow('symbolSize');\n                if (typeof symbolSize === 'function') {\n                    // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n                    symbolSize = symbolSize(\n                        mpModel.getRawValue(idx), mpModel.getDataParams(idx)\n                    );\n                }\n                mpData.setItemVisual(idx, {\n                    symbolSize: symbolSize,\n                    color: itemModel.get('itemStyle.normal.color')\n                        || seriesData.getVisual('color'),\n                    symbol: itemModel.getShallow('symbol')\n                });\n            });\n\n            // TODO Text are wrong\n            symbolDraw.updateData(mpData);\n            this.group.add(symbolDraw.group);\n\n            // Set host model for tooltip\n            // FIXME\n            mpData.eachItemGraphicEl(function (el) {\n                el.traverse(function (child) {\n                    child.dataModel = mpModel;\n                });\n            });\n\n            symbolDraw.__keep = true;\n\n            symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n        }\n    });\n\n    /**\n     * @inner\n     * @param {module:echarts/coord/*} [coordSys]\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {module:echarts/model/Model} mpModel\n     */\n    function createList(coordSys, seriesModel, mpModel) {\n        var coordDimsInfos;\n        if (coordSys) {\n            coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n                var info = seriesModel.getData().getDimensionInfo(\n                    seriesModel.coordDimToDataDim(coordDim)[0]\n                ) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n                info.name = coordDim;\n                return info;\n            });\n        }\n        else {\n            coordDimsInfos =[{\n                name: 'value',\n                type: 'float'\n            }];\n        }\n\n        var mpData = new List(coordDimsInfos, mpModel);\n        var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(\n                markerHelper.dataTransform, seriesModel\n            ));\n        if (coordSys) {\n            dataOpt = zrUtil.filter(\n                dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys)\n            );\n        }\n\n        mpData.initData(dataOpt, null,\n            coordSys ? markerHelper.dimValueGetter : function (item) {\n                return item.value;\n            }\n        );\n        return mpData;\n    }\n\n\n\n/***/ }),\n/* 460 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(462);\n\n    __webpack_require__(463);\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(324).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(324).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n/* 461 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(319);\n    var zrColor = __webpack_require__(337);\n    var eventUtil = __webpack_require__(345);\n    var formatUtil = __webpack_require__(326);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(325);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        tooltipModel = tooltipModel;\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self.enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self.enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self.enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            var el = this.el;\n            el.innerHTML = content;\n            el.style.display = content ? 'block' : 'none';\n        },\n\n        moveTo: function (x, y) {\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        // showLater: function ()\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this.enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n/* 462 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(324).extendComponentModel({\n\n        type: 'tooltip',\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\n            trigger: 'item',\n\n            // 触发条件，支持 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove',\n\n            // 是否永远显示 content\n            alwaysShowContent: false,\n\n            // 位置 {Array} | {Function}\n            // position: null\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: true,\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                // 直线指示器样式设置\n                lineStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'solid'\n                },\n\n                crossStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                },\n\n                // 阴影指示器样式设置\n                shadowStyle: {\n                    color: 'rgba(150,150,150,0.3)'\n                }\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n/* 463 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(461);\n    var graphic = __webpack_require__(322);\n    var zrUtil = __webpack_require__(319);\n    var formatUtil = __webpack_require__(326);\n    var numberUtil = __webpack_require__(320);\n    var modelUtil = __webpack_require__(327);\n    var parsePercent = numberUtil.parsePercent;\n    var env = __webpack_require__(325);\n    var Model = __webpack_require__(331);\n\n    function dataEqual(a, b) {\n        if (!a || !b) {\n            return false;\n        }\n        var round = numberUtil.round;\n        return round(a[0]) === round(b[0])\n            && round(a[1]) === round(b[1]);\n    }\n    /**\n     * @inner\n     */\n    function makeLineShape(x1, y1, x2, y2) {\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeRectShape(x, y, width, height) {\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n        var gap = 20;\n\n        if (x + width + gap > viewWidth) {\n            x -= width + gap;\n        }\n        else {\n            x += gap;\n        }\n        if (y + height + gap > viewHeight) {\n            y -= height + gap;\n        }\n        else {\n            y += gap;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, dom) {\n        var domWidth = dom.clientWidth;\n        var domHeight = dom.clientHeight;\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    /**\n     * @param  {string|Function|Array.<number>} positionExpr\n     * @param  {number} x Mouse x\n     * @param  {number} y Mouse y\n     * @param  {boolean} confine Whether confine tooltip content in view rect.\n     * @param  {module:echarts/component/tooltip/TooltipContent} content\n     * @param  {Object|<Array.<Object>} params\n     * @param  {module:zrender/Element} el target element\n     * @param  {module:echarts/ExtensionAPI} api\n     * @return {Array.<number>}\n     */\n    function updatePosition(positionExpr, x, y, confine, content, params, el, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n\n        var rect = el && el.getBoundingRect().clone();\n        el && rect.applyTransform(el.transform);\n        if (typeof positionExpr === 'function') {\n            // Callback of position can be an array or a string specify the position\n            positionExpr = positionExpr([x, y], params, content.el, rect);\n        }\n\n        if (zrUtil.isArray(positionExpr)) {\n            x = parsePercent(positionExpr[0], viewWidth);\n            y = parsePercent(positionExpr[1], viewHeight);\n        }\n        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n        else if (typeof positionExpr === 'string' && el) {\n            var pos = calcTooltipPosition(\n                positionExpr, rect, content.el\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n        else {\n            var pos = refixTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        if (confine) {\n            var pos = confineTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        content.moveTo(x, y);\n    }\n\n    function ifSeriesSupportAxisTrigger(seriesModel) {\n        var coordSys = seriesModel.coordinateSystem;\n        var trigger = seriesModel.get('tooltip.trigger', true);\n        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\n        return !(!coordSys\n            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\n            || trigger === 'item');\n    }\n\n    __webpack_require__(324).extendComponentView({\n\n        type: 'tooltip',\n\n        _axisPointers: {},\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._axisPointers = {};\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._lastHover = {\n                // data\n                // payloadBatch\n            };\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.enterable = tooltipModel.get('enterable');\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            /**\n             * @type {Object.<string, Array>}\n             */\n            this._seriesGroupByAxis = this._prepareAxisTriggerData(\n                tooltipModel, ecModel\n            );\n\n            var crossText = this._crossText;\n            if (crossText) {\n                this.group.add(crossText);\n            }\n\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && triggerOn !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n\n            var zr = this._api.getZr();\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            if (triggerOn === 'click') {\n                zr.on('click', this._tryShow, this);\n            }\n            else if (triggerOn === 'mousemove') {\n                zr.on('mousemove', this._mousemove, this);\n                zr.on('mouseout', this._hide, this);\n                zr.on('globalout', this._hide, this);\n            }\n            // else triggerOn is 'none', which enable user\n            // to control tooltip totally using API.\n        },\n\n        _mousemove: function (e) {\n            var showDelay = this._tooltipModel.get('showDelay');\n            var self = this;\n            clearTimeout(this._showTimeout);\n            if (showDelay > 0) {\n                this._showTimeout = setTimeout(function () {\n                    self._tryShow(e);\n                }, showDelay);\n            }\n            else {\n                this._tryShow(e);\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            // From self\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            var ecModel = this._ecModel;\n            var seriesIndex = payload.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            var api = this._api;\n\n            var isTriggerAxis = this._tooltipModel.get('trigger') === 'axis';\n            function seriesHaveDataOnIndex(_series) {\n                var data = _series.getData();\n                var dataIndex = modelUtil.queryDataIndex(data, payload);\n                // Have single dataIndex\n                if (dataIndex != null && !zrUtil.isArray(dataIndex)\n                    && data.hasValue(dataIndex)\n                ) {\n                    return true;\n                }\n            }\n\n            if (payload.x == null || payload.y == null) {\n                if (isTriggerAxis) {\n                    // Find another series.\n                    if (seriesModel && !seriesHaveDataOnIndex(seriesModel)) {\n                        seriesModel = null;\n                    }\n                    if (!seriesModel) {\n                        // Find the first series can use axis trigger And data is not null\n                        ecModel.eachSeries(function (_series) {\n                            if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\n                                if (seriesHaveDataOnIndex(_series)) {\n                                    seriesModel = _series;\n                                }\n                            }\n                        });\n                    }\n                }\n                else {\n                    // Use the first series by default.\n                    seriesModel = seriesModel || ecModel.getSeriesByIndex(0);\n                }\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n                    if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n                        return;\n                    }\n\n                    var el = data.getItemGraphicEl(dataIndex);\n                    var cx;\n                    var cy;\n                    // Try to get the point in coordinate system\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (seriesModel.getTooltipPosition) {\n                        var point = seriesModel.getTooltipPosition(dataIndex) || [];\n                        cx = point[0];\n                        cy = point[1];\n                    }\n                    else if (coordSys && coordSys.dataToPoint) {\n                        var point = coordSys.dataToPoint(\n                            data.getValues(\n                                zrUtil.map(coordSys.dimensions, function (dim) {\n                                    return seriesModel.coordDimToDataDim(dim)[0];\n                                }), dataIndex, true\n                            )\n                        );\n                        cx = point && point[0];\n                        cy = point && point[1];\n                    }\n                    else if (el) {\n                        // Use graphic bounding rect\n                        var rect = el.getBoundingRect().clone();\n                        rect.applyTransform(el.transform);\n                        cx = rect.x + rect.width / 2;\n                        cy = rect.y + rect.height / 2;\n                    }\n\n                    if (cx != null && cy != null) {\n                        this._tryShow({\n                            offsetX: cx,\n                            offsetY: cy,\n                            position: payload.position,\n                            target: el,\n                            event: {}\n                        });\n                    }\n                }\n            }\n            else {\n                var el = api.getZr().handler.findHover(payload.x, payload.y);\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: el,\n                    event: {}\n                });\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            this._hide();\n        },\n\n        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\n            // Prepare data for axis trigger\n            var seriesGroupByAxis = {};\n            ecModel.eachSeries(function (seriesModel) {\n                if (ifSeriesSupportAxisTrigger(seriesModel)) {\n                    var coordSys = seriesModel.coordinateSystem;\n                    var baseAxis;\n                    var key;\n\n                    // Only cartesian2d, polar and single support axis trigger\n                    if (coordSys.type === 'cartesian2d') {\n                        // FIXME `axisPointer.axis` is not baseAxis\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + baseAxis.index;\n                    }\n                    else if (coordSys.type === 'singleAxis') {\n                        baseAxis = coordSys.getAxis();\n                        key = baseAxis.dim + baseAxis.type;\n                    }\n                    else {\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + coordSys.name;\n                    }\n\n                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\n                        coordSys: [],\n                        series: []\n                    };\n                    seriesGroupByAxis[key].coordSys.push(coordSys);\n                    seriesGroupByAxis[key].series.push(seriesModel);\n                }\n            }, this);\n\n            return seriesGroupByAxis;\n        },\n\n        /**\n         * mousemove handler\n         * @param {Object} e\n         * @private\n         */\n        _tryShow: function (e) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n            var globalTrigger = tooltipModel.get('trigger');\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            // Always show item tooltip if mouse is on the element with dataIndex\n            if (el && el.dataIndex != null) {\n                // Use dataModel in element if possible\n                // Used when mouseover on a element like markPoint or edge\n                // In which case, the data is not main data in series.\n                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                var dataIndex = el.dataIndex;\n                var data = dataModel.getData();\n                var itemModel = data.getItemModel(dataIndex);\n                // Series or single data may use item trigger when global is axis trigger\n                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n                else {\n                    // Reset ticket\n                    this._ticket = '';\n                    // If either single data or series use item trigger\n                    this._hideAxisPointer();\n                    // Reset last hover and dispatch downplay action\n                    this._resetLastHover();\n\n                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\n                }\n\n                api.dispatchAction({\n                    type: 'showTip',\n                    from: this.uid,\n                    dataIndexInside: dataIndex,\n                    dataIndex: data.getRawIndex(dataIndex), // expose to user.\n                    seriesIndex: el.seriesIndex\n                });\n            }\n            // Tooltip provided directly. Like legend\n            else if (el && el.tooltip) {\n                var tooltipOpt = el.tooltip;\n                if (typeof tooltipOpt === 'string') {\n                    var content = tooltipOpt;\n                    tooltipOpt = {\n                        content: content,\n                        // Fixed formatter\n                        formatter: content\n                    };\n                }\n                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\n                var defaultHtml = subTooltipModel.get('content');\n                var asyncTicket = Math.random();\n                this._showTooltipContent(\n                    // TODO params\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el, api\n                );\n            }\n            else {\n                if (globalTrigger === 'item') {\n                    this._hide();\n                }\n                else {\n                    // Try show axis tooltip\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n\n                // Action of cross pointer\n                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\n                if (tooltipModel.get('axisPointer.type') === 'cross') {\n                    api.dispatchAction({\n                        type: 'showTip',\n                        from: this.uid,\n                        x: e.offsetX,\n                        y: e.offsetY\n                    });\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on axis\n         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} e\n         * @private\n         */\n        _showAxisTooltip: function (tooltipModel, ecModel, e) {\n            var axisPointerModel = tooltipModel.getModel('axisPointer');\n            var axisPointerType = axisPointerModel.get('type');\n\n            if (axisPointerType === 'cross') {\n                var el = e.target;\n                if (el && el.dataIndex != null) {\n                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\n                    var dataIndex = el.dataIndex;\n                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\n                }\n            }\n\n            this._showAxisPointer();\n            var allNotShow = true;\n            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\n                // Try show the axis pointer\n                var allCoordSys = seriesCoordSysSameAxis.coordSys;\n                var coordSys = allCoordSys[0];\n\n                // If mouse position is not in the grid or polar\n                var point = [e.offsetX, e.offsetY];\n\n                if (!coordSys.containPoint(point)) {\n                    // Hide axis pointer\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                allNotShow = false;\n                // Make sure point is discrete on cateogry axis\n                var dimensions = coordSys.dimensions;\n                var value = coordSys.pointToData(point, true);\n                point = coordSys.dataToPoint(value);\n\n                var baseAxis = coordSys.getBaseAxis();\n                var axisType = axisPointerModel.get('axis');\n                if (axisType === 'auto') {\n                    axisType = baseAxis.dim;\n                }\n\n                if (baseAxis.isBlank() || zrUtil.eqNaN(point[0]) || zrUtil.eqNaN(point[1])) {\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                var contentNotChange = false;\n                var lastHover = this._lastHover;\n                if (axisPointerType === 'cross') {\n                    // If hover data not changed\n                    // Possible when two axes are all category\n                    if (dataEqual(lastHover.data, value)) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value;\n                }\n                else {\n                    var valIndex = zrUtil.indexOf(dimensions, axisType);\n\n                    // If hover data not changed on the axis dimension\n                    if (lastHover.data === value[valIndex]) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value[valIndex];\n                }\n\n                var enableAnimation = tooltipModel.get('animation');\n\n                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\n                    this._showCartesianPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'polar' && !contentNotChange) {\n                    this._showPolarPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\n                    this._showSinglePointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n\n                if (axisPointerType !== 'cross') {\n                    this._dispatchAndShowSeriesTooltipContent(\n                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange, e.position\n                    );\n                }\n            }, this);\n\n            if (!this._tooltipModel.get('show')) {\n                this._hideAxisPointer();\n            }\n\n            if (allNotShow) {\n                this._hide();\n            }\n        },\n\n        /**\n         * Show tooltip on axis of cartesian coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         * @private\n         */\n        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n            var baseAxis = cartesian.getBaseAxis();\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && baseAxis.type === 'category'\n                && baseAxis.getBandWidth() > 20;\n\n            if (axisPointerType === 'cross') {\n                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\n                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\n\n                this._updateCrossText(cartesian, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\n                var otherExtent = otherAxis.getGlobalExtent();\n\n                if (cartesian.type === 'cartesian2d') {\n                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\n                        axisType, point, otherExtent\n                    );\n                }\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridLine(axisType, point, otherExtent) {\n                var targetShape = axisType === 'x'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                graphic.subPixelOptimizeLine({\n                    shape: targetShape,\n                    style: pointerEl.style\n                });\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridShadow(axisType, point, otherExtent) {\n                var axis = cartesian.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n                var span = otherExtent[1] - otherExtent[0];\n                var targetShape = axisType === 'x'\n                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\n                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _showSinglePointer: function (axisPointerModel, single, axisType, point, enableAnimation) {\n            var self = this;\n            var axisPointerType = axisPointerModel.get('type');\n            var moveAnimation =\n                enableAnimation\n                && axisPointerType !== 'cross'\n                && single.getBaseAxis().type === 'category';\n            var rect = single.getRect();\n            var otherExtent = [rect.y, rect.y + rect.height];\n\n            moveSingleLine(axisType, point, otherExtent);\n\n            /**\n             * @inner\n             */\n            function moveSingleLine(axisType, point, otherExtent) {\n                var axis = single.getAxis();\n                var orient = axis.orient;\n\n                var targetShape = orient === 'horizontal'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    single, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n        },\n\n        /**\n         * Show tooltip on axis of polar coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {Array.<module:echarts/coord/polar/Polar>} polar\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         */\n        _showPolarPointer: function (axisPointerModel, polar, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n\n            var angleAxis = polar.getAngleAxis();\n            var radiusAxis = polar.getRadiusAxis();\n\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && polar.getBaseAxis().type === 'category';\n\n            if (axisPointerType === 'cross') {\n                movePolarLine('angle', point, radiusAxis.getExtent());\n                movePolarLine('radius', point, angleAxis.getExtent());\n\n                this._updateCrossText(polar, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\n                var otherExtent = otherAxis.getExtent();\n\n                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\n                    axisType, point, otherExtent\n                );\n            }\n            /**\n             * @inner\n             */\n            function movePolarLine(axisType, point, otherExtent) {\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                if (axisType === 'angle') {\n                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\n                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\n                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\n                }\n                else {\n                    targetShape = {\n                        cx: polar.cx,\n                        cy: polar.cy,\n                        r: mouseCoord[0]\n                    };\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function movePolarShadow(axisType, point, otherExtent) {\n                var axis = polar.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                var radian = Math.PI / 180;\n\n                if (axisType === 'angle') {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        otherExtent[0], otherExtent[1],\n                        // In ECharts y is negative if angle is positive\n                        (-mouseCoord[1] - bandWidth / 2) * radian,\n                        (-mouseCoord[1] + bandWidth / 2) * radian\n                    );\n                }\n                else {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        mouseCoord[0] - bandWidth / 2,\n                        mouseCoord[0] + bandWidth / 2,\n                        0, Math.PI * 2\n                    );\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _updateCrossText: function (coordSys, point, axisPointerModel) {\n            var crossStyleModel = axisPointerModel.getModel('crossStyle');\n            var textStyleModel = crossStyleModel.getModel('textStyle');\n\n            var tooltipModel = this._tooltipModel;\n\n            var text = this._crossText;\n            if (!text) {\n                text = this._crossText = new graphic.Text({\n                    style: {\n                        textAlign: 'left',\n                        textVerticalAlign: 'bottom'\n                    }\n                });\n                this.group.add(text);\n            }\n\n            var value = coordSys.pointToData(point);\n\n            var dims = coordSys.dimensions;\n            value = zrUtil.map(value, function (val, idx) {\n                var axis = coordSys.getAxis(dims[idx]);\n                if (axis.type === 'category' || axis.type === 'time') {\n                    val = axis.scale.getLabel(val);\n                }\n                else {\n                    val = formatUtil.addCommas(\n                        val.toFixed(axis.getPixelPrecision())\n                    );\n                }\n                return val;\n            });\n\n            text.setStyle({\n                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\n                textFont: textStyleModel.getFont(),\n                text: value.join(', '),\n                x: point[0] + 5,\n                y: point[1] - 5\n            });\n            text.z = tooltipModel.get('z');\n            text.zlevel = tooltipModel.get('zlevel');\n        },\n\n        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\n            var tooltipModel = this._tooltipModel;\n            var z = tooltipModel.get('z');\n            var zlevel = tooltipModel.get('zlevel');\n            var axisPointers = this._axisPointers;\n            var coordSysName = coordSys.name;\n            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\n            if (axisPointers[coordSysName][axisType]) {\n                return axisPointers[coordSysName][axisType];\n            }\n\n            // Create if not exists\n            var pointerType = pointerModel.get('type');\n            var styleModel = pointerModel.getModel(pointerType + 'Style');\n            var isShadow = pointerType === 'shadow';\n            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\n\n            var elementType = coordSys.type === 'polar'\n                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\n                : (isShadow ? 'Rect' : 'Line');\n\n            isShadow ? (style.stroke = null) : (style.fill = null);\n\n            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\n                style: style,\n                z: z,\n                zlevel: zlevel,\n                silent: true,\n                shape: initShape\n            });\n\n            this.group.add(el);\n            return el;\n        },\n\n        /**\n         * Dispatch actions and show tooltip on series\n         * @param {Array.<module:echarts/model/Series>} seriesList\n         * @param {Array.<number>} point\n         * @param {Array.<number>} value\n         * @param {boolean} contentNotChange\n         * @param {Array.<number>|string|Function} [positionExpr]\n         */\n        _dispatchAndShowSeriesTooltipContent: function (\n            coordSys, seriesList, point, value, contentNotChange, positionExpr\n        ) {\n\n            var rootTooltipModel = this._tooltipModel;\n\n            var baseAxis = coordSys.getBaseAxis();\n            var baseDimIndex = ({x: 1, radius: 1, single: 1})[baseAxis.dim] ? 0 : 1;\n\n            if (!seriesList.length) {\n                return;\n            }\n\n            var payloadBatch = zrUtil.map(seriesList, function (series) {\n                return {\n                    seriesIndex: series.seriesIndex,\n                    dataIndexInside: series.getAxisTooltipDataIndex\n                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\n                        : series.getData().indexOfNearest(\n                            series.coordDimToDataDim(baseAxis.dim)[0],\n                            value[baseDimIndex],\n                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\n                            false, baseAxis.type === 'category' ? 0.5 : null\n                        )\n                };\n            });\n            var sampleSeriesIndex;\n            zrUtil.each(payloadBatch, function (payload, idx) {\n                if (seriesList[idx].getData().hasValue(payload.dataIndexInside)) {\n                    sampleSeriesIndex = idx;\n                }\n            });\n            // Fallback to 0.\n            sampleSeriesIndex = sampleSeriesIndex || 0;\n\n            var lastHover = this._lastHover;\n            var api = this._api;\n            // Dispatch downplay action\n            if (lastHover.payloadBatch && !contentNotChange) {\n                api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Dispatch highlight action\n            if (!contentNotChange) {\n                api.dispatchAction({\n                    type: 'highlight',\n                    batch: payloadBatch\n                });\n                lastHover.payloadBatch = payloadBatch;\n            }\n            // Dispatch showTip action\n            var dataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n            api.dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                // expose to user.\n                dataIndex: seriesList[sampleSeriesIndex].getData().getRawIndex(dataIndex),\n                seriesIndex: payloadBatch[sampleSeriesIndex].seriesIndex,\n                from: this.uid\n            });\n\n            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\n                var paramsList = zrUtil.map(seriesList, function (series, index) {\n                    return series.getDataParams(payloadBatch[index].dataIndexInside);\n                });\n\n                if (!contentNotChange) {\n                    // Update html content\n                    var firstDataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = baseAxis.type === 'time'\n                        ? baseAxis.scale.getLabel(value[baseDimIndex])\n                        : seriesList[sampleSeriesIndex].getData().getName(firstDataIndex);\n                    var defaultHtml = (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + zrUtil.map(seriesList, function (series, index) {\n                            return series.formatTooltip(payloadBatch[index].dataIndexInside, true);\n                        }).join('<br />');\n\n                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\n\n                    this._showTooltipContent(\n                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\n                        point[0], point[1], positionExpr, null, api\n                    );\n                }\n                else {\n                    updatePosition(\n                        positionExpr || rootTooltipModel.get('position'),\n                        point[0], point[1],\n                        rootTooltipModel.get('confine'),\n                        this._tooltipContent, paramsList, null, api\n                    );\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on item\n         * @param {module:echarts/model/Series} seriesModel\n         * @param {number} dataIndex\n         * @param {string} dataType\n         * @param {Object} e\n         */\n        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\n            // FIXME Graph data\n            var api = this._api;\n            var data = seriesModel.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var tooltipOpt = itemModel.get('tooltip', true);\n            if (typeof tooltipOpt === 'string') {\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                var tooltipContent = tooltipOpt;\n                tooltipOpt = {\n                    formatter: tooltipContent\n                };\n            }\n            var rootTooltipModel = this._tooltipModel;\n            var seriesTooltipModel = seriesModel.getModel(\n                'tooltip', rootTooltipModel\n            );\n            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\n\n            var params = seriesModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\n\n            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\n\n            this._showTooltipContent(\n                tooltipModel, defaultHtml, params, asyncTicket,\n                e.offsetX, e.offsetY, e.position, e.target, api\n            );\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, target, api\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\n                var tooltipContent = this._tooltipContent;\n                var confine = tooltipModel.get('confine');\n\n                var formatter = tooltipModel.get('formatter');\n                positionExpr = positionExpr || tooltipModel.get('position');\n                var html = defaultHtml;\n\n                if (formatter) {\n                    if (typeof formatter === 'string') {\n                        html = formatUtil.formatTpl(formatter, params, true);\n                    }\n                    else if (typeof formatter === 'function') {\n                        var self = this;\n                        var ticket = asyncTicket;\n                        var callback = function (cbTicket, html) {\n                            if (cbTicket === self._ticket) {\n                                tooltipContent.setContent(html);\n\n                                updatePosition(\n                                    positionExpr, x, y, confine,\n                                    tooltipContent, params, target, api\n                                );\n                            }\n                        };\n                        self._ticket = ticket;\n                        html = formatter(params, ticket, callback);\n                    }\n                }\n\n                tooltipContent.show(tooltipModel);\n                tooltipContent.setContent(html);\n\n                updatePosition(\n                    positionExpr, x, y, confine,\n                    tooltipContent, params, target, api\n                );\n            }\n        },\n\n        /**\n         * Show axis pointer\n         * @param {string} [coordSysName]\n         */\n        _showAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.show();\n                });\n            }\n            else {\n                this.group.eachChild(function (child) {\n                    child.show();\n                });\n                this.group.show();\n            }\n        },\n\n        _resetLastHover: function () {\n            var lastHover = this._lastHover;\n            if (lastHover.payloadBatch) {\n                this._api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Reset lastHover\n            this._lastHover = {};\n        },\n        /**\n         * Hide axis pointer\n         * @param {string} [coordSysName]\n         */\n        _hideAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.hide();\n                });\n            }\n            else {\n                if (this.group.children().length) {\n                    this.group.hide();\n                }\n            }\n        },\n\n        _hide: function () {\n            clearTimeout(this._showTimeout);\n\n            this._hideAxisPointer();\n            this._resetLastHover();\n            if (!this._alwaysShowContent) {\n                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._api.dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n\n            this._lastX = this._lastY = null;\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var zr = api.getZr();\n            this._tooltipContent.hide();\n\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n        }\n    });\n\n\n/***/ }),\n/* 464 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(320);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(319);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        isBlank: function () {\n            return this._isBlank;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        setBlank: function (isBlank) {\n            this._isBlank = isBlank;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n/* 465 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(319);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            // Default with axisTick\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n/* 466 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(319);\n    var axisHelper = __webpack_require__(350);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n/* 467 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(465);\n    var zrUtil = __webpack_require__(319);\n    var ComponentModel = __webpack_require__(330);\n    var layout = __webpack_require__(341);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n/* 468 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(319);\n    var Axis = __webpack_require__(464);\n    var axisLabelInterval = __webpack_require__(473);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        getGlobalExtent: function () {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            return ret;\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n/* 469 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(319);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n/* 470 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(319);\n    var Cartesian = __webpack_require__(469);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n/* 471 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(341);\n    var axisHelper = __webpack_require__(350);\n\n    var zrUtil = __webpack_require__(319);\n    var Cartesian2D = __webpack_require__(470);\n    var Axis2D = __webpack_require__(468);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(472);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this._model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this._model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this._model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n        else {\n            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n                if (coordList[i].getAxis('x').index === xAxisIndex\n                    || coordList[i].getAxis('y').index === yAxisIndex\n                ) {\n                    return coordList[i];\n                }\n            }\n        }\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(349).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n/* 472 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(364);\n    var ComponentModel = __webpack_require__(330);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n/* 473 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = __webpack_require__(319);\n    var axisHelper = __webpack_require__(350);\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n/***/ }),\n/* 474 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n/* 475 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(319);\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Array.<string>} [defaultNames]    Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [extraPrefix]             Prefix of name when filling the left dimensions.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\n        if (!data) {\n            return dimensions;\n        }\n\n        var value0 = retrieveValue(data[0]);\n        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\n\n        defaultNames = defaultNames || [];\n        extraPrefix = extraPrefix || 'extra';\n        for (var i = 0; i < dimSize; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n/* 476 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (coordSys.type === 'singleAxis') {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n/***/ }),\n/* 477 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(322);\n    var zrUtil = __webpack_require__(319);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n/* 478 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(319);\n    var modelUtil = __webpack_require__(327);\n    var Model = __webpack_require__(331);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(330);\n\n    var globalDefault = __webpack_require__(480);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption();\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts;\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(366));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n/* 479 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(319);\n    var modelUtil = __webpack_require__(327);\n    var ComponentModel = __webpack_require__(330);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n/* 480 */\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: true,\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000\n    };\n\n\n/***/ }),\n/* 481 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(351)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n/* 482 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n/* 483 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(351)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes) {\n            var style = getItemStyle.call(this, excludes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n/* 484 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(351)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n/* 485 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(335);\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ }),\n/* 486 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(319);\n    var compatStyle = __webpack_require__(487);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 487 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(319);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ }),\n/* 488 */\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n/* 489 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(319);\n    var Scale = __webpack_require__(340);\n    var numberUtil = __webpack_require__(320);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(352);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n/* 490 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(319);\n    var Scale = __webpack_require__(340);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n/* 491 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    var zrUtil = __webpack_require__(319);\n    var numberUtil = __webpack_require__(320);\n    var formatUtil = __webpack_require__(326);\n\n    var IntervalScale = __webpack_require__(352);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date);\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                mathCeil(extent[0] / interval) * interval,\n                mathFloor(extent[1] / interval) * interval\n            ];\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function () {\n        return new TimeScale();\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n/* 492 */\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n/* 493 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(343);\n    var componentUtil = __webpack_require__(353);\n    var clazzUtil = __webpack_require__(329);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n/* 494 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(358);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n/* 495 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 496 */,\n/* 497 */,\n/* 498 */,\n/* 499 */,\n/* 500 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(418);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(301)(\"ca8489f0\", content, true);\n\n/***/ }),\n/* 501 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(419);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(301)(\"b11a3190\", content, true);\n\n/***/ }),\n/* 502 */,\n/* 503 */,\n/* 504 */,\n/* 505 */,\n/* 506 */,\n/* 507 */,\n/* 508 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(426);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(301)(\"67c1d9c0\", content, true);\n\n/***/ }),\n/* 509 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(427);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(301)(\"5a720045\", content, true);\n\n/***/ }),\n/* 510 */,\n/* 511 */,\n/* 512 */,\n/* 513 */,\n/* 514 */,\n/* 515 */,\n/* 516 */,\n/* 517 */,\n/* 518 */,\n/* 519 */,\n/* 520 */,\n/* 521 */,\n/* 522 */,\n/* 523 */,\n/* 524 */,\n/* 525 */,\n/* 526 */,\n/* 527 */,\n/* 528 */,\n/* 529 */,\n/* 530 */\n/***/ (function(module, exports, __webpack_require__) {\n\n!function(t,e){ true?module.exports=e():\"function\"==typeof define&&define.amd?define(\"CountTo\",[],e):\"object\"==typeof exports?exports.CountTo=e():t.CountTo=e()}(this,function(){return function(t){function e(n){if(i[n])return i[n].exports;var a=i[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,e),a.l=!0,a.exports}var i={};return e.m=t,e.c=i,e.i=function(t){return t},e.d=function(t,i,n){e.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:n})},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,\"a\",i),i},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"/dist/\",e(e.s=5)}([function(t,e,i){var n=i(3)(i(1),i(4),null,null);t.exports=n.exports},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=i(2);e.default={props:{startVal:{type:Number,required:!1,default:0},endVal:{type:Number,required:!1,default:2017},duration:{type:Number,required:!1,default:3e3},autoplay:{type:Boolean,required:!1,default:!0},decimals:{type:Number,required:!1,default:0,validator:function(t){return t>=0}},decimal:{type:String,required:!1,default:\".\"},separator:{type:String,required:!1,default:\",\"},prefix:{type:String,required:!1,default:\"\"},suffix:{type:String,required:!1,default:\"\"},useEasing:{type:Boolean,required:!1,default:!0},easingFn:{type:Function,default:function(t,e,i,n){return i*(1-Math.pow(2,-10*t/n))*1024/1023+e}}},data:function(){return{localStartVal:this.startVal,displayValue:this.formatNumber(this.startVal),printVal:null,paused:!1,localDuration:this.duration,startTime:null,timestamp:null,remaining:null,rAF:null}},computed:{countDown:function(){return this.startVal>this.endVal}},mounted:function(){this.autoplay&&this.start(),this.$emit(\"mountedCallback\")},methods:{start:function(){this.localStartVal=this.startVal,this.startTime=null,this.localDuration=this.duration,this.paused=!1,this.rAF=(0,n.requestAnimationFrame)(this.count)},pauseResume:function(){this.paused?(this.resume(),this.paused=!1):(this.pause(),this.paused=!0)},pause:function(){(0,n.cancelAnimationFrame)(this.rAF)},resume:function(){this.startTime=null,this.localDuration=+this.remaining,this.localStartVal=+this.printVal,(0,n.requestAnimationFrame)(this.count)},reset:function(){this.startTime=null,(0,n.cancelAnimationFrame)(this.rAF),this.displayValue=this.formatNumber(this.startVal)},count:function(t){this.startTime||(this.startTime=t),this.timestamp=t;var e=t-this.startTime;this.remaining=this.localDuration-e,this.useEasing?this.countDown?this.printVal=this.localStartVal-this.easingFn(e,0,this.localStartVal-this.endVal,this.localDuration):this.printVal=this.easingFn(e,this.localStartVal,this.endVal-this.localStartVal,this.localDuration):this.countDown?this.printVal=this.localStartVal-(this.localStartVal-this.endVal)*(e/this.localDuration):this.printVal=this.localStartVal+(this.localStartVal-this.startVal)*(e/this.localDuration),this.countDown?this.printVal=this.printVal<this.endVal?this.endVal:this.printVal:this.printVal=this.printVal>this.endVal?this.endVal:this.printVal,this.displayValue=this.formatNumber(this.printVal),e<this.localDuration?this.rAF=(0,n.requestAnimationFrame)(this.count):this.$emit(\"callback\")},isNumber:function(t){return!isNaN(parseFloat(t))},formatNumber:function(t){t=t.toFixed(this.decimals),t+=\"\";var e=t.split(\".\"),i=e[0],n=e.length>1?this.decimal+e[1]:\"\",a=/(\\d+)(\\d{3})/;if(this.separator&&!this.isNumber(this.separator))for(;a.test(i);)i=i.replace(a,\"$1\"+this.separator+\"$2\");return this.prefix+i+n+this.suffix}},destroyed:function(){(0,n.cancelAnimationFrame)(this.rAF)}}},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});for(var n=0,a=\"webkit moz ms o\".split(\" \"),r=window.requestAnimationFrame,s=window.cancelAnimationFrame,o=void 0,u=0;u<a.length&&(!r||!s);u++)o=a[u],e.requestAnimationFrame=r=r||window[o+\"RequestAnimationFrame\"],e.cancelAnimationFrame=s=s||window[o+\"CancelAnimationFrame\"]||window[o+\"CancelRequestAnimationFrame\"];r&&s||(e.requestAnimationFrame=r=function(t){var e=(new Date).getTime(),i=Math.max(0,16-(e-n)),a=window.setTimeout(function(){t(e+i)},i);return n=e+i,a},e.cancelAnimationFrame=s=function(t){window.clearTimeout(t)}),e.requestAnimationFrame=r,e.cancelAnimationFrame=s},function(t,e){t.exports=function(t,e,i,n){var a,r=t=t||{},s=typeof t.default;\"object\"!==s&&\"function\"!==s||(a=t,r=t.default);var o=\"function\"==typeof r?r.options:r;if(e&&(o.render=e.render,o.staticRenderFns=e.staticRenderFns),i&&(o._scopeId=i),n){var u=Object.create(o.computed||null);Object.keys(n).forEach(function(t){var e=n[t];u[t]=function(){return e}}),o.computed=u}return{esModule:a,exports:r,options:o}}},function(t,e){t.exports={render:function(){var t=this,e=t.$createElement;return(t._self._c||e)(\"span\",[t._v(\"\\n  \"+t._s(t.displayValue)+\"\\n\")])},staticRenderFns:[]}},function(t,e,i){\"use strict\";function n(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,\"__esModule\",{value:!0});var a=i(0),r=n(a);e.default=r.default,\"undefined\"!=typeof window&&window.Vue&&window.Vue.component(\"count-to\",r.default)}])});\n//# sourceMappingURL=vue-count-to.min.js.map\n\n/***/ }),\n/* 531 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(2)(\n  /* script */\n  __webpack_require__(381),\n  /* template */\n  __webpack_require__(561),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 532 */,\n/* 533 */,\n/* 534 */,\n/* 535 */,\n/* 536 */,\n/* 537 */,\n/* 538 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(508)\n}\nvar Component = __webpack_require__(2)(\n  /* script */\n  __webpack_require__(389),\n  /* template */\n  __webpack_require__(554),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-50d87894\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 539 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(509)\n}\nvar Component = __webpack_require__(2)(\n  /* script */\n  __webpack_require__(390),\n  /* template */\n  __webpack_require__(555),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-51b23524\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 540 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(501)\n}\nvar Component = __webpack_require__(2)(\n  /* script */\n  __webpack_require__(391),\n  /* template */\n  __webpack_require__(547),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 541 */,\n/* 542 */,\n/* 543 */,\n/* 544 */,\n/* 545 */,\n/* 546 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"pan-item\",\n    style: ({\n      zIndex: _vm.zIndex,\n      height: _vm.height,\n      width: _vm.width\n    })\n  }, [_c('div', {\n    staticClass: \"pan-info\"\n  }, [_c('div', {\n    staticClass: \"pan-info-roles-container\"\n  }, [_vm._t(\"default\")], 2)]), _vm._v(\" \"), _c('img', {\n    staticClass: \"pan-thumb\",\n    attrs: {\n      \"src\": _vm.image\n    }\n  })])\n},staticRenderFns: []}\n\n/***/ }),\n/* 547 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"weekly-using-container\"\n  }, [_c('span', {\n    staticClass: \"weekly-using-container-title\"\n  }, [_vm._v(\"最近使用情况\")]), _vm._v(\" \"), _c('line-chart', {\n    attrs: {\n      \"listData\": _vm.listData\n    }\n  })], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 548 */,\n/* 549 */,\n/* 550 */,\n/* 551 */,\n/* 552 */,\n/* 553 */,\n/* 554 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dashboard-editor-container\"\n  }, [_c('div', {\n    staticClass: \" clearfix\"\n  }, [_c('PanThumb', {\n    staticStyle: {\n      \"float\": \"left\"\n    },\n    attrs: {\n      \"image\": _vm.avatar\n    }\n  }, [_vm._v(\" 你的权限:\\n            \"), _vm._l((_vm.roles), function(item) {\n    return _c('span', {\n      staticClass: \"pan-info-roles\"\n    }, [_vm._v(_vm._s(item))])\n  })], 2), _vm._v(\" \"), _c('a', {\n    staticClass: \"github-corner\",\n    attrs: {\n      \"href\": \"https://github.com/weihomechen/vue-mail-front\",\n      \"target\": \"_blank\",\n      \"aria-label\": \"View source on Github\"\n    }\n  }, [_c('svg', {\n    staticStyle: {\n      \"fill\": \"#4AB7BD\",\n      \"color\": \"#fff\",\n      \"position\": \"absolute\",\n      \"top\": \"50px\",\n      \"border\": \"0\",\n      \"right\": \"0\"\n    },\n    attrs: {\n      \"width\": \"80\",\n      \"height\": \"80\",\n      \"viewBox\": \"0 0 250 250\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_c('path', {\n    attrs: {\n      \"d\": \"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"\n    }\n  }), _vm._v(\" \"), _c('path', {\n    staticClass: \"octo-arm\",\n    staticStyle: {\n      \"transform-origin\": \"130px 106px\"\n    },\n    attrs: {\n      \"d\": \"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\",\n      \"fill\": \"currentColor\"\n    }\n  }), _vm._v(\" \"), _c('path', {\n    staticClass: \"octo-body\",\n    attrs: {\n      \"d\": \"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\",\n      \"fill\": \"currentColor\"\n    }\n  })])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-container\"\n  }, [_c('span', {\n    staticClass: \"display_name\"\n  }, [_vm._v(_vm._s(_vm.name))]), _vm._v(\" \"), _c('span', {\n    staticStyle: {\n      \"font-size\": \"20px\",\n      \"padding-top\": \"20px\",\n      \"display\": \"inline-block\"\n    }\n  }, [_vm._v(\"普通编辑dashboard\")])])], 1), _vm._v(\" \"), _c('div', [_c('img', {\n    staticClass: \"emptyGif\",\n    attrs: {\n      \"src\": _vm.emptyGif\n    }\n  })])])\n},staticRenderFns: []}\n\n/***/ }),\n/* 555 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dashboard-container\"\n  }, [_c('div', {\n    staticClass: \" clearfix\"\n  }, [_c('PanThumb', {\n    staticStyle: {\n      \"float\": \"left\"\n    },\n    attrs: {\n      \"image\": _vm.avatar\n    }\n  }, [_vm._v(\" 你的权限:\\n            \"), _vm._l((_vm.roles), function(item) {\n    return _c('span', {\n      staticClass: \"pan-info-roles\"\n    }, [_vm._v(_vm._s(item))])\n  })], 2), _vm._v(\" \"), _c('a', {\n    staticClass: \"github-corner\",\n    attrs: {\n      \"href\": \"https://github.com/weihomechen/vue-mail-front\",\n      \"target\": \"_blank\",\n      \"aria-label\": \"View source on Github\"\n    }\n  }, [_c('svg', {\n    staticStyle: {\n      \"fill\": \"#4AB7BD\",\n      \"color\": \"#fff\",\n      \"position\": \"absolute\",\n      \"top\": \"50px\",\n      \"border\": \"0\",\n      \"right\": \"0\"\n    },\n    attrs: {\n      \"width\": \"80\",\n      \"height\": \"80\",\n      \"viewBox\": \"0 0 250 250\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_c('path', {\n    attrs: {\n      \"d\": \"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"\n    }\n  }), _vm._v(\" \"), _c('path', {\n    staticClass: \"octo-arm\",\n    staticStyle: {\n      \"transform-origin\": \"130px 106px\"\n    },\n    attrs: {\n      \"d\": \"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\",\n      \"fill\": \"currentColor\"\n    }\n  }), _vm._v(\" \"), _c('path', {\n    staticClass: \"octo-body\",\n    attrs: {\n      \"d\": \"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\",\n      \"fill\": \"currentColor\"\n    }\n  })])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-container\"\n  }, [_c('span', {\n    staticClass: \"display_name\"\n  }, [_vm._v(_vm._s(_vm.name))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-wrapper\"\n  }, [_c('div', {\n    staticClass: \"info-item\"\n  }, [_c('countTo', {\n    staticClass: \"info-item-num\",\n    attrs: {\n      \"startVal\": 0,\n      \"endVal\": _vm.statisticsData.inbox_count,\n      \"duration\": 3400\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"info-item-text\"\n  }, [_vm._v(\"收件\")]), _vm._v(\" \"), _c('icon-svg', {\n    staticClass: \"dashboard-icon\",\n    attrs: {\n      \"icon-class\": \"a\"\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-item\",\n    staticStyle: {\n      \"cursor\": \"auto\"\n    }\n  }, [_c('countTo', {\n    staticClass: \"info-item-num\",\n    attrs: {\n      \"startVal\": 0,\n      \"endVal\": _vm.statisticsData.outbox_count,\n      \"duration\": 3600\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"info-item-text\"\n  }, [_vm._v(\"发件\")]), _vm._v(\" \"), _c('icon-svg', {\n    staticClass: \"dashboard-icon\",\n    attrs: {\n      \"icon-class\": \"b\"\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-item\"\n  }, [_c('countTo', {\n    ref: \"countTo3\",\n    staticClass: \"info-item-num\",\n    attrs: {\n      \"startVal\": 0,\n      \"endVal\": _vm.statisticsData.draft_count,\n      \"duration\": 3800\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"info-item-text\"\n  }, [_vm._v(\"草稿\")]), _vm._v(\" \"), _c('icon-svg', {\n    staticClass: \"dashboard-icon\",\n    attrs: {\n      \"icon-class\": \"c\"\n    }\n  })], 1)])])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"btn-group\"\n  }, [_c('router-link', {\n    staticClass: \"pan-btn green-btn\",\n    attrs: {\n      \"to\": \"/mail_send/index\"\n    }\n  }, [_vm._v(\"写信\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn orange-btn\",\n    attrs: {\n      \"to\": \"/inbox/index\"\n    }\n  }, [_vm._v(\"收件箱\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn blue-btn\",\n    attrs: {\n      \"to\": \"/outbox/index\"\n    }\n  }, [_vm._v(\"发件箱\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn pink-btn\",\n    attrs: {\n      \"to\": \"/draftbox/index\"\n    }\n  }, [_vm._v(\"草稿箱\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn cyan-btn\",\n    attrs: {\n      \"to\": \"/mail_label/index\"\n    }\n  }, [_vm._v(\"标签管理\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn red-btn\",\n    attrs: {\n      \"to\": \"/mail_contacts/index\"\n    }\n  }, [_vm._v(\"通讯录\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"clearfix main-dashboard-container\"\n  }, [_c('div', {\n    staticClass: \"chart-container\"\n  }, [_c('WeeklyUsing', {\n    attrs: {\n      \"listData\": _vm.statisticsData.weekly_using\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"unread-mail-container\"\n  }, [_c('div', {\n    staticClass: \"unread-mail-title\"\n  }, [_vm._v(\"未读邮件\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"unread-mail-wrapper\"\n  }, [(_vm.unreadMails.length != 0) ? _vm._l((_vm.unreadMails), function(mail) {\n    return _c('div', {\n      staticClass: \"unread-mail-item\"\n    }, [_c('span', {\n      staticClass: \"unread-mail-content\",\n      on: {\n        \"click\": function($event) {\n          _vm.toUnreadMail(mail.id)\n        }\n      }\n    }, [_vm._v(\"\\n                            \" + _vm._s(mail.title) + \"\\n                        \")]), _vm._v(\" \"), _c('el-tag', {\n      attrs: {\n        \"type\": \"danger\"\n      }\n    }, [_vm._v(_vm._s(_vm._f(\"parseTime\")(mail.receiveDate, '{m}-{d} {h}:{i}')))]), _vm._v(\" \"), _c('el-tag', {\n      attrs: {\n        \"type\": \"primary\"\n      }\n    }, [_vm._v(_vm._s(mail.sendName))])], 1)\n  }) : [_c('div', {\n    staticClass: \"unread-mail-emptyTitle\"\n  }, [_vm._v(\"所有邮件都被你读过了\")])]], 2)])])])\n},staticRenderFns: []}\n\n/***/ }),\n/* 556 */,\n/* 557 */,\n/* 558 */,\n/* 559 */,\n/* 560 */,\n/* 561 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: _vm.className,\n    style: ({\n      height: _vm.height,\n      width: _vm.width\n    }),\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 562 */,\n/* 563 */,\n/* 564 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dashboard-container\"\n  }, [_c(_vm.currentRole, {\n    tag: \"component\"\n  })], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 565 */,\n/* 566 */,\n/* 567 */,\n/* 568 */,\n/* 569 */,\n/* 570 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(319);\n    var Draggable = __webpack_require__(604);\n\n    var Eventful = __webpack_require__(336);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n/***/ }),\n/* 571 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(319);\n    var config = __webpack_require__(342);\n    var Style = __webpack_require__(379);\n    var Pattern = __webpack_require__(378);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n/* 572 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(342);\n    var util = __webpack_require__(319);\n    var log = __webpack_require__(376);\n    var BoundingRect = __webpack_require__(328);\n    var timsort = __webpack_require__(356);\n\n    var Layer = __webpack_require__(571);\n\n    var requestAnimationFrame = __webpack_require__(372);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(377);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n/* 573 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(319);\n    var env = __webpack_require__(325);\n\n    var Group = __webpack_require__(343);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(356);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n/* 574 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(319);\n    var Dispatcher = __webpack_require__(345).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(372);\n\n    var Animator = __webpack_require__(371);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n/* 575 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(576);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n/* 576 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n/* 577 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(373).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n/* 578 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(332);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 579 */\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 580 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(344).CMD;\n    var line = __webpack_require__(579);\n    var cubic = __webpack_require__(578);\n    var quadratic = __webpack_require__(581);\n    var arc = __webpack_require__(577);\n    var normalizeRadian = __webpack_require__(373).normalizeRadian;\n    var curve = __webpack_require__(332);\n\n    var windingLine = __webpack_require__(582);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n/* 581 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(332);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 582 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n/* 583 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(345);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n/* 584 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(321);\n    var curve = __webpack_require__(332);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n/* 585 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(345);\n    var zrUtil = __webpack_require__(319);\n    var Eventful = __webpack_require__(336);\n    var env = __webpack_require__(325);\n    var GestureMgr = __webpack_require__(583);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n/* 586 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(323);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n/* 587 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(319);\n\n    var Gradient = __webpack_require__(358);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n/* 588 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(319);\n\n    var Gradient = __webpack_require__(358);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n/* 589 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(357);\n    var zrUtil = __webpack_require__(319);\n    var textContain = __webpack_require__(335);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n/* 590 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n/* 591 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(321);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n/* 592 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(321);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n/* 593 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = __webpack_require__(335);\n    var BoundingRect = __webpack_require__(328);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n/* 594 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(323).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n/* 595 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(332);\n    var vec2 = __webpack_require__(321);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(323).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n/* 596 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(323).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 597 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(323).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n/* 598 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(380);\n\n    module.exports = __webpack_require__(323).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n/* 599 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(380);\n\n    module.exports = __webpack_require__(323).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n/* 600 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(590);\n\n    module.exports = __webpack_require__(323).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n/* 601 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(323).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 602 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = __webpack_require__(325);\n    var Path = __webpack_require__(323);\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n/* 603 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(371);\n    var util = __webpack_require__(319);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(376);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n/* 604 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n/* 605 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(346);\n    var vector = __webpack_require__(321);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n/* 606 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(323);\n    var PathProxy = __webpack_require__(344);\n    var transformPath = __webpack_require__(607);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n/* 607 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(344).CMD;\n    var vec2 = __webpack_require__(321);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n/* 608 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(375);\n    var env = __webpack_require__(325);\n    var zrUtil = __webpack_require__(319);\n\n    var Handler = __webpack_require__(570);\n    var Storage = __webpack_require__(573);\n    var Animation = __webpack_require__(574);\n    var HandlerProxy = __webpack_require__(585);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(572)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.5.1';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// js/0.0e5f47f2f5e2dd4b77f5.js","var Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7fc88004\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/dashboard/index.vue\n// module id = 302\n// module chunks = 0","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 319\n// module chunks = 0","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * Fix rounding error of float numbers\n     * @param {number} x\n     * @return {number}\n     */\n    number.round = function (x, precision) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        return +(+x).toFixed(precision);\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n        var dotIndex = str.indexOf('.');\n        if (dotIndex < 0) {\n            return 0;\n        }\n        return str.length - 1 - dotIndex;\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    /**\n     * @param {string|Date|number} value\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Treat as ISO format. See issue #3623\n            var ret = new Date(value);\n            if (isNaN(+ret)) {\n                // FIXME new Date('1970-01-01') is UTC, new Date('1970/01/01') is local\n                ret = new Date(new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'));\n            }\n            return ret;\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\n    };\n\n    // \"Nice Numbers for Graph Labels\" of Graphic Gems\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\n     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     * @param  {number} val\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exp10 = number.quantity(val);\n        var f = val / exp10; // between 1 and 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        return nf * exp10;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 320\n// module chunks = 0","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 321\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var round = Math.round;\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 322\n// module chunks = 0","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 323\n// module chunks = 0","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts (dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this);\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.time && console.time('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            // console.time && console.timeEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            var view = ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId];\n            if (view && view.__alive) {\n                view[method](model, ecModel, ecIns._api, payload);\n            }\n        }, ecIns);\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // if (__DEV__) {\n        //     zrUtil.assert(\n        //         !this[IN_MAIN_PROCESS],\n        //         '`dispatchAction` should not be called during main process.'\n        //         + 'unless updateMathod is \"none\".'\n        //     );\n        // }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        for (var i = 0; i < payloads.length; i++) {\n            var batchItem = payloads[i];\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var actions = [];\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.4.0',\n        dependencies: {\n            zrender: '3.3.0'\n        }\n    };\n\n    function enableConnect(chart) {\n\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n\n    }\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    //\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 324\n// module chunks = 0","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 325\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n    /**\n     * 每三位默认加,格式化\n     * @type {string|number} x\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var y = date.getFullYear();\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var h = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 326\n// module chunks = 0","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n\n            var seriesIndex = this.seriesIndex;\n            var seriesName = this.name;\n\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: seriesIndex,\n                seriesName: seriesName,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-';\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, goeName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = parsedKey[2];\n\n            if (!mainType || !queryType) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            queryParam[queryType.toLowerCase()] = value;\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 327\n// module chunks = 0","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 328\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 329\n// module chunks = 0","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 330\n// module chunks = 0","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 331\n// module chunks = 0","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 332\n// module chunks = 0","\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 335\n// module chunks = 0","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 336\n// module chunks = 0","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 337\n// module chunks = 0","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string>} dimensions\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {number}\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var nearestIdx = -1;\n        if (dimData) {\n            var minDist = Number.MAX_VALUE;\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var diff = value - this.get(dim, i, stack);\n                var dist = Math.abs(diff);\n                if (\n                    diff <= maxDistance\n                    && (dist < minDist\n                        // For the case of two data are same on xAxis, which has sequence data.\n                        // Show the nearest index\n                        // https://github.com/ecomfe/echarts/issues/2869\n                        || (dist === minDist && diff > 0)\n                    )\n                ) {\n                    minDist = dist;\n                    nearestIdx = i;\n                }\n            }\n        }\n        return nearestIdx;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 339\n// module chunks = 0","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    function Scale() {\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 340\n// module chunks = 0","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n        var hNames = ['width', 'left', 'right']; // Order by priority.\n        var vNames = ['height', 'top', 'bottom']; // Order by priority.\n        var hResult = merge(hNames);\n        var vResult = merge(vNames);\n\n        copy(hNames, targetOption, hResult);\n        copy(vNames, targetOption, vResult);\n\n        function merge(names) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 341\n// module chunks = 0","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 342\n// module chunks = 0","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 343\n// module chunks = 0","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 344\n// module chunks = 0","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 345\n// module chunks = 0","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 346\n// module chunks = 0","import fetch from 'utils/fetch';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nexport function fetchList(query) {\r\n    return fetch({\r\n        url: '/inbox/list',\r\n        method: 'get',\r\n        params: query\r\n    });\r\n}\r\n\r\nexport function fetchUnReadList() {\r\n    return fetch({\r\n        url: '/inbox/list',\r\n        method: 'get',\r\n        params: { status: 0, sort: 'receiveDate', order: 'descending' }\r\n    });\r\n}\r\n\r\nexport function delReceiveMail(idArr) {\r\n    const idStr = String(idArr);\r\n    console.log('要删除的收件id:' + idStr);\r\n    return Observable.create(observer => {\r\n        setTimeout(() => { observer.next(true); }, 1000);\r\n    });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/api/inbox.js","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Interface of Coordinate System Class\n     *\n     * create:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *     @return {Object} coordinate system instance\n     *\n     * update:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *\n     * convertToPixel:\n     * convertFromPixel:\n     *     These two methods is also responsible for determine whether this\n     *     coodinate system is applicable to the given `finder`.\n     *     Each coordinate system will be tried, util one returns none\n     *     null/undefined value.\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {Object} finder\n     *     @param {Array|number} value\n     *     @return {Array|number} convert result.\n     *\n     * containPoint:\n     *     @param {Array.<number>} point In pixel coordinate system.\n     *     @return {boolean}\n     */\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 349\n// module chunks = 0","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        axis.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var extent = axisHelper.getScaleExtent(axis, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axis.type === 'category' ? scale.getLabel(tick) : tick,\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 350\n// module chunks = 0","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 351\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            var interval = this._interval;\n            var extent = this._extent;\n            var ticks = [];\n\n            // Consider this case: using dataZoom toolbox, zoom and zoom.\n            var safeLimit = 10000;\n\n            if (interval) {\n                var niceExtent = this._niceExtent;\n                var precision = getPrecisionSafe(interval) + 2;\n\n                if (extent[0] < niceExtent[0]) {\n                    ticks.push(extent[0]);\n                }\n                var tick = niceExtent[0];\n\n                while (tick <= niceExtent[1]) {\n                    ticks.push(tick);\n                    // Avoid rounding error\n                    tick = roundingErrorFix(tick + interval, precision);\n                    if (ticks.length > safeLimit) {\n                        return [];\n                    }\n                }\n                // Consider this case: the last item of ticks is smaller\n                // than niceExtent[1] and niceExtent[1] === extent[1].\n                if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceExtent[1])) {\n                    ticks.push(extent[1]);\n                }\n            }\n\n            return ticks;\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} n\n         * @return {number}\n         */\n        getLabel: function (data) {\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n            // var niceSpan = numberUtil.nice(span, false);\n            var step = roundingErrorFix(\n                numberUtil.nice(span / splitNumber, true),\n                Math.max(\n                    getPrecisionSafe(extent[0]),\n                    getPrecisionSafe(extent[1])\n                // extent may be [0, 1], and step should have 1 more digits.\n                // To make it safe we add 2 more digits\n                ) + 2\n            );\n\n            var precision = getPrecisionSafe(step) + 2;\n            // Niced extent inside original extent\n            var niceExtent = [\n                roundingErrorFix(mathCeil(extent[0] / step) * step, precision),\n                roundingErrorFix(mathFloor(extent[1] / step) * step, precision)\n            ];\n\n            this._interval = step;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundingErrorFix(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundingErrorFix(mathCeil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 352\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 353\n// module chunks = 0","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 356\n// module chunks = 0","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 357\n// module chunks = 0","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 358\n// module chunks = 0","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Symbol.js\n// module id = 359\n// module chunks = 0","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 360\n// module chunks = 0","\n\n    var modelUtil = require('../../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n    var env = require('zrender/lib/core/env');\n\n    var formatUtil = require('../../util/format');\n    var addCommas = formatUtil.addCommas;\n    var encodeHTML = formatUtil.encodeHTML;\n\n    function fillLabel(opt) {\n        modelUtil.defaultEmphasis(\n            opt.label,\n            modelUtil.LABEL_OPTIONS\n        );\n    }\n    var MarkerModel = require('../../echarts').extendComponentModel({\n\n        type: 'marker',\n\n        dependencies: ['series', 'grid', 'polar', 'geo'],\n        /**\n         * @overrite\n         */\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            if (__DEV__) {\n                if (this.type === 'marker') {\n                    throw new Error('Marker component is abstract component. Use markLine, markPoint, markArea instead.');\n                }\n            }\n            this.mergeDefaultAndTheme(option, ecModel);\n            this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var hostSeries = this.__hostSeries;\n            return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n        },\n\n        mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n            var MarkerModel = this.constructor;\n            var modelPropName = this.mainType + 'Model';\n            if (!createdBySelf) {\n                ecModel.eachSeries(function (seriesModel) {\n\n                    var markerOpt = seriesModel.get(this.mainType);\n\n                    var markerModel = seriesModel[modelPropName];\n                    if (!markerOpt || !markerOpt.data) {\n                        seriesModel[modelPropName] = null;\n                        return;\n                    }\n                    if (!markerModel) {\n                        if (isInit) {\n                            // Default label emphasis `position` and `show`\n                            fillLabel(markerOpt);\n                        }\n                        zrUtil.each(markerOpt.data, function (item) {\n                            // FIXME Overwrite fillLabel method ?\n                            if (item instanceof Array) {\n                                fillLabel(item[0]);\n                                fillLabel(item[1]);\n                            }\n                            else {\n                                fillLabel(item);\n                            }\n                        });\n\n                        markerModel = new MarkerModel(\n                            markerOpt, this, ecModel\n                        );\n\n                        zrUtil.extend(markerModel, {\n                            mainType: this.mainType,\n                            // Use the same series index and name\n                            seriesIndex: seriesModel.seriesIndex,\n                            name: seriesModel.name,\n                            createdBySelf: true\n                        });\n\n                        markerModel.__hostSeries = seriesModel;\n                    }\n                    else {\n                        markerModel.mergeOption(markerOpt, ecModel, true);\n                    }\n                    seriesModel[modelPropName] = markerModel;\n                }, this);\n            }\n        },\n\n        formatTooltip: function (dataIndex) {\n            var data = this.getData();\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n            var name = data.getName(dataIndex);\n            var html = encodeHTML(this.name);\n            if (value != null || name) {\n                html += '<br />';\n            }\n            if (name) {\n                html += encodeHTML(name);\n                if (value != null) {\n                    html += ' : ';\n                }\n            }\n            if (value != null) {\n                html += encodeHTML(formattedValue);\n            }\n            return html;\n        },\n\n        getData: function () {\n            return this._data;\n        },\n\n        setData: function (data) {\n            this._data = data;\n        }\n    });\n\n    zrUtil.mixin(MarkerModel, modelUtil.dataFormatMixin);\n\n    module.exports = MarkerModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/marker/MarkerModel.js\n// module id = 361\n// module chunks = 0","\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'marker',\n\n        init: function () {\n            /**\n             * Markline grouped by series\n             * @private\n             * @type {Object}\n             */\n            this.markerGroupMap = {};\n        },\n\n        render: function (markerModel, ecModel, api) {\n            var markerGroupMap = this.markerGroupMap;\n            for (var name in markerGroupMap) {\n                if (markerGroupMap.hasOwnProperty(name)) {\n                    markerGroupMap[name].__keep = false;\n                }\n            }\n\n            var markerModelKey = this.type + 'Model';\n            ecModel.eachSeries(function (seriesModel) {\n                var markerModel = seriesModel[markerModelKey];\n                markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n            }, this);\n\n            for (var name in markerGroupMap) {\n                if (markerGroupMap.hasOwnProperty(name) && !markerGroupMap[name].__keep) {\n                    this.group.remove(markerGroupMap[name].group);\n                }\n            }\n        },\n\n        renderSeries: function () {}\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/marker/MarkerView.js\n// module id = 362\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../../util/number');\n    var indexOf = zrUtil.indexOf;\n\n    function hasXOrY(item) {\n        return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n    }\n\n    function hasXAndY(item) {\n        return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n    }\n\n    function getPrecision(data, valueAxisDim, dataIndex) {\n        var precision = -1;\n        do {\n            precision = Math.max(\n                numberUtil.getPrecision(data.get(\n                    valueAxisDim, dataIndex\n                )),\n                precision\n            );\n            data = data.stackedOn;\n        } while (data);\n\n        return precision;\n    }\n\n    function markerTypeCalculatorWithExtent(\n        mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex\n    ) {\n        var coordArr = [];\n        var value = numCalculate(data, targetDataDim, mlType);\n\n        var dataIndex = data.indexOfNearest(targetDataDim, value, true);\n        coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex, true);\n        coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex, true);\n\n        var precision = getPrecision(data, targetDataDim, dataIndex);\n        if (precision >= 0) {\n            coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n        }\n\n        return coordArr;\n    }\n\n    var curry = zrUtil.curry;\n    // TODO Specified percent\n    var markerTypeCalculator = {\n        /**\n         * @method\n         * @param {module:echarts/data/List} data\n         * @param {string} baseAxisDim\n         * @param {string} valueAxisDim\n         */\n        min: curry(markerTypeCalculatorWithExtent, 'min'),\n        /**\n         * @method\n         * @param {module:echarts/data/List} data\n         * @param {string} baseAxisDim\n         * @param {string} valueAxisDim\n         */\n        max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n        /**\n         * @method\n         * @param {module:echarts/data/List} data\n         * @param {string} baseAxisDim\n         * @param {string} valueAxisDim\n         */\n        average: curry(markerTypeCalculatorWithExtent, 'average')\n    };\n\n    /**\n     * Transform markPoint data item to format used in List by do the following\n     * 1. Calculate statistic like `max`, `min`, `average`\n     * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n     * @param  {module:echarts/model/Series} seriesModel\n     * @param  {module:echarts/coord/*} [coordSys]\n     * @param  {Object} item\n     * @return {Object}\n     */\n    var dataTransform = function (seriesModel, item) {\n        var data = seriesModel.getData();\n        var coordSys = seriesModel.coordinateSystem;\n\n        // 1. If not specify the position with pixel directly\n        // 2. If `coord` is not a data array. Which uses `xAxis`,\n        // `yAxis` to specify the coord on each dimension\n\n        // parseFloat first because item.x and item.y can be percent string like '20%'\n        if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n            var dims = coordSys.dimensions;\n            var axisInfo = getAxisInfo(item, data, coordSys, seriesModel);\n\n            // Clone the option\n            // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n            item = zrUtil.clone(item);\n\n            if (item.type\n                && markerTypeCalculator[item.type]\n                && axisInfo.baseAxis && axisInfo.valueAxis\n            ) {\n                var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n                var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n\n                item.coord = markerTypeCalculator[item.type](\n                    data, axisInfo.baseDataDim, axisInfo.valueDataDim,\n                    otherCoordIndex, targetCoordIndex\n                );\n                // Force to use the value of calculated value.\n                item.value = item.coord[targetCoordIndex];\n            }\n            else {\n                // FIXME Only has one of xAxis and yAxis.\n                var coord = [\n                    item.xAxis != null ? item.xAxis : item.radiusAxis,\n                    item.yAxis != null ? item.yAxis : item.angleAxis\n                ];\n                // Each coord support max, min, average\n                for (var i = 0; i < 2; i++) {\n                    if (markerTypeCalculator[coord[i]]) {\n                        var dataDim = seriesModel.coordDimToDataDim(dims[i])[0];\n                        coord[i] = numCalculate(data, dataDim, coord[i]);\n                    }\n                }\n                item.coord = coord;\n            }\n        }\n        return item;\n    };\n\n    var getAxisInfo = function (item, data, coordSys, seriesModel) {\n        var ret = {};\n\n        if (item.valueIndex != null || item.valueDim != null) {\n            ret.valueDataDim = item.valueIndex != null\n                ? data.getDimension(item.valueIndex) : item.valueDim;\n            ret.valueAxis = coordSys.getAxis(seriesModel.dataDimToCoordDim(ret.valueDataDim));\n            ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n            ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n        }\n        else {\n            ret.baseAxis = seriesModel.getBaseAxis();\n            ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n            ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n            ret.valueDataDim = seriesModel.coordDimToDataDim(ret.valueAxis.dim)[0];\n        }\n\n        return ret;\n    };\n\n    /**\n     * Filter data which is out of coordinateSystem range\n     * [dataFilter description]\n     * @param  {module:echarts/coord/*} [coordSys]\n     * @param  {Object} item\n     * @return {boolean}\n     */\n    var dataFilter = function (coordSys, item) {\n        // Alwalys return true if there is no coordSys\n        return (coordSys && coordSys.containData && item.coord && !hasXOrY(item))\n            ? coordSys.containData(item.coord) : true;\n    };\n\n    var dimValueGetter = function (item, dimName, dataIndex, dimIndex) {\n        // x, y, radius, angle\n        if (dimIndex < 2) {\n            return item.coord && item.coord[dimIndex];\n        }\n        return item.value;\n    };\n\n    var numCalculate = function (data, valueDataDim, type) {\n        if (type === 'average') {\n            var sum = 0;\n            var count = 0;\n            data.each(valueDataDim, function (val, idx) {\n                if (!isNaN(val)) {\n                    sum += val;\n                    count++;\n                }\n            }, true);\n            return sum / count;\n        }\n        else {\n            return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n        }\n    };\n\n    module.exports = {\n        dataTransform: dataTransform,\n        dataFilter: dataFilter,\n        dimValueGetter: dimValueGetter,\n        getAxisInfo: getAxisInfo,\n        numCalculate: numCalculate\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/marker/markerHelper.js\n// module id = 363\n// module chunks = 0","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 364\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', this.getInitialData(option, ecModel));\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Array.<number>} data indices.\n         */\n        getAxisTooltipDataIndex: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 365\n// module chunks = 0","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 366\n// module chunks = 0","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 367\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 368\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-175b5043\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-175b5043\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-175b5043\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/PanThumb/index.vue\n// module id = 369\n// module chunks = 0","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 370\n// module chunks = 0","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 371\n// module chunks = 0","\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 372\n// module chunks = 0","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 373\n// module chunks = 0","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 374\n// module chunks = 0","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 375\n// module chunks = 0","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 376\n// module chunks = 0","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n\n    var LRU = require('../core/LRU');\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 377\n// module chunks = 0","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 378\n// module chunks = 0","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 379\n// module chunks = 0","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 380\n// module chunks = 0","<template>\r\n  <div :class=\"className\" :id=\"id\" :style=\"{height:height,width:width}\">\r\n  </div>\r\n</template>\r\n<script>\r\n// 引入 ECharts 主模块\r\nconst echarts = require('echarts/lib/echarts');\r\n// 引入图\r\nrequire('echarts/lib/chart/line');\r\n// 引入提示框和标题组件\r\nrequire('echarts/lib/component/markLine');\r\nrequire('echarts/lib/component/markPoint');\r\nrequire('echarts/lib/component/tooltip');\r\nexport default {\r\n  name: 'lineChart',\r\n  props: {\r\n    className: {\r\n      type: String,\r\n      default: 'line-chart'\r\n    },\r\n    id: {\r\n      type: String,\r\n      default: 'line-chart'\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: '100%'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '280px'\r\n    },\r\n    listData: {\r\n      type: Array,\r\n      require: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      chart: null\r\n    };\r\n  },\r\n  watch: {\r\n    listData(dataList) {\r\n      this.setLine(dataList)\r\n    }\r\n  },\r\n  mounted() {\r\n    this.chart = echarts.init(document.getElementById(this.id));\r\n    this.setLine(this.listData);\r\n  },\r\n  methods: {\r\n    setLine(dataList) {\r\n      const xAxisData = [];\r\n      const receiveData = [];\r\n      const sendData = [];\r\n      for (let i = 0; i < dataList.length; i++) {\r\n        const item = dataList[i]\r\n        xAxisData.push(item.week.substring(item.week.length - 2) + '周');\r\n        receiveData.push(item.receiveCount);\r\n        sendData.push(item.sendCount);\r\n      }\r\n      const markLineReceive = [];\r\n      const markLineSend = [];\r\n      for (let i = 1; i < receiveData.length; i++) {\r\n        markLineReceive.push([{\r\n          xAxis: i - 1,\r\n          yAxis: receiveData[i - 1],\r\n          value: receiveData[i] - receiveData[i - 1]\r\n        }, {\r\n          xAxis: i,\r\n          yAxis: receiveData[i]\r\n        }]);\r\n      }\r\n      for (let i = 1; i < sendData.length; i++) {\r\n        markLineSend.push([{\r\n          xAxis: i - 1,\r\n          yAxis: sendData[i - 1],\r\n          value: sendData[i] - sendData[i - 1]\r\n        }, {\r\n          xAxis: i,\r\n          yAxis: sendData[i]\r\n        }]);\r\n      }\r\n      this.chart.setOption({\r\n        title: {\r\n          text: 'Awesome Chart'\r\n        },\r\n        grid: {\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 20,\r\n          containLabel: true\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        animationDelay: 1000,\r\n        xAxis: {\r\n          data: xAxisData,\r\n          axisLine: {\r\n            show: false\r\n          },\r\n          axisTick: {\r\n            show: false\r\n          }\r\n          // axisLabel:{\r\n          //   show:false\r\n          // },\r\n        },\r\n\r\n        yAxis: {\r\n          splitLine: {\r\n            show: false\r\n          },\r\n          show: false\r\n          // min: 90\r\n        },\r\n        series: [\r\n          {\r\n            name: '收件数',\r\n            type: 'line',\r\n            data: receiveData,\r\n            markPoint: {\r\n              data: [\r\n                { type: 'max', name: '最大值' },\r\n                { type: 'min', name: '最小值' }\r\n              ]\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: '#30b08f'\r\n              }\r\n            },\r\n            markLine: {\r\n              silent: true,\r\n              smooth: true,\r\n              effect: {\r\n                show: true\r\n              },\r\n              animationDuration(idx) {\r\n                return idx * 100;\r\n              },\r\n              animationDelay: 1000,\r\n              animationEasing: 'quadraticInOut',\r\n              distance: 1,\r\n              label: {\r\n                normal: {\r\n                  position: 'middle'\r\n                }\r\n              },\r\n              symbol: ['none', 'none'],\r\n              data: markLineReceive\r\n            }\r\n          },\r\n          {\r\n            name: '发件数',\r\n            type: 'line',\r\n            data: sendData,\r\n            markPoint: {\r\n              data: [\r\n                { type: 'max', name: '最大值' },\r\n                { type: 'min', name: '最小值' }\r\n              ]\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: '#F08A5D'\r\n              }\r\n            },\r\n            markLine: {\r\n              silent: true,\r\n              smooth: true,\r\n              effect: {\r\n                show: true\r\n              },\r\n              animationDuration(idx) {\r\n                return idx * 100;\r\n              },\r\n              animationDelay: 1000,\r\n              animationEasing: 'quadraticInOut',\r\n              distance: 1,\r\n              label: {\r\n                normal: {\r\n                  position: 'middle'\r\n                }\r\n              },\r\n              symbol: ['none', 'none'],\r\n              data: markLineSend\r\n            }\r\n          }\r\n        ]\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// line.vue?03053140","<template>\r\n    <div class=\"pan-item\" :style=\"{zIndex:zIndex,height:height,width:width}\">\r\n        <div class=\"pan-info\">\r\n            <div class=\"pan-info-roles-container\">\r\n                <slot></slot>\r\n            </div>\r\n        </div>\r\n        <img class=\"pan-thumb\" :src=\"image\">\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n      name: 'PanThumb',\r\n      props: {\r\n        image: {\r\n          type: String,\r\n          required: true\r\n        },\r\n        zIndex: {\r\n          type: Number,\r\n          default: 100\r\n        },\r\n        width: {\r\n          type: String,\r\n          default: '150px'\r\n        },\r\n        height: {\r\n          type: String,\r\n          default: '150px'\r\n        }\r\n      },\r\n      data() {\r\n        return {};\r\n      }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    .pan-item {\r\n        width: 200px;\r\n        height: 200px;\r\n        border-radius: 50%;\r\n        display: inline-block;\r\n        position: relative;\r\n        cursor: default;\r\n        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    .pan-info-roles-container {\r\n        padding: 20px;\r\n        text-align: center;\r\n    }\r\n\r\n    .pan-thumb {\r\n        width: 100%;\r\n        height: 100%;\r\n        background-size: 100%;\r\n        border-radius: 50%;\r\n        overflow: hidden;\r\n        position: absolute;\r\n        transform-origin: 95% 40%;\r\n        transition: all 0.3s ease-in-out;\r\n    }\r\n\r\n    .pan-thumb:after {\r\n        content: '';\r\n        width: 8px;\r\n        height: 8px;\r\n        position: absolute;\r\n        border-radius: 50%;\r\n        top: 40%;\r\n        left: 95%;\r\n        margin: -4px 0 0 -4px;\r\n        background: radial-gradient(ellipse at center, rgba(14, 14, 14, 1) 0%, rgba(125, 126, 125, 1) 100%);\r\n        box-shadow: 0 0 1px rgba(255, 255, 255, 0.9);\r\n    }\r\n\r\n    .pan-info {\r\n        position: absolute;\r\n        width: inherit;\r\n        height: inherit;\r\n        border-radius: 50%;\r\n        overflow: hidden;\r\n        box-shadow: inset 0 0 0 5px rgba(0, 0, 0, 0.05);\r\n    }\r\n\r\n    .pan-info h3 {\r\n        color: #fff;\r\n        text-transform: uppercase;\r\n        position: relative;\r\n        letter-spacing: 2px;\r\n        font-size: 18px;\r\n        margin: 0 60px;\r\n        padding: 22px 0 0 0;\r\n        height: 85px;\r\n        font-family: 'Open Sans', Arial, sans-serif;\r\n        text-shadow: 0 0 1px #fff,\r\n        0 1px 2px rgba(0, 0, 0, 0.3);\r\n    }\r\n\r\n    .pan-info p {\r\n        color: #fff;\r\n        padding: 10px 5px;\r\n        font-style: italic;\r\n        margin: 0 30px;\r\n        font-size: 12px;\r\n        border-top: 1px solid rgba(255, 255, 255, 0.5);\r\n    }\r\n\r\n    .pan-info p a {\r\n        display: block;\r\n        color: #333;\r\n        width: 80px;\r\n        height: 80px;\r\n        background: rgba(255, 255, 255, 0.3);\r\n        border-radius: 50%;\r\n        color: #fff;\r\n        font-style: normal;\r\n        font-weight: 700;\r\n        text-transform: uppercase;\r\n        font-size: 9px;\r\n        letter-spacing: 1px;\r\n        padding-top: 24px;\r\n        margin: 7px auto 0;\r\n        font-family: 'Open Sans', Arial, sans-serif;\r\n        opacity: 0;\r\n        transition: transform 0.3s ease-in-out 0.2s,\r\n        opacity 0.3s ease-in-out 0.2s,\r\n        background 0.2s linear 0s;\r\n        transform: translateX(60px) rotate(90deg);\r\n    }\r\n\r\n    .pan-info p a:hover {\r\n        background: rgba(255, 255, 255, 0.5);\r\n    }\r\n\r\n    .pan-item:hover .pan-thumb {\r\n        transform: rotate(-110deg);\r\n    }\r\n\r\n    .pan-item:hover .pan-info p a {\r\n        opacity: 1;\r\n        transform: translateX(0px) rotate(0deg);\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// index.vue?12388017","<template>\r\n    <div class=\"dashboard-editor-container\">\r\n        <div class=\" clearfix\">\r\n            <PanThumb style=\"float: left\" :image=\"avatar\"> 你的权限:\r\n                <span class=\"pan-info-roles\" v-for=\"item in roles\">{{item}}</span>\r\n            </PanThumb>\r\n            <a href=\"https://github.com/weihomechen/vue-mail-front\" target=\"_blank\" class=\"github-corner\" aria-label=\"View source on Github\">\r\n                <svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" style=\"fill:#4AB7BD; color:#fff; position: absolute; top: 50px; border: 0; right: 0;\"\r\n                aria-hidden=\"true\">\r\n                <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\r\n                <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\r\n                    fill=\"currentColor\" style=\"transform-origin: 130px 106px;\" class=\"octo-arm\"></path>\r\n                <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"fill=\"currentColor\" class=\"octo-body\"></path>\r\n                </svg>\r\n            </a>\r\n            <div class=\"info-container\">\r\n                <span class=\"display_name\">{{name}}</span>\r\n                <span style='font-size:20px;padding-top:20px;display:inline-block;'>普通编辑dashboard</span>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <img class='emptyGif' :src=\"emptyGif\" >\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mapGetters } from 'vuex';\r\n    import PanThumb from 'components/PanThumb';\r\n    export default {\r\n      name: 'dashboard-default',\r\n      components: { PanThumb },\r\n      data() {\r\n        return {\r\n          emptyGif: 'https://wpimg.wallstcn.com/0e03b7da-db9e-4819-ba10-9016ddfdaed3'\r\n        }\r\n      },\r\n      computed: {\r\n        ...mapGetters([\r\n          'name',\r\n          'avatar',\r\n          'email',\r\n          'uid',\r\n          'introduction',\r\n          'roles'\r\n        ])\r\n      }\r\n    }\r\n</script>\r\n\r\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\r\n    .emptyGif {\r\n       display: block;\r\n       width: 45%;\r\n       margin: 0 auto;\r\n    }\r\n    .dashboard-editor-container {\r\n        background-color: #e3e3e3;\r\n        min-height: 100vh;\r\n        margin-top: -50px;\r\n        padding: 100px 60px 0px;\r\n        .pan-info-roles {\r\n            font-size: 12px;\r\n            font-weight: 700;\r\n            color: #333;\r\n            display: block;\r\n        }\r\n        .info-container {\r\n            position: relative;\r\n            margin-left: 190px;\r\n            height: 150px;\r\n            line-height: 200px;\r\n            .display_name {\r\n                font-size: 48px;\r\n                line-height: 48px;\r\n                color: #212121;\r\n                position: absolute;\r\n                top: 25px;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// index.vue?1114e129","<template>\r\n    <div class=\"dashboard-container\">\r\n        <div class=\" clearfix\">\r\n            <PanThumb style=\"float: left\" :image=\"avatar\"> 你的权限:\r\n                <span class=\"pan-info-roles\" v-for=\"item in roles\">{{item}}</span>\r\n            </PanThumb>\r\n            <a href=\"https://github.com/weihomechen/vue-mail-front\" target=\"_blank\" class=\"github-corner\" aria-label=\"View source on Github\">\r\n                <svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" style=\"fill:#4AB7BD; color:#fff; position: absolute; top: 50px; border: 0; right: 0;\" aria-hidden=\"true\">\r\n                    <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\r\n                    <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style=\"transform-origin: 130px 106px;\" class=\"octo-arm\"></path>\r\n                    <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"></path>\r\n                </svg>\r\n            </a>\r\n            <div class=\"info-container\">\r\n                <span class=\"display_name\">{{name}}</span>\r\n                <div class=\"info-wrapper\">\r\n                    <div class=\"info-item\">\r\n                        <countTo class=\"info-item-num\" :startVal='0' :endVal='statisticsData.inbox_count' :duration='3400'></countTo>\r\n                        <span class=\"info-item-text\">收件</span>\r\n                        <icon-svg icon-class=\"a\" class=\"dashboard-icon\" />\r\n                    </div>\r\n                    <div class=\"info-item\" style=\"cursor: auto\">\r\n                        <countTo class=\"info-item-num\" :startVal='0' :endVal='statisticsData.outbox_count' :duration='3600'></countTo>\r\n                        <span class=\"info-item-text\">发件</span>\r\n                        <icon-svg icon-class=\"b\" class=\"dashboard-icon\" />\r\n                    </div>\r\n                    <div class=\"info-item\">\r\n                        <countTo class=\"info-item-num\" ref='countTo3' :startVal='0' :endVal='statisticsData.draft_count' :duration='3800'></countTo>\r\n                        <span class=\"info-item-text\">草稿</span>\r\n                        <icon-svg icon-class=\"c\" class=\"dashboard-icon\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"btn-group\">\r\n            <router-link class=\"pan-btn green-btn\" to=\"/mail_send/index\">写信</router-link>\r\n            <router-link class=\"pan-btn orange-btn\" to=\"/inbox/index\">收件箱</router-link>\r\n            <router-link class=\"pan-btn blue-btn\" to=\"/outbox/index\">发件箱</router-link>\r\n            <router-link class=\"pan-btn pink-btn\" to=\"/draftbox/index\">草稿箱</router-link>\r\n            <router-link class=\"pan-btn cyan-btn\" to=\"/mail_label/index\">标签管理</router-link>\r\n            <router-link class=\"pan-btn red-btn\" to=\"/mail_contacts/index\">通讯录</router-link>\r\n        </div>\r\n    \r\n        <div class=\"clearfix main-dashboard-container\">\r\n            <div class=\"chart-container\">\r\n                <WeeklyUsing :listData='statisticsData.weekly_using'></WeeklyUsing>\r\n            </div>\r\n            <div class=\"unread-mail-container\">\r\n                <div class=\"unread-mail-title\">未读邮件</div>\r\n                <div class=\"unread-mail-wrapper\">\r\n                    <template v-if=\"unreadMails.length!=0\">\r\n                        <div class=\"unread-mail-item\" v-for=\"mail in unreadMails\">\r\n                            <span class=\"unread-mail-content\" @click=\"toUnreadMail(mail.id)\">\r\n                                {{mail.title}}\r\n                            </span>\r\n                            <el-tag type=\"danger\">{{mail.receiveDate | parseTime('{m}-{d} {h}:{i}')}}</el-tag>\r\n                            <el-tag type=\"primary\">{{mail.sendName}}</el-tag>\r\n                        </div>\r\n                    </template>\r\n                    <template v-else>\r\n                        <div class=\"unread-mail-emptyTitle\">所有邮件都被你读过了</div>\r\n                    </template>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport PanThumb from 'components/PanThumb';\r\nimport WeeklyUsing from './weekly_using';\r\nimport { fetchUnReadList } from 'api/inbox';\r\nimport countTo from 'vue-count-to';\r\nimport { parseTime } from 'utils/index';\r\nexport default {\r\n    name: 'dashboard',\r\n    components: { PanThumb, WeeklyUsing, countTo },\r\n    data() {\r\n        return {\r\n            chart: null,\r\n            statisticsData: {\r\n                inbox_count: 512,\r\n                outbox_count: 256,\r\n                draft_count: 128,\r\n                month_inbox_count: 28,\r\n                unread_mail: [],\r\n                weekly_using: [\r\n                    { receiveCount: 40, sendCount: 21, week: '201701' },\r\n                    { receiveCount: 48, sendCount: 19, week: '201702' },\r\n                    { receiveCount: 55, sendCount: 23, week: '201703' },\r\n                    { receiveCount: 68, sendCount: 26, week: '201704' },\r\n                    { receiveCount: 52, sendCount: 21, week: '201705' },\r\n                    { receiveCount: 64, sendCount: 23, week: '201706' },\r\n                    { receiveCount: 69, sendCount: 20, week: '201707' },\r\n                    { receiveCount: 61, sendCount: 26, week: '201708' },\r\n                    { receiveCount: 78, sendCount: 32, week: '201709' },\r\n                    { receiveCount: 73, sendCount: 22, week: '2017010' },\r\n                    { receiveCount: 62, sendCount: 20, week: '2017011' },\r\n                    { receiveCount: 66, sendCount: 23, week: '2017012' }\r\n                ],\r\n                frequertContacts: [\r\n                    {\r\n                        name: '撸力',\r\n                        mail: 'ruli@snh48.com',\r\n                        avatarUrl: 'http://or7rpa0sk.bkt.clouddn.com/avatar.jpg'\r\n                    },\r\n                    {\r\n                        name: '小鞠',\r\n                        mail: 'xiaoju@snh48.com',\r\n                        avatarUrl: 'http://or7rpa0sk.bkt.clouddn.com/avatar.jpg'\r\n                    },\r\n                    {\r\n                        name: '啊黄',\r\n                        mail: 'ahuang@snh48.com',\r\n                        avatarUrl: 'http://or7rpa0sk.bkt.clouddn.com/avatar.jpg'\r\n                    },\r\n                    {\r\n                        name: '二狗',\r\n                        mail: 'ergou@snh48.com',\r\n                        avatarUrl: 'http://or7rpa0sk.bkt.clouddn.com/avatar.jpg'\r\n                    },\r\n                    {\r\n                        name: '大哥',\r\n                        mail: 'dage@snh48.com',\r\n                        avatarUrl: 'http://or7rpa0sk.bkt.clouddn.com/avatar.jpg'\r\n                    },\r\n                    {\r\n                        name: '小四',\r\n                        mail: 'xiaosi@snh48.com',\r\n                        avatarUrl: 'http://or7rpa0sk.bkt.clouddn.com/avatar.jpg'\r\n                    },\r\n                    {\r\n                        name: '十七',\r\n                        mail: 'shiqi@snh48.com',\r\n                        avatarUrl: 'http://or7rpa0sk.bkt.clouddn.com/avatar.jpg'\r\n                    },\r\n                    {\r\n                        name: '爱总',\r\n                        mail: 'aizong@snh48.com',\r\n                        avatarUrl: 'http://or7rpa0sk.bkt.clouddn.com/avatar.jpg'\r\n                    }\r\n                ]\r\n            },\r\n            unreadList: []\r\n        }\r\n    },\r\n    created() {\r\n        this.fetchData();\r\n    },\r\n    computed: {\r\n        ...mapGetters([\r\n            'name',\r\n            'avatar',\r\n            'email',\r\n            'uid',\r\n            'introduction',\r\n            'roles'\r\n        ]),\r\n        unreadMails() {\r\n            return this.unreadList.slice(0,6)\r\n        }\r\n    },\r\n    methods: {\r\n        fetchData() {\r\n            fetchUnReadList().then(res => {\r\n                this.unreadList = res.data.items;\r\n            })\r\n        },\r\n        toUnreadMail(id) {\r\n            this.$store.commit('SET_MAIL_TYPE', 'receive');\r\n            this.$router.push({ path: '/mail_detail/index/' + id });\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\r\n.unread-mail-emptyTitle {\r\n    font-size: 16px;\r\n    color: #F38181;\r\n    padding-top: 20px;\r\n    text-align: center;\r\n}\r\n\r\n.dashboard-container {\r\n    padding: 20px 50px;\r\n    .pan-info-roles {\r\n        font-size: 12px;\r\n        font-weight: 700;\r\n        color: #333;\r\n        display: block;\r\n    }\r\n    .info-container {\r\n        position: relative;\r\n        margin-left: 190px;\r\n        height: 150px;\r\n        line-height: 200px;\r\n        .display_name {\r\n            font-size: 48px;\r\n            line-height: 48px;\r\n            color: #212121;\r\n            position: absolute;\r\n            top: 25px;\r\n        }\r\n        .info-wrapper {\r\n            line-height: 40px;\r\n            position: absolute;\r\n            bottom: 0px;\r\n            .info-item {\r\n                display: inline-block;\r\n                margin-right: 95px;\r\n                .info-item-num {\r\n                    color: #212121;\r\n                    font-size: 24px;\r\n                    display: inline-block;\r\n                    padding-right: 5px;\r\n                }\r\n                .info-item-text {\r\n                    color: #727272;\r\n                    font-size: 14px;\r\n                    padding-right: 5px;\r\n                    display: inline-block;\r\n                }\r\n            }\r\n        }\r\n        .dashboard-icon {\r\n            width: 22px;\r\n            height: 22px;\r\n        }\r\n    }\r\n    .btn-group {\r\n        margin: 30px 36px 30px 0;\r\n    }\r\n    .main-dashboard-container {\r\n        width: 100%;\r\n        position: relative;\r\n        border: 1px solid #DEE1E2;\r\n        padding: 0 10px;\r\n    }\r\n    .chart-container {\r\n        float: left;\r\n        position: relative;\r\n        padding-right: 10px;\r\n        width: 40%;\r\n        border-right: 1px solid #DEE1E2;\r\n    }\r\n    .unread-mail-container {\r\n        padding: 12px 12px 0px;\r\n        float: left;\r\n        width: 60%;\r\n        height: 380px;\r\n        position: relative;\r\n        .unread-mail- {\r\n            &title {\r\n                font-size: 16px;\r\n                color: #F38181;\r\n                letter-spacing: 1px;\r\n                padding-left: 15px;\r\n                padding-bottom: 10px;\r\n                border-bottom: 1px solid #DEE1E2;\r\n            }\r\n            &more {\r\n                color: #2C3E50;\r\n                font-size: 12px;\r\n                float: right;\r\n                margin-right: 25px;\r\n                line-height: 40px;\r\n                &:hover {\r\n                    color: #3A71A8;\r\n                }\r\n            }\r\n            &wrapper {\r\n                padding: 0 20px 0 22px;\r\n                .unread-mail- {\r\n                    &item {\r\n                        cursor: pointer;\r\n                        padding: 16px 8px 16px 16px;\r\n                        border-bottom: 1px solid #DEE1E2;\r\n                        position: relative;\r\n                        .el-tag {\r\n                            margin: 0 3px;\r\n                        }\r\n                        &:before {\r\n                            content: \"\";\r\n                            height: 104%;\r\n                            width: 0px;\r\n                            background: #30B08F;\r\n                            display: inline-block;\r\n                            position: absolute;\r\n                            opacity: 0;\r\n                            left: 0px;\r\n                            top: -2px;\r\n                            transition: 0.3s ease all;\r\n                        }\r\n                        &:hover {\r\n                            &:before {\r\n                                opacity: 1;\r\n                                width: 3px;\r\n                            }\r\n                        }\r\n                    }\r\n                    &status {\r\n                        font-size: 12px;\r\n                        display: inline-block;\r\n                        color: #9B9B9B;\r\n                        padding-right: 6px;\r\n                    }\r\n                    &content {\r\n                        font-size: 13px;\r\n                        color: #2C3E50;\r\n                        &:hover {\r\n                            color: #3A71A8;\r\n                        }\r\n                    }\r\n                    &time {\r\n                        position: absolute;\r\n                        right: 16px;\r\n                        top: 16px;\r\n                        color: #9B9B9B;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// index.vue?37699d5b","<template>\r\n    <div class=\"weekly-using-container\">\r\n        <span class=\"weekly-using-container-title\">最近使用情况</span>\r\n        <line-chart :listData='listData' ></line-chart>\r\n    </div>\r\n</template>\r\n<script>\r\n    import LineChart from 'components/Charts/line';\r\n    export default {\r\n      name: 'weekly-using',\r\n      components: { LineChart },\r\n      props: {\r\n        listData: {\r\n          type: Array,\r\n          default: [],\r\n          require: true\r\n        }\r\n      },\r\n      data() {\r\n        return {}\r\n      }\r\n    }\r\n</script>\r\n<style>\r\n    .weekly-using-container {\r\n        width: 100%;\r\n        border-bottom: 1px solid #ccc;\r\n    }\r\n    .weekly-using-container-title {\r\n        color: #7F8C8D;\r\n        font-size: 16px;\r\n        display: inline-block;\r\n        margin-top: 10px;\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// weekly_using.vue?d65d9bea","<template>\r\n    <div class=\"dashboard-container\">\r\n        <component v-bind:is=\"currentRole\"> </component>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mapGetters } from 'vuex';\r\n    import EditorDashboard from './editor/index';\r\n    import DefaultDashboard from './default/index';\r\n    export default {\r\n      name: 'dashboard',\r\n      components: { EditorDashboard, DefaultDashboard },\r\n      data() {\r\n        return {\r\n          currentRole: 'EditorDashboard'\r\n        }\r\n      },\r\n      computed: {\r\n        ...mapGetters([\r\n          'name',\r\n          'avatar',\r\n          'email',\r\n          'introduction',\r\n          'roles'\r\n        ])\r\n      },\r\n      created() {\r\n        if (this.roles.indexOf('admin') >= 0) {\r\n          return;\r\n        }\r\n        // const isEditor = this.roles.some(v => v.indexOf('editor') >= 0)\r\n        // if (!isEditor) {\r\n        //   this.currentRole = 'DefaultDashboard';\r\n        // }\r\n        this.currentRole = 'DefaultDashboard';\r\n      }\r\n    }\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// index.vue?49f5bb9a","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".pan-item[data-v-175b5043]{width:200px;height:200px;border-radius:50%;display:inline-block;position:relative;cursor:default;box-shadow:0 1px 3px rgba(0,0,0,.2)}.pan-info-roles-container[data-v-175b5043]{padding:20px;text-align:center}.pan-thumb[data-v-175b5043]{width:100%;height:100%;background-size:100%;border-radius:50%;overflow:hidden;position:absolute;transform-origin:95% 40%;transition:all .3s ease-in-out}.pan-thumb[data-v-175b5043]:after{content:\\\"\\\";width:8px;height:8px;position:absolute;border-radius:50%;top:40%;left:95%;margin:-4px 0 0 -4px;background:radial-gradient(ellipse at center,#0e0e0e 0,#7d7e7d 100%);box-shadow:0 0 1px hsla(0,0%,100%,.9)}.pan-info[data-v-175b5043]{position:absolute;width:inherit;height:inherit;border-radius:50%;overflow:hidden;box-shadow:inset 0 0 0 5px rgba(0,0,0,.05)}.pan-info h3[data-v-175b5043]{color:#fff;text-transform:uppercase;position:relative;letter-spacing:2px;font-size:18px;margin:0 60px;padding:22px 0 0;height:85px;font-family:Open Sans,Arial,sans-serif;text-shadow:0 0 1px #fff,0 1px 2px rgba(0,0,0,.3)}.pan-info p[data-v-175b5043]{color:#fff;padding:10px 5px;font-style:italic;margin:0 30px;font-size:12px;border-top:1px solid hsla(0,0%,100%,.5)}.pan-info p a[data-v-175b5043]{display:block;color:#333;width:80px;height:80px;background:hsla(0,0%,100%,.3);border-radius:50%;color:#fff;font-style:normal;font-weight:700;text-transform:uppercase;font-size:9px;letter-spacing:1px;padding-top:24px;margin:7px auto 0;font-family:Open Sans,Arial,sans-serif;opacity:0;transition:transform .3s ease-in-out .2s,opacity .3s ease-in-out .2s,background .2s linear 0s;transform:translateX(60px) rotate(90deg)}.pan-info p a[data-v-175b5043]:hover{background:hsla(0,0%,100%,.5)}.pan-item:hover .pan-thumb[data-v-175b5043]{transform:rotate(-110deg)}.pan-item:hover .pan-info p a[data-v-175b5043]{opacity:1;transform:translateX(0) rotate(0deg)}\", \"\", {\"version\":3,\"sources\":[\"E:/web/Vue/vue-mail-front/src/components/PanThumb/index.vue\"],\"names\":[],\"mappings\":\"AACA,2BACI,YAAa,AACb,aAAc,AACd,kBAAmB,AACnB,qBAAsB,AACtB,kBAAmB,AACnB,eAAgB,AAChB,mCAAyC,CAC5C,AACD,2CACI,aAAc,AACd,iBAAmB,CACtB,AACD,4BACI,WAAY,AACZ,YAAa,AACb,qBAAsB,AACtB,kBAAmB,AACnB,gBAAiB,AACjB,kBAAmB,AACnB,yBAA0B,AAC1B,8BAAiC,CACpC,AACD,kCACI,WAAY,AACZ,UAAW,AACX,WAAY,AACZ,kBAAmB,AACnB,kBAAmB,AACnB,QAAS,AACT,SAAU,AACV,qBAAsB,AACtB,qEAAoG,AACpG,qCAA6C,CAChD,AACD,2BACI,kBAAmB,AACnB,cAAe,AACf,eAAgB,AAChB,kBAAmB,AACnB,gBAAiB,AACjB,0CAAgD,CACnD,AACD,8BACI,WAAY,AACZ,yBAA0B,AAC1B,kBAAmB,AACnB,mBAAoB,AACpB,eAAgB,AAChB,cAAe,AACf,iBAAoB,AACpB,YAAa,AACb,uCAA4C,AAC5C,iDAC6B,CAChC,AACD,6BACI,WAAY,AACZ,iBAAkB,AAClB,kBAAmB,AACnB,cAAe,AACf,eAAgB,AAChB,uCAA+C,CAClD,AACD,+BACI,cAAe,AACf,WAAY,AACZ,WAAY,AACZ,YAAa,AACb,8BAAqC,AACrC,kBAAmB,AACnB,WAAY,AACZ,kBAAmB,AACnB,gBAAiB,AACjB,yBAA0B,AAC1B,cAAe,AACf,mBAAoB,AACpB,iBAAkB,AAClB,kBAAmB,AACnB,uCAA4C,AAC5C,UAAW,AACX,8FAE0B,AAC1B,wCAA0C,CAC7C,AACD,qCACI,6BAAqC,CACxC,AACD,4CACI,yBAA2B,CAC9B,AACD,+CACI,UAAW,AACX,oCAAwC,CAC3C\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.pan-item[data-v-175b5043] {\\n    width: 200px;\\n    height: 200px;\\n    border-radius: 50%;\\n    display: inline-block;\\n    position: relative;\\n    cursor: default;\\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\\n}\\n.pan-info-roles-container[data-v-175b5043] {\\n    padding: 20px;\\n    text-align: center;\\n}\\n.pan-thumb[data-v-175b5043] {\\n    width: 100%;\\n    height: 100%;\\n    background-size: 100%;\\n    border-radius: 50%;\\n    overflow: hidden;\\n    position: absolute;\\n    transform-origin: 95% 40%;\\n    transition: all 0.3s ease-in-out;\\n}\\n.pan-thumb[data-v-175b5043]:after {\\n    content: '';\\n    width: 8px;\\n    height: 8px;\\n    position: absolute;\\n    border-radius: 50%;\\n    top: 40%;\\n    left: 95%;\\n    margin: -4px 0 0 -4px;\\n    background: radial-gradient(ellipse at center, rgba(14, 14, 14, 1) 0%, rgba(125, 126, 125, 1) 100%);\\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.9);\\n}\\n.pan-info[data-v-175b5043] {\\n    position: absolute;\\n    width: inherit;\\n    height: inherit;\\n    border-radius: 50%;\\n    overflow: hidden;\\n    box-shadow: inset 0 0 0 5px rgba(0, 0, 0, 0.05);\\n}\\n.pan-info h3[data-v-175b5043] {\\n    color: #fff;\\n    text-transform: uppercase;\\n    position: relative;\\n    letter-spacing: 2px;\\n    font-size: 18px;\\n    margin: 0 60px;\\n    padding: 22px 0 0 0;\\n    height: 85px;\\n    font-family: 'Open Sans', Arial, sans-serif;\\n    text-shadow: 0 0 1px #fff,\\n    0 1px 2px rgba(0, 0, 0, 0.3);\\n}\\n.pan-info p[data-v-175b5043] {\\n    color: #fff;\\n    padding: 10px 5px;\\n    font-style: italic;\\n    margin: 0 30px;\\n    font-size: 12px;\\n    border-top: 1px solid rgba(255, 255, 255, 0.5);\\n}\\n.pan-info p a[data-v-175b5043] {\\n    display: block;\\n    color: #333;\\n    width: 80px;\\n    height: 80px;\\n    background: rgba(255, 255, 255, 0.3);\\n    border-radius: 50%;\\n    color: #fff;\\n    font-style: normal;\\n    font-weight: 700;\\n    text-transform: uppercase;\\n    font-size: 9px;\\n    letter-spacing: 1px;\\n    padding-top: 24px;\\n    margin: 7px auto 0;\\n    font-family: 'Open Sans', Arial, sans-serif;\\n    opacity: 0;\\n    transition: transform 0.3s ease-in-out 0.2s,\\n    opacity 0.3s ease-in-out 0.2s,\\n    background 0.2s linear 0s;\\n    transform: translateX(60px) rotate(90deg);\\n}\\n.pan-info p a[data-v-175b5043]:hover {\\n    background: rgba(255, 255, 255, 0.5);\\n}\\n.pan-item:hover .pan-thumb[data-v-175b5043] {\\n    transform: rotate(-110deg);\\n}\\n.pan-item:hover .pan-info p a[data-v-175b5043] {\\n    opacity: 1;\\n    transform: translateX(0px) rotate(0deg);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-175b5043\",\"scoped\":true,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/PanThumb/index.vue\n// module id = 418\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".weekly-using-container{width:100%;border-bottom:1px solid #ccc}.weekly-using-container-title{color:#7f8c8d;font-size:16px;display:inline-block;margin-top:10px}\", \"\", {\"version\":3,\"sources\":[\"E:/web/Vue/vue-mail-front/src/views/dashboard/editor/weekly_using.vue\"],\"names\":[],\"mappings\":\"AACA,wBACI,WAAY,AACZ,4BAA8B,CACjC,AACD,8BACI,cAAe,AACf,eAAgB,AAChB,qBAAsB,AACtB,eAAiB,CACpB\",\"file\":\"weekly_using.vue\",\"sourcesContent\":[\"\\n.weekly-using-container {\\n    width: 100%;\\n    border-bottom: 1px solid #ccc;\\n}\\n.weekly-using-container-title {\\n    color: #7F8C8D;\\n    font-size: 16px;\\n    display: inline-block;\\n    margin-top: 10px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-1a7b8b5a\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/dashboard/editor/weekly_using.vue\n// module id = 419\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".emptyGif[data-v-50d87894]{display:block;width:45%;margin:0 auto}.dashboard-editor-container[data-v-50d87894]{background-color:#e3e3e3;min-height:100vh;margin-top:-50px;padding:100px 60px 0}.dashboard-editor-container .pan-info-roles[data-v-50d87894]{font-size:12px;font-weight:700;color:#333;display:block}.dashboard-editor-container .info-container[data-v-50d87894]{position:relative;margin-left:190px;height:150px;line-height:200px}.dashboard-editor-container .info-container .display_name[data-v-50d87894]{font-size:48px;line-height:48px;color:#212121;position:absolute;top:25px}\", \"\", {\"version\":3,\"sources\":[\"E:/web/Vue/vue-mail-front/src/views/dashboard/default/index.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,cAAe,AACf,UAAW,AACX,aAAe,CAChB,AACD,6CACE,yBAA0B,AAC1B,iBAAkB,AAClB,iBAAkB,AAClB,oBAAwB,CACzB,AACD,6DACI,eAAgB,AAChB,gBAAiB,AACjB,WAAY,AACZ,aAAe,CAClB,AACD,6DACI,kBAAmB,AACnB,kBAAmB,AACnB,aAAc,AACd,iBAAmB,CACtB,AACD,2EACM,eAAgB,AAChB,iBAAkB,AAClB,cAAe,AACf,kBAAmB,AACnB,QAAU,CACf\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.emptyGif[data-v-50d87894] {\\n  display: block;\\n  width: 45%;\\n  margin: 0 auto;\\n}\\n.dashboard-editor-container[data-v-50d87894] {\\n  background-color: #e3e3e3;\\n  min-height: 100vh;\\n  margin-top: -50px;\\n  padding: 100px 60px 0px;\\n}\\n.dashboard-editor-container .pan-info-roles[data-v-50d87894] {\\n    font-size: 12px;\\n    font-weight: 700;\\n    color: #333;\\n    display: block;\\n}\\n.dashboard-editor-container .info-container[data-v-50d87894] {\\n    position: relative;\\n    margin-left: 190px;\\n    height: 150px;\\n    line-height: 200px;\\n}\\n.dashboard-editor-container .info-container .display_name[data-v-50d87894] {\\n      font-size: 48px;\\n      line-height: 48px;\\n      color: #212121;\\n      position: absolute;\\n      top: 25px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-50d87894\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/dashboard/default/index.vue\n// module id = 426\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".unread-mail-emptyTitle[data-v-51b23524]{font-size:16px;color:#f38181;padding-top:20px;text-align:center}.dashboard-container[data-v-51b23524]{padding:20px 50px}.dashboard-container .pan-info-roles[data-v-51b23524]{font-size:12px;font-weight:700;color:#333;display:block}.dashboard-container .info-container[data-v-51b23524]{position:relative;margin-left:190px;height:150px;line-height:200px}.dashboard-container .info-container .display_name[data-v-51b23524]{font-size:48px;line-height:48px;color:#212121;position:absolute;top:25px}.dashboard-container .info-container .info-wrapper[data-v-51b23524]{line-height:40px;position:absolute;bottom:0}.dashboard-container .info-container .info-wrapper .info-item[data-v-51b23524]{display:inline-block;margin-right:95px}.dashboard-container .info-container .info-wrapper .info-item .info-item-num[data-v-51b23524]{color:#212121;font-size:24px;display:inline-block;padding-right:5px}.dashboard-container .info-container .info-wrapper .info-item .info-item-text[data-v-51b23524]{color:#727272;font-size:14px;padding-right:5px;display:inline-block}.dashboard-container .info-container .dashboard-icon[data-v-51b23524]{width:22px;height:22px}.dashboard-container .btn-group[data-v-51b23524]{margin:30px 36px 30px 0}.dashboard-container .main-dashboard-container[data-v-51b23524]{width:100%;position:relative;border:1px solid #dee1e2;padding:0 10px}.dashboard-container .chart-container[data-v-51b23524]{float:left;position:relative;padding-right:10px;width:40%;border-right:1px solid #dee1e2}.dashboard-container .unread-mail-container[data-v-51b23524]{padding:12px 12px 0;float:left;width:60%;height:380px;position:relative}.dashboard-container .unread-mail-container .unread-mail-title[data-v-51b23524]{font-size:16px;color:#f38181;letter-spacing:1px;padding-left:15px;padding-bottom:10px;border-bottom:1px solid #dee1e2}.dashboard-container .unread-mail-container .unread-mail-more[data-v-51b23524]{color:#2c3e50;font-size:12px;float:right;margin-right:25px;line-height:40px}.dashboard-container .unread-mail-container .unread-mail-more[data-v-51b23524]:hover{color:#3a71a8}.dashboard-container .unread-mail-container .unread-mail-wrapper[data-v-51b23524]{padding:0 20px 0 22px}.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-item[data-v-51b23524]{cursor:pointer;padding:16px 8px 16px 16px;border-bottom:1px solid #dee1e2;position:relative}.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-item .el-tag[data-v-51b23524]{margin:0 3px}.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-item[data-v-51b23524]:before{content:\\\"\\\";height:104%;width:0;background:#30b08f;display:inline-block;position:absolute;opacity:0;left:0;top:-2px;transition:all .3s ease}.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-item[data-v-51b23524]:hover:before{opacity:1;width:3px}.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-status[data-v-51b23524]{font-size:12px;display:inline-block;color:#9b9b9b;padding-right:6px}.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-content[data-v-51b23524]{font-size:13px;color:#2c3e50}.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-content[data-v-51b23524]:hover{color:#3a71a8}.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-time[data-v-51b23524]{position:absolute;right:16px;top:16px;color:#9b9b9b}\", \"\", {\"version\":3,\"sources\":[\"E:/web/Vue/vue-mail-front/src/views/dashboard/editor/index.vue\"],\"names\":[],\"mappings\":\"AACA,yCACE,eAAgB,AAChB,cAAe,AACf,iBAAkB,AAClB,iBAAmB,CACpB,AACD,sCACE,iBAAmB,CACpB,AACD,sDACI,eAAgB,AAChB,gBAAiB,AACjB,WAAY,AACZ,aAAe,CAClB,AACD,sDACI,kBAAmB,AACnB,kBAAmB,AACnB,aAAc,AACd,iBAAmB,CACtB,AACD,oEACM,eAAgB,AAChB,iBAAkB,AAClB,cAAe,AACf,kBAAmB,AACnB,QAAU,CACf,AACD,oEACM,iBAAkB,AAClB,kBAAmB,AACnB,QAAY,CACjB,AACD,+EACQ,qBAAsB,AACtB,iBAAmB,CAC1B,AACD,8FACU,cAAe,AACf,eAAgB,AAChB,qBAAsB,AACtB,iBAAmB,CAC5B,AACD,+FACU,cAAe,AACf,eAAgB,AAChB,kBAAmB,AACnB,oBAAsB,CAC/B,AACD,sEACM,WAAY,AACZ,WAAa,CAClB,AACD,iDACI,uBAAyB,CAC5B,AACD,gEACI,WAAY,AACZ,kBAAmB,AACnB,yBAA0B,AAC1B,cAAgB,CACnB,AACD,uDACI,WAAY,AACZ,kBAAmB,AACnB,mBAAoB,AACpB,UAAW,AACX,8BAAgC,CACnC,AACD,6DACI,oBAAuB,AACvB,WAAY,AACZ,UAAW,AACX,aAAc,AACd,iBAAmB,CACtB,AACD,gFACM,eAAgB,AAChB,cAAe,AACf,mBAAoB,AACpB,kBAAmB,AACnB,oBAAqB,AACrB,+BAAiC,CACtC,AACD,+EACM,cAAe,AACf,eAAgB,AAChB,YAAa,AACb,kBAAmB,AACnB,gBAAkB,CACvB,AACD,qFACQ,aAAe,CACtB,AACD,kFACM,qBAAuB,CAC5B,AACD,oGACQ,eAAgB,AAChB,2BAA4B,AAC5B,gCAAiC,AACjC,iBAAmB,CAC1B,AACD,4GACU,YAAc,CACvB,AACD,2GACU,WAAY,AACZ,YAAa,AACb,QAAW,AACX,mBAAoB,AACpB,qBAAsB,AACtB,kBAAmB,AACnB,UAAW,AACX,OAAU,AACV,SAAU,AACV,uBAA0B,CACnC,AACD,iHACU,UAAW,AACX,SAAW,CACpB,AACD,sGACQ,eAAgB,AAChB,qBAAsB,AACtB,cAAe,AACf,iBAAmB,CAC1B,AACD,uGACQ,eAAgB,AAChB,aAAe,CACtB,AACD,6GACU,aAAe,CACxB,AACD,oGACQ,kBAAmB,AACnB,WAAY,AACZ,SAAU,AACV,aAAe,CACtB\",\"file\":\"index.vue\",\"sourcesContent\":[\"\\n.unread-mail-emptyTitle[data-v-51b23524] {\\n  font-size: 16px;\\n  color: #F38181;\\n  padding-top: 20px;\\n  text-align: center;\\n}\\n.dashboard-container[data-v-51b23524] {\\n  padding: 20px 50px;\\n}\\n.dashboard-container .pan-info-roles[data-v-51b23524] {\\n    font-size: 12px;\\n    font-weight: 700;\\n    color: #333;\\n    display: block;\\n}\\n.dashboard-container .info-container[data-v-51b23524] {\\n    position: relative;\\n    margin-left: 190px;\\n    height: 150px;\\n    line-height: 200px;\\n}\\n.dashboard-container .info-container .display_name[data-v-51b23524] {\\n      font-size: 48px;\\n      line-height: 48px;\\n      color: #212121;\\n      position: absolute;\\n      top: 25px;\\n}\\n.dashboard-container .info-container .info-wrapper[data-v-51b23524] {\\n      line-height: 40px;\\n      position: absolute;\\n      bottom: 0px;\\n}\\n.dashboard-container .info-container .info-wrapper .info-item[data-v-51b23524] {\\n        display: inline-block;\\n        margin-right: 95px;\\n}\\n.dashboard-container .info-container .info-wrapper .info-item .info-item-num[data-v-51b23524] {\\n          color: #212121;\\n          font-size: 24px;\\n          display: inline-block;\\n          padding-right: 5px;\\n}\\n.dashboard-container .info-container .info-wrapper .info-item .info-item-text[data-v-51b23524] {\\n          color: #727272;\\n          font-size: 14px;\\n          padding-right: 5px;\\n          display: inline-block;\\n}\\n.dashboard-container .info-container .dashboard-icon[data-v-51b23524] {\\n      width: 22px;\\n      height: 22px;\\n}\\n.dashboard-container .btn-group[data-v-51b23524] {\\n    margin: 30px 36px 30px 0;\\n}\\n.dashboard-container .main-dashboard-container[data-v-51b23524] {\\n    width: 100%;\\n    position: relative;\\n    border: 1px solid #DEE1E2;\\n    padding: 0 10px;\\n}\\n.dashboard-container .chart-container[data-v-51b23524] {\\n    float: left;\\n    position: relative;\\n    padding-right: 10px;\\n    width: 40%;\\n    border-right: 1px solid #DEE1E2;\\n}\\n.dashboard-container .unread-mail-container[data-v-51b23524] {\\n    padding: 12px 12px 0px;\\n    float: left;\\n    width: 60%;\\n    height: 380px;\\n    position: relative;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-title[data-v-51b23524] {\\n      font-size: 16px;\\n      color: #F38181;\\n      letter-spacing: 1px;\\n      padding-left: 15px;\\n      padding-bottom: 10px;\\n      border-bottom: 1px solid #DEE1E2;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-more[data-v-51b23524] {\\n      color: #2C3E50;\\n      font-size: 12px;\\n      float: right;\\n      margin-right: 25px;\\n      line-height: 40px;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-more[data-v-51b23524]:hover {\\n        color: #3A71A8;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-wrapper[data-v-51b23524] {\\n      padding: 0 20px 0 22px;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-item[data-v-51b23524] {\\n        cursor: pointer;\\n        padding: 16px 8px 16px 16px;\\n        border-bottom: 1px solid #DEE1E2;\\n        position: relative;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-item .el-tag[data-v-51b23524] {\\n          margin: 0 3px;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-item[data-v-51b23524]:before {\\n          content: \\\"\\\";\\n          height: 104%;\\n          width: 0px;\\n          background: #30B08F;\\n          display: inline-block;\\n          position: absolute;\\n          opacity: 0;\\n          left: 0px;\\n          top: -2px;\\n          transition: 0.3s ease all;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-item[data-v-51b23524]:hover:before {\\n          opacity: 1;\\n          width: 3px;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-status[data-v-51b23524] {\\n        font-size: 12px;\\n        display: inline-block;\\n        color: #9B9B9B;\\n        padding-right: 6px;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-content[data-v-51b23524] {\\n        font-size: 13px;\\n        color: #2C3E50;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-content[data-v-51b23524]:hover {\\n          color: #3A71A8;\\n}\\n.dashboard-container .unread-mail-container .unread-mail-wrapper .unread-mail-time[data-v-51b23524] {\\n        position: absolute;\\n        right: 16px;\\n        top: 16px;\\n        color: #9B9B9B;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-51b23524\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/dashboard/editor/index.vue\n// module id = 427\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\n    ];\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 440\n// module chunks = 0","/**\n * @module echarts/chart/helper/Line\n */\n\n\n    var symbolUtil = require('../../util/symbol');\n    var vector = require('zrender/lib/core/vector');\n    // var matrix = require('zrender/lib/core/matrix');\n    var LinePath = require('./LinePath');\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../../util/number');\n\n    var SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n    function makeSymbolTypeKey(symbolCategory) {\n        return '_' + symbolCategory + 'Type';\n    }\n    /**\n     * @inner\n     */\n    function createSymbol(name, lineData, idx) {\n        var color = lineData.getItemVisual(idx, 'color');\n        var symbolType = lineData.getItemVisual(idx, name);\n        var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n        if (!symbolType || symbolType === 'none') {\n            return;\n        }\n\n        if (!zrUtil.isArray(symbolSize)) {\n            symbolSize = [symbolSize, symbolSize];\n        }\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2,\n            symbolSize[0], symbolSize[1], color\n        );\n\n        symbolPath.name = name;\n\n        return symbolPath;\n    }\n\n    function createLine(points) {\n        var line = new LinePath({\n            name: 'line'\n        });\n        setLinePoints(line.shape, points);\n        return line;\n    }\n\n    function setLinePoints(targetShape, points) {\n        var p1 = points[0];\n        var p2 = points[1];\n        var cp1 = points[2];\n        targetShape.x1 = p1[0];\n        targetShape.y1 = p1[1];\n        targetShape.x2 = p2[0];\n        targetShape.y2 = p2[1];\n        targetShape.percent = 1;\n\n        if (cp1) {\n            targetShape.cpx1 = cp1[0];\n            targetShape.cpy1 = cp1[1];\n        }\n        else {\n            targetShape.cpx1 = NaN;\n            targetShape.cpy1 = NaN;\n        }\n    }\n\n    function updateSymbolAndLabelBeforeLineUpdate () {\n        var lineGroup = this;\n        var symbolFrom = lineGroup.childOfName('fromSymbol');\n        var symbolTo = lineGroup.childOfName('toSymbol');\n        var label = lineGroup.childOfName('label');\n        // Quick reject\n        if (!symbolFrom && !symbolTo && label.ignore) {\n            return;\n        }\n\n        var invScale = 1;\n        var parentNode = this.parent;\n        while (parentNode) {\n            if (parentNode.scale) {\n                invScale /= parentNode.scale[0];\n            }\n            parentNode = parentNode.parent;\n        }\n\n        var line = lineGroup.childOfName('line');\n        // If line not changed\n        // FIXME Parent scale changed\n        if (!this.__dirty && !line.__dirty) {\n            return;\n        }\n\n        var percent = line.shape.percent;\n        var fromPos = line.pointAt(0);\n        var toPos = line.pointAt(percent);\n\n        var d = vector.sub([], toPos, fromPos);\n        vector.normalize(d, d);\n\n        if (symbolFrom) {\n            symbolFrom.attr('position', fromPos);\n            var tangent = line.tangentAt(0);\n            symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(\n                tangent[1], tangent[0]\n            ));\n            symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n        }\n        if (symbolTo) {\n            symbolTo.attr('position', toPos);\n            var tangent = line.tangentAt(1);\n            symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(\n                tangent[1], tangent[0]\n            ));\n            symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n        }\n\n        if (!label.ignore) {\n            label.attr('position', toPos);\n\n            var textPosition;\n            var textAlign;\n            var textVerticalAlign;\n\n            var distance = 5 * invScale;\n            // End\n            if (label.__position === 'end') {\n                textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n                textAlign = d[0] > 0.8 ? 'left' : (d[0] < -0.8 ? 'right' : 'center');\n                textVerticalAlign = d[1] > 0.8 ? 'top' : (d[1] < -0.8 ? 'bottom' : 'middle');\n            }\n            // Middle\n            else if (label.__position === 'middle') {\n                var halfPercent = percent / 2;\n                var tangent = line.tangentAt(halfPercent);\n                var n = [tangent[1], -tangent[0]];\n                var cp = line.pointAt(halfPercent);\n                if (n[1] > 0) {\n                    n[0] = -n[0];\n                    n[1] = -n[1];\n                }\n                textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                var rotation = -Math.atan2(tangent[1], tangent[0]);\n                if (toPos[0] < fromPos[0]) {\n                    rotation = Math.PI + rotation;\n                }\n                label.attr('rotation', rotation);\n            }\n            // Start\n            else {\n                textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n                textAlign = d[0] > 0.8 ? 'right' : (d[0] < -0.8 ? 'left' : 'center');\n                textVerticalAlign = d[1] > 0.8 ? 'bottom' : (d[1] < -0.8 ? 'top' : 'middle');\n            }\n            label.attr({\n                style: {\n                    // Use the user specified text align and baseline first\n                    textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n                    textAlign: label.__textAlign || textAlign\n                },\n                position: textPosition,\n                scale: [invScale, invScale]\n            });\n        }\n    }\n\n    /**\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     * @alias {module:echarts/chart/helper/Line}\n     */\n    function Line(lineData, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this._createLine(lineData, idx, seriesScope);\n    }\n\n    var lineProto = Line.prototype;\n\n    // Update symbol position and rotation\n    lineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\n    lineProto._createLine = function (lineData, idx, seriesScope) {\n        var seriesModel = lineData.hostModel;\n        var linePoints = lineData.getItemLayout(idx);\n\n        var line = createLine(linePoints);\n        line.shape.percent = 0;\n        graphic.initProps(line, {\n            shape: {\n                percent: 1\n            }\n        }, seriesModel, idx);\n\n        this.add(line);\n\n        var label = new graphic.Text({\n            name: 'label'\n        });\n        this.add(label);\n\n        zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n            var symbol = createSymbol(symbolCategory, lineData, idx);\n            // symbols must added after line to make sure\n            // it will be updated after line#update.\n            // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n            this.add(symbol);\n            this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n        }, this);\n\n        this._updateCommonStl(lineData, idx, seriesScope);\n    };\n\n    lineProto.updateData = function (lineData, idx, seriesScope) {\n        var seriesModel = lineData.hostModel;\n\n        var line = this.childOfName('line');\n        var linePoints = lineData.getItemLayout(idx);\n        var target = {\n            shape: {}\n        };\n        setLinePoints(target.shape, linePoints);\n        graphic.updateProps(line, target, seriesModel, idx);\n\n        zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n            var symbolType = lineData.getItemVisual(idx, symbolCategory);\n            var key = makeSymbolTypeKey(symbolCategory);\n            // Symbol changed\n            if (this[key] !== symbolType) {\n                this.remove(this.childOfName(symbolCategory));\n                var symbol = createSymbol(symbolCategory, lineData, idx);\n                this.add(symbol);\n            }\n            this[key] = symbolType;\n        }, this);\n\n        this._updateCommonStl(lineData, idx, seriesScope);\n    };\n\n    lineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n        var seriesModel = lineData.hostModel;\n\n        var line = this.childOfName('line');\n\n        var lineStyle = seriesScope && seriesScope.lineStyle;\n        var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n\n        // Optimization for large dataset\n        if (!seriesScope || lineData.hasItemOption) {\n            var itemModel = lineData.getItemModel(idx);\n\n            lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n            hoverLineStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n\n            labelModel = itemModel.getModel('label.normal');\n            hoverLabelModel = itemModel.getModel('label.emphasis');\n        }\n\n        var visualColor = lineData.getItemVisual(idx, 'color');\n        var visualOpacity = zrUtil.retrieve(\n            lineData.getItemVisual(idx, 'opacity'),\n            lineStyle.opacity,\n            1\n        );\n\n        line.useStyle(zrUtil.defaults(\n            {\n                strokeNoScale: true,\n                fill: 'none',\n                stroke: visualColor,\n                opacity: visualOpacity\n            },\n            lineStyle\n        ));\n        line.hoverStyle = hoverLineStyle;\n\n        // Update symbol\n        zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n            var symbol = this.childOfName(symbolCategory);\n            if (symbol) {\n                symbol.setColor(visualColor);\n                symbol.setStyle({\n                    opacity: visualOpacity\n                });\n            }\n        }, this);\n\n        var showLabel = labelModel.getShallow('show');\n        var hoverShowLabel = hoverLabelModel.getShallow('show');\n\n        var label = this.childOfName('label');\n        var defaultLabelColor;\n        var defaultText;\n\n        if (showLabel || hoverShowLabel) {\n            var rawVal = seriesModel.getRawValue(idx);\n            defaultText = rawVal == null\n                ? defaultText = lineData.getName(idx)\n                : isFinite(rawVal)\n                ? numberUtil.round(rawVal)\n                : rawVal;\n            defaultLabelColor = visualColor || '#000';\n        }\n\n        // label.afterUpdate = lineAfterUpdate;\n        if (showLabel) {\n            var textStyleModel = labelModel.getModel('textStyle');\n            label.setStyle({\n                text: zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType),\n                    defaultText\n                ),\n                textFont: textStyleModel.getFont(),\n                fill: textStyleModel.getTextColor() || defaultLabelColor\n            });\n\n            label.__textAlign = textStyleModel.get('align');\n            label.__verticalAlign = textStyleModel.get('baseline');\n            label.__position = labelModel.get('position');\n        }\n        else {\n            label.setStyle('text', '');\n        }\n        if (hoverShowLabel) {\n            var textStyleHoverModel = hoverLabelModel.getModel('textStyle');\n\n            label.hoverStyle = {\n                text: zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType),\n                    defaultText\n                ),\n                textFont: textStyleHoverModel.getFont(),\n                fill: textStyleHoverModel.getTextColor() || defaultLabelColor\n            };\n        }\n        else {\n            label.hoverStyle = {\n                text: ''\n            };\n        }\n\n        label.ignore = !showLabel && !hoverShowLabel;\n\n        graphic.setHoverStyle(this);\n    };\n\n    lineProto.updateLayout = function (lineData, idx) {\n        this.setLinePoints(lineData.getItemLayout(idx));\n    };\n\n    lineProto.setLinePoints = function (points) {\n        var linePath = this.childOfName('line');\n        setLinePoints(linePath.shape, points);\n        linePath.dirty();\n    };\n\n    zrUtil.inherits(Line, graphic.Group);\n\n    module.exports = Line;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Line.js\n// module id = 441\n// module chunks = 0","/**\n * @module echarts/chart/helper/LineDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var LineGroup = require('./Line');\n\n\n    function isPointNaN(pt) {\n        return isNaN(pt[0]) || isNaN(pt[1]);\n    }\n    function lineNeedsDraw(pts) {\n        return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n    }\n    /**\n     * @alias module:echarts/component/marker/LineDraw\n     * @constructor\n     */\n    function LineDraw(ctor) {\n        this._ctor = ctor || LineGroup;\n        this.group = new graphic.Group();\n    }\n\n    var lineDrawProto = LineDraw.prototype;\n\n    /**\n     * @param {module:echarts/data/List} lineData\n     */\n    lineDrawProto.updateData = function (lineData) {\n\n        var oldLineData = this._lineData;\n        var group = this.group;\n        var LineCtor = this._ctor;\n\n        var hostModel = lineData.hostModel;\n\n        var seriesScope = {\n            lineStyle: hostModel.getModel('lineStyle.normal').getLineStyle(),\n            hoverLineStyle: hostModel.getModel('lineStyle.emphasis').getLineStyle(),\n            labelModel: hostModel.getModel('label.normal'),\n            hoverLabelModel: hostModel.getModel('label.emphasis')\n        };\n\n        lineData.diff(oldLineData)\n            .add(function (idx) {\n                if (!lineNeedsDraw(lineData.getItemLayout(idx))) {\n                    return;\n                }\n                var lineGroup = new LineCtor(lineData, idx, seriesScope);\n\n                lineData.setItemGraphicEl(idx, lineGroup);\n\n                group.add(lineGroup);\n            })\n            .update(function (newIdx, oldIdx) {\n                var lineGroup = oldLineData.getItemGraphicEl(oldIdx);\n                if (!lineNeedsDraw(lineData.getItemLayout(newIdx))) {\n                    group.remove(lineGroup);\n                    return;\n                }\n\n                if (!lineGroup) {\n                    lineGroup = new LineCtor(lineData, newIdx, seriesScope);\n                }\n                else {\n                    lineGroup.updateData(lineData, newIdx, seriesScope);\n                }\n\n                lineData.setItemGraphicEl(newIdx, lineGroup);\n\n                group.add(lineGroup);\n            })\n            .remove(function (idx) {\n                group.remove(oldLineData.getItemGraphicEl(idx));\n            })\n            .execute();\n\n        this._lineData = lineData;\n    };\n\n    lineDrawProto.updateLayout = function () {\n        var lineData = this._lineData;\n        lineData.eachItemGraphicEl(function (el, idx) {\n            el.updateLayout(lineData, idx);\n        }, this);\n    };\n\n    lineDrawProto.remove = function () {\n        this.group.removeAll();\n    };\n\n    module.exports = LineDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/LineDraw.js\n// module id = 442\n// module chunks = 0","/**\n * Line path for bezier and straight line draw\n */\n\n    var graphic = require('../../util/graphic');\n    var vec2 = require('zrender/lib/core/vector');\n\n    var straightLineProto = graphic.Line.prototype;\n    var bezierCurveProto = graphic.BezierCurve.prototype;\n\n    function isLine(shape) {\n        return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n    }\n\n    module.exports = graphic.extendShape({\n\n        type: 'ec-line',\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            percent: 1,\n            cpx1: null,\n            cpy1: null\n        },\n\n        buildPath: function (ctx, shape) {\n            (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n        },\n\n        pointAt: function (t) {\n            return isLine(this.shape)\n                ? straightLineProto.pointAt.call(this, t)\n                : bezierCurveProto.pointAt.call(this, t);\n        },\n\n        tangentAt: function (t) {\n            var shape = this.shape;\n            var p = isLine(shape)\n                ? [shape.x2 - shape.x1, shape.y2 - shape.y1]\n                : bezierCurveProto.tangentAt.call(this, t);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/LinePath.js\n// module id = 443\n// module chunks = 0","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\n        }\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['x', 'y', 'z']);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, ['lng', 'lat', 'value'])\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 444\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/grid');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line.js\n// module id = 445\n// module chunks = 0","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineSeries.js\n// module id = 446\n// module chunks = 0","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineView.js\n// module id = 447\n// module chunks = 0","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 448\n// module chunks = 0","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/poly.js\n// module id = 449\n// module chunks = 0","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/AxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 450\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\n            // To radian.\n            labelRotation = labelRotation * PI / 180;\n\n            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelBeforeFormat = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelBeforeFormat;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            function isTwoLabelOverlapped(current, next) {\n                var firstRect = current && current.getBoundingRect().clone();\n                var nextRect = next && next.getBoundingRect().clone();\n                if (firstRect && nextRect) {\n                    firstRect.applyTransform(current.getLocalTransform());\n                    nextRect.applyTransform(next.getLocalTransform());\n                    return firstRect.intersect(nextRect);\n                }\n            }\n\n            // If min or max are user set, we need to check\n            // If the tick on min(max) are overlap on their neighbour tick\n            // If they are overlapped, we need to hide the min(max) tick label\n            if (axisModel.getMin() != null) {\n                var firstLabel = textEls[0];\n                var nextLabel = textEls[1];\n                if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n                    firstLabel.ignore = true;\n                }\n            }\n            if (axisModel.getMax() != null) {\n                var lastLabel = textEls[textEls.length - 1];\n                var prevLabel = textEls[textEls.length - 2];\n                if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n                    lastLabel.ignore = true;\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.verticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @inner\n     */\n    function innerTextLayout(opt, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            verticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            verticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            verticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            verticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 451\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        render: function (axisModel, ecModel) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = layoutAxis(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    AxisView.extend({\n        type: 'xAxis'\n    });\n    AxisView.extend({\n        type: 'yAxis'\n    });\n\n    /**\n     * @inner\n     */\n    function layoutAxis(gridModel, axisModel) {\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        if (axis.onZero) {\n            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\n        }\n\n        if (axisModel.getModel('axisTick').get('inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (axisModel.getModel('axisLabel').get('inside')) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\n        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 452\n// module chunks = 0","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/grid.js\n// module id = 453\n// module chunks = 0","\n\n    require('./marker/MarkLineModel');\n    require('./marker/MarkLineView');\n\n    require('../echarts').registerPreprocessor(function (opt) {\n        // Make sure markLine component is enabled\n        opt.markLine = opt.markLine || {};\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/markLine.js\n// module id = 454\n// module chunks = 0","// HINT Markpoint can't be used too much\n\n\n    require('./marker/MarkPointModel');\n    require('./marker/MarkPointView');\n\n    require('../echarts').registerPreprocessor(function (opt) {\n        // Make sure markPoint component is enabled\n        opt.markPoint = opt.markPoint || {};\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/markPoint.js\n// module id = 455\n// module chunks = 0","\n\n    module.exports = require('./MarkerModel').extend({\n\n        type: 'markLine',\n\n        defaultOption: {\n            zlevel: 0,\n            z: 5,\n\n            symbol: ['circle', 'arrow'],\n            symbolSize: [8, 16],\n\n            //symbolRotate: 0,\n\n            precision: 2,\n            tooltip: {\n                trigger: 'item'\n            },\n            label: {\n                normal: {\n                    show: true,\n                    position: 'end'\n                },\n                emphasis: {\n                    show: true\n                }\n            },\n            lineStyle: {\n                normal: {\n                    type: 'dashed'\n                },\n                emphasis: {\n                    width: 3\n                }\n            },\n            animationEasing: 'linear'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/marker/MarkLineModel.js\n// module id = 456\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var List = require('../../data/List');\n    var numberUtil = require('../../util/number');\n\n    var markerHelper = require('./markerHelper');\n\n    var LineDraw = require('../../chart/helper/LineDraw');\n\n    var markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n        var data = seriesModel.getData();\n        // Special type markLine like 'min', 'max', 'average'\n        var mlType = item.type;\n\n        if (!zrUtil.isArray(item)\n            && (\n                mlType === 'min' || mlType === 'max' || mlType === 'average'\n                // In case\n                // data: [{\n                //   yAxis: 10\n                // }]\n                || (item.xAxis != null || item.yAxis != null)\n            )\n        ) {\n            var valueAxis;\n            var valueDataDim;\n            var value;\n\n            if (item.yAxis != null || item.xAxis != null) {\n                valueDataDim = item.yAxis != null ? 'y' : 'x';\n                valueAxis = coordSys.getAxis(valueDataDim);\n\n                value = zrUtil.retrieve(item.yAxis, item.xAxis);\n            }\n            else {\n                var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n                valueDataDim = axisInfo.valueDataDim;\n                valueAxis = axisInfo.valueAxis;\n                value = markerHelper.numCalculate(data, valueDataDim, mlType);\n            }\n            var valueIndex = valueDataDim === 'x' ? 0 : 1;\n            var baseIndex = 1 - valueIndex;\n\n            var mlFrom = zrUtil.clone(item);\n            var mlTo = {};\n\n            mlFrom.type = null;\n\n            mlFrom.coord = [];\n            mlTo.coord = [];\n            mlFrom.coord[baseIndex] = -Infinity;\n            mlTo.coord[baseIndex] = Infinity;\n\n            var precision = mlModel.get('precision');\n            if (precision >= 0 && typeof value === 'number') {\n                value = +value.toFixed(precision);\n            }\n\n            mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n\n            item = [mlFrom, mlTo, { // Extra option for tooltip and label\n                type: mlType,\n                valueIndex: item.valueIndex,\n                // Force to use the value of calculated value.\n                value: value\n            }];\n        }\n\n        item = [\n            markerHelper.dataTransform(seriesModel, item[0]),\n            markerHelper.dataTransform(seriesModel, item[1]),\n            zrUtil.extend({}, item[2])\n        ];\n\n        // Avoid line data type is extended by from(to) data type\n        item[2].type = item[2].type || '';\n\n        // Merge from option and to option into line option\n        zrUtil.merge(item[2], item[0]);\n        zrUtil.merge(item[2], item[1]);\n\n        return item;\n    };\n\n    function isInifinity(val) {\n        return !isNaN(val) && !isFinite(val);\n    }\n\n    // If a markLine has one dim\n    function ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n        var otherDimIndex = 1 - dimIndex;\n        var dimName = coordSys.dimensions[dimIndex];\n        return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex])\n            && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n    }\n\n    function markLineFilter(coordSys, item) {\n        if (coordSys.type === 'cartesian2d') {\n            var fromCoord = item[0].coord;\n            var toCoord = item[1].coord;\n            // In case\n            // {\n            //  markLine: {\n            //    data: [{ yAxis: 2 }]\n            //  }\n            // }\n            if (\n                fromCoord && toCoord &&\n                (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys)\n                || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))\n            ) {\n                return true;\n            }\n        }\n        return markerHelper.dataFilter(coordSys, item[0])\n            && markerHelper.dataFilter(coordSys, item[1]);\n    }\n\n    function updateSingleMarkerEndLayout(\n        data, idx, isFrom, seriesModel, api\n    ) {\n        var coordSys = seriesModel.coordinateSystem;\n        var itemModel = data.getItemModel(idx);\n\n        var point;\n        var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n        var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n        if (!isNaN(xPx) && !isNaN(yPx)) {\n            point = [xPx, yPx];\n        }\n        else {\n            // Chart like bar may have there own marker positioning logic\n            if (seriesModel.getMarkerPosition) {\n                // Use the getMarkerPoisition\n                point = seriesModel.getMarkerPosition(\n                    data.getValues(data.dimensions, idx)\n                );\n            }\n            else {\n                var dims = coordSys.dimensions;\n                var x = data.get(dims[0], idx);\n                var y = data.get(dims[1], idx);\n                point = coordSys.dataToPoint([x, y]);\n            }\n            // Expand line to the edge of grid if value on one axis is Inifnity\n            // In case\n            //  markLine: {\n            //    data: [{\n            //      yAxis: 2\n            //      // or\n            //      type: 'average'\n            //    }]\n            //  }\n            if (coordSys.type === 'cartesian2d') {\n                var xAxis = coordSys.getAxis('x');\n                var yAxis = coordSys.getAxis('y');\n                var dims = coordSys.dimensions;\n                if (isInifinity(data.get(dims[0], idx))) {\n                    point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n                }\n                else if (isInifinity(data.get(dims[1], idx))) {\n                    point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n                }\n            }\n\n            // Use x, y if has any\n            if (!isNaN(xPx)) {\n                point[0] = xPx;\n            }\n            if (!isNaN(yPx)) {\n                point[1] = yPx;\n            }\n        }\n\n        data.setItemLayout(idx, point);\n    }\n\n    require('./MarkerView').extend({\n\n        type: 'markLine',\n\n        updateLayout: function (markLineModel, ecModel, api) {\n            ecModel.eachSeries(function (seriesModel) {\n                var mlModel = seriesModel.markLineModel;\n                if (mlModel) {\n                    var mlData = mlModel.getData();\n                    var fromData = mlModel.__from;\n                    var toData = mlModel.__to;\n                    // Update visual and layout of from symbol and to symbol\n                    fromData.each(function (idx) {\n                        updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n                        updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n                    });\n                    // Update layout of line\n                    mlData.each(function (idx) {\n                        mlData.setItemLayout(idx, [\n                            fromData.getItemLayout(idx),\n                            toData.getItemLayout(idx)\n                        ]);\n                    });\n\n                    this.markerGroupMap[seriesModel.name].updateLayout();\n\n                }\n            }, this);\n        },\n\n        renderSeries: function (seriesModel, mlModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesName = seriesModel.name;\n            var seriesData = seriesModel.getData();\n\n            var lineDrawMap = this.markerGroupMap;\n            var lineDraw = lineDrawMap[seriesName];\n            if (!lineDraw) {\n                lineDraw = lineDrawMap[seriesName] = new LineDraw();\n            }\n            this.group.add(lineDraw.group);\n\n            var mlData = createList(coordSys, seriesModel, mlModel);\n\n            var fromData = mlData.from;\n            var toData = mlData.to;\n            var lineData = mlData.line;\n\n            mlModel.__from = fromData;\n            mlModel.__to = toData;\n            // Line data for tooltip and formatter\n            mlModel.setData(lineData);\n\n            var symbolType = mlModel.get('symbol');\n            var symbolSize = mlModel.get('symbolSize');\n            if (!zrUtil.isArray(symbolType)) {\n                symbolType = [symbolType, symbolType];\n            }\n            if (typeof symbolSize === 'number') {\n                symbolSize = [symbolSize, symbolSize];\n            }\n\n            // Update visual and layout of from symbol and to symbol\n            mlData.from.each(function (idx) {\n                updateDataVisualAndLayout(fromData, idx, true);\n                updateDataVisualAndLayout(toData, idx, false);\n            });\n\n            // Update visual and layout of line\n            lineData.each(function (idx) {\n                var lineColor = lineData.getItemModel(idx).get('lineStyle.normal.color');\n                lineData.setItemVisual(idx, {\n                    color: lineColor || fromData.getItemVisual(idx, 'color')\n                });\n                lineData.setItemLayout(idx, [\n                    fromData.getItemLayout(idx),\n                    toData.getItemLayout(idx)\n                ]);\n\n                lineData.setItemVisual(idx, {\n                    'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n                    'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n                    'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n                    'toSymbol': toData.getItemVisual(idx, 'symbol')\n                });\n            });\n\n            lineDraw.updateData(lineData);\n\n            // Set host model for tooltip\n            // FIXME\n            mlData.line.eachItemGraphicEl(function (el, idx) {\n                el.traverse(function (child) {\n                    child.dataModel = mlModel;\n                });\n            });\n\n            function updateDataVisualAndLayout(data, idx, isFrom) {\n                var itemModel = data.getItemModel(idx);\n\n                updateSingleMarkerEndLayout(\n                    data, idx, isFrom, seriesModel, api\n                );\n\n                data.setItemVisual(idx, {\n                    symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n                    symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n                    color: itemModel.get('itemStyle.normal.color') || seriesData.getVisual('color')\n                });\n            }\n\n            lineDraw.__keep = true;\n\n            lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n        }\n    });\n\n    /**\n     * @inner\n     * @param {module:echarts/coord/*} coordSys\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {module:echarts/model/Model} mpModel\n     */\n    function createList(coordSys, seriesModel, mlModel) {\n\n        var coordDimsInfos;\n        if (coordSys) {\n            coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n                var info = seriesModel.getData().getDimensionInfo(\n                    seriesModel.coordDimToDataDim(coordDim)[0]\n                ) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n                info.name = coordDim;\n                return info;\n            });\n        }\n        else {\n            coordDimsInfos =[{\n                name: 'value',\n                type: 'float'\n            }];\n        }\n\n        var fromData = new List(coordDimsInfos, mlModel);\n        var toData = new List(coordDimsInfos, mlModel);\n        // No dimensions\n        var lineData = new List([], mlModel);\n\n        var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(\n            markLineTransform, seriesModel, coordSys, mlModel\n        ));\n        if (coordSys) {\n            optData = zrUtil.filter(\n                optData, zrUtil.curry(markLineFilter, coordSys)\n            );\n        }\n        var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n            return item.value;\n        };\n        fromData.initData(\n            zrUtil.map(optData, function (item) { return item[0]; }),\n            null, dimValueGetter\n        );\n        toData.initData(\n            zrUtil.map(optData, function (item) { return item[1]; }),\n            null, dimValueGetter\n        );\n        lineData.initData(\n            zrUtil.map(optData, function (item) { return item[2]; })\n        );\n        lineData.hasItemOption = true;\n        return {\n            from: fromData,\n            to: toData,\n            line: lineData\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/marker/MarkLineView.js\n// module id = 457\n// module chunks = 0","\n\n    module.exports = require('./MarkerModel').extend({\n\n        type: 'markPoint',\n\n        defaultOption: {\n            zlevel: 0,\n            z: 5,\n            symbol: 'pin',\n            symbolSize: 50,\n            //symbolRotate: 0,\n            //symbolOffset: [0, 0]\n            tooltip: {\n                trigger: 'item'\n            },\n            label: {\n                normal: {\n                    show: true,\n                    position: 'inside'\n                },\n                emphasis: {\n                    show: true\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 2\n                }\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/marker/MarkPointModel.js\n// module id = 458\n// module chunks = 0","\n\n    var SymbolDraw = require('../../chart/helper/SymbolDraw');\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../../util/number');\n\n    var List = require('../../data/List');\n\n    var markerHelper = require('./markerHelper');\n\n    function updateMarkerLayout(mpData, seriesModel, api) {\n        var coordSys = seriesModel.coordinateSystem;\n        mpData.each(function (idx) {\n            var itemModel = mpData.getItemModel(idx);\n            var point;\n            var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n            var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                point = [xPx, yPx];\n            }\n            // Chart like bar may have there own marker positioning logic\n            else if (seriesModel.getMarkerPosition) {\n                // Use the getMarkerPoisition\n                point = seriesModel.getMarkerPosition(\n                    mpData.getValues(mpData.dimensions, idx)\n                );\n            }\n            else if (coordSys) {\n                var x = mpData.get(coordSys.dimensions[0], idx);\n                var y = mpData.get(coordSys.dimensions[1], idx);\n                point = coordSys.dataToPoint([x, y]);\n\n            }\n\n            // Use x, y if has any\n            if (!isNaN(xPx)) {\n                point[0] = xPx;\n            }\n            if (!isNaN(yPx)) {\n                point[1] = yPx;\n            }\n\n            mpData.setItemLayout(idx, point);\n        });\n    }\n\n    require('./MarkerView').extend({\n\n        type: 'markPoint',\n\n        updateLayout: function (markPointModel, ecModel, api) {\n            ecModel.eachSeries(function (seriesModel) {\n                var mpModel = seriesModel.markPointModel;\n                if (mpModel) {\n                    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n                    this.markerGroupMap[seriesModel.name].updateLayout(mpModel);\n                }\n            }, this);\n        },\n\n        renderSeries: function (seriesModel, mpModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesName = seriesModel.name;\n            var seriesData = seriesModel.getData();\n\n            var symbolDrawMap = this.markerGroupMap;\n            var symbolDraw = symbolDrawMap[seriesName];\n            if (!symbolDraw) {\n                symbolDraw = symbolDrawMap[seriesName] = new SymbolDraw();\n            }\n\n            var mpData = createList(coordSys, seriesModel, mpModel);\n\n            // FIXME\n            mpModel.setData(mpData);\n\n            updateMarkerLayout(mpModel.getData(), seriesModel, api);\n\n            mpData.each(function (idx) {\n                var itemModel = mpData.getItemModel(idx);\n                var symbolSize = itemModel.getShallow('symbolSize');\n                if (typeof symbolSize === 'function') {\n                    // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n                    symbolSize = symbolSize(\n                        mpModel.getRawValue(idx), mpModel.getDataParams(idx)\n                    );\n                }\n                mpData.setItemVisual(idx, {\n                    symbolSize: symbolSize,\n                    color: itemModel.get('itemStyle.normal.color')\n                        || seriesData.getVisual('color'),\n                    symbol: itemModel.getShallow('symbol')\n                });\n            });\n\n            // TODO Text are wrong\n            symbolDraw.updateData(mpData);\n            this.group.add(symbolDraw.group);\n\n            // Set host model for tooltip\n            // FIXME\n            mpData.eachItemGraphicEl(function (el) {\n                el.traverse(function (child) {\n                    child.dataModel = mpModel;\n                });\n            });\n\n            symbolDraw.__keep = true;\n\n            symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n        }\n    });\n\n    /**\n     * @inner\n     * @param {module:echarts/coord/*} [coordSys]\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {module:echarts/model/Model} mpModel\n     */\n    function createList(coordSys, seriesModel, mpModel) {\n        var coordDimsInfos;\n        if (coordSys) {\n            coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n                var info = seriesModel.getData().getDimensionInfo(\n                    seriesModel.coordDimToDataDim(coordDim)[0]\n                ) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n                info.name = coordDim;\n                return info;\n            });\n        }\n        else {\n            coordDimsInfos =[{\n                name: 'value',\n                type: 'float'\n            }];\n        }\n\n        var mpData = new List(coordDimsInfos, mpModel);\n        var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(\n                markerHelper.dataTransform, seriesModel\n            ));\n        if (coordSys) {\n            dataOpt = zrUtil.filter(\n                dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys)\n            );\n        }\n\n        mpData.initData(dataOpt, null,\n            coordSys ? markerHelper.dimValueGetter : function (item) {\n                return item.value;\n            }\n        );\n        return mpData;\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/marker/MarkPointView.js\n// module id = 459\n// module chunks = 0","// FIXME Better way to pack data in graphic element\n\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 460\n// module chunks = 0","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        tooltipModel = tooltipModel;\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self.enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self.enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self.enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            var el = this.el;\n            el.innerHTML = content;\n            el.style.display = content ? 'block' : 'none';\n        },\n\n        moveTo: function (x, y) {\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        // showLater: function ()\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this.enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 461\n// module chunks = 0","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\n            trigger: 'item',\n\n            // 触发条件，支持 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove',\n\n            // 是否永远显示 content\n            alwaysShowContent: false,\n\n            // 位置 {Array} | {Function}\n            // position: null\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: true,\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                // 直线指示器样式设置\n                lineStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'solid'\n                },\n\n                crossStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                },\n\n                // 阴影指示器样式设置\n                shadowStyle: {\n                    color: 'rgba(150,150,150,0.3)'\n                }\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 462\n// module chunks = 0","\n\n    var TooltipContent = require('./TooltipContent');\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var modelUtil = require('../../util/model');\n    var parsePercent = numberUtil.parsePercent;\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n\n    function dataEqual(a, b) {\n        if (!a || !b) {\n            return false;\n        }\n        var round = numberUtil.round;\n        return round(a[0]) === round(b[0])\n            && round(a[1]) === round(b[1]);\n    }\n    /**\n     * @inner\n     */\n    function makeLineShape(x1, y1, x2, y2) {\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeRectShape(x, y, width, height) {\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n        var gap = 20;\n\n        if (x + width + gap > viewWidth) {\n            x -= width + gap;\n        }\n        else {\n            x += gap;\n        }\n        if (y + height + gap > viewHeight) {\n            y -= height + gap;\n        }\n        else {\n            y += gap;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, dom) {\n        var domWidth = dom.clientWidth;\n        var domHeight = dom.clientHeight;\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    /**\n     * @param  {string|Function|Array.<number>} positionExpr\n     * @param  {number} x Mouse x\n     * @param  {number} y Mouse y\n     * @param  {boolean} confine Whether confine tooltip content in view rect.\n     * @param  {module:echarts/component/tooltip/TooltipContent} content\n     * @param  {Object|<Array.<Object>} params\n     * @param  {module:zrender/Element} el target element\n     * @param  {module:echarts/ExtensionAPI} api\n     * @return {Array.<number>}\n     */\n    function updatePosition(positionExpr, x, y, confine, content, params, el, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n\n        var rect = el && el.getBoundingRect().clone();\n        el && rect.applyTransform(el.transform);\n        if (typeof positionExpr === 'function') {\n            // Callback of position can be an array or a string specify the position\n            positionExpr = positionExpr([x, y], params, content.el, rect);\n        }\n\n        if (zrUtil.isArray(positionExpr)) {\n            x = parsePercent(positionExpr[0], viewWidth);\n            y = parsePercent(positionExpr[1], viewHeight);\n        }\n        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n        else if (typeof positionExpr === 'string' && el) {\n            var pos = calcTooltipPosition(\n                positionExpr, rect, content.el\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n        else {\n            var pos = refixTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        if (confine) {\n            var pos = confineTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        content.moveTo(x, y);\n    }\n\n    function ifSeriesSupportAxisTrigger(seriesModel) {\n        var coordSys = seriesModel.coordinateSystem;\n        var trigger = seriesModel.get('tooltip.trigger', true);\n        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\n        return !(!coordSys\n            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\n            || trigger === 'item');\n    }\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        _axisPointers: {},\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._axisPointers = {};\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._lastHover = {\n                // data\n                // payloadBatch\n            };\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.enterable = tooltipModel.get('enterable');\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            /**\n             * @type {Object.<string, Array>}\n             */\n            this._seriesGroupByAxis = this._prepareAxisTriggerData(\n                tooltipModel, ecModel\n            );\n\n            var crossText = this._crossText;\n            if (crossText) {\n                this.group.add(crossText);\n            }\n\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && triggerOn !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n\n            var zr = this._api.getZr();\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            if (triggerOn === 'click') {\n                zr.on('click', this._tryShow, this);\n            }\n            else if (triggerOn === 'mousemove') {\n                zr.on('mousemove', this._mousemove, this);\n                zr.on('mouseout', this._hide, this);\n                zr.on('globalout', this._hide, this);\n            }\n            // else triggerOn is 'none', which enable user\n            // to control tooltip totally using API.\n        },\n\n        _mousemove: function (e) {\n            var showDelay = this._tooltipModel.get('showDelay');\n            var self = this;\n            clearTimeout(this._showTimeout);\n            if (showDelay > 0) {\n                this._showTimeout = setTimeout(function () {\n                    self._tryShow(e);\n                }, showDelay);\n            }\n            else {\n                this._tryShow(e);\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            // From self\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            var ecModel = this._ecModel;\n            var seriesIndex = payload.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            var api = this._api;\n\n            var isTriggerAxis = this._tooltipModel.get('trigger') === 'axis';\n            function seriesHaveDataOnIndex(_series) {\n                var data = _series.getData();\n                var dataIndex = modelUtil.queryDataIndex(data, payload);\n                // Have single dataIndex\n                if (dataIndex != null && !zrUtil.isArray(dataIndex)\n                    && data.hasValue(dataIndex)\n                ) {\n                    return true;\n                }\n            }\n\n            if (payload.x == null || payload.y == null) {\n                if (isTriggerAxis) {\n                    // Find another series.\n                    if (seriesModel && !seriesHaveDataOnIndex(seriesModel)) {\n                        seriesModel = null;\n                    }\n                    if (!seriesModel) {\n                        // Find the first series can use axis trigger And data is not null\n                        ecModel.eachSeries(function (_series) {\n                            if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\n                                if (seriesHaveDataOnIndex(_series)) {\n                                    seriesModel = _series;\n                                }\n                            }\n                        });\n                    }\n                }\n                else {\n                    // Use the first series by default.\n                    seriesModel = seriesModel || ecModel.getSeriesByIndex(0);\n                }\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n                    if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n                        return;\n                    }\n\n                    var el = data.getItemGraphicEl(dataIndex);\n                    var cx;\n                    var cy;\n                    // Try to get the point in coordinate system\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (seriesModel.getTooltipPosition) {\n                        var point = seriesModel.getTooltipPosition(dataIndex) || [];\n                        cx = point[0];\n                        cy = point[1];\n                    }\n                    else if (coordSys && coordSys.dataToPoint) {\n                        var point = coordSys.dataToPoint(\n                            data.getValues(\n                                zrUtil.map(coordSys.dimensions, function (dim) {\n                                    return seriesModel.coordDimToDataDim(dim)[0];\n                                }), dataIndex, true\n                            )\n                        );\n                        cx = point && point[0];\n                        cy = point && point[1];\n                    }\n                    else if (el) {\n                        // Use graphic bounding rect\n                        var rect = el.getBoundingRect().clone();\n                        rect.applyTransform(el.transform);\n                        cx = rect.x + rect.width / 2;\n                        cy = rect.y + rect.height / 2;\n                    }\n\n                    if (cx != null && cy != null) {\n                        this._tryShow({\n                            offsetX: cx,\n                            offsetY: cy,\n                            position: payload.position,\n                            target: el,\n                            event: {}\n                        });\n                    }\n                }\n            }\n            else {\n                var el = api.getZr().handler.findHover(payload.x, payload.y);\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: el,\n                    event: {}\n                });\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            this._hide();\n        },\n\n        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\n            // Prepare data for axis trigger\n            var seriesGroupByAxis = {};\n            ecModel.eachSeries(function (seriesModel) {\n                if (ifSeriesSupportAxisTrigger(seriesModel)) {\n                    var coordSys = seriesModel.coordinateSystem;\n                    var baseAxis;\n                    var key;\n\n                    // Only cartesian2d, polar and single support axis trigger\n                    if (coordSys.type === 'cartesian2d') {\n                        // FIXME `axisPointer.axis` is not baseAxis\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + baseAxis.index;\n                    }\n                    else if (coordSys.type === 'singleAxis') {\n                        baseAxis = coordSys.getAxis();\n                        key = baseAxis.dim + baseAxis.type;\n                    }\n                    else {\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + coordSys.name;\n                    }\n\n                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\n                        coordSys: [],\n                        series: []\n                    };\n                    seriesGroupByAxis[key].coordSys.push(coordSys);\n                    seriesGroupByAxis[key].series.push(seriesModel);\n                }\n            }, this);\n\n            return seriesGroupByAxis;\n        },\n\n        /**\n         * mousemove handler\n         * @param {Object} e\n         * @private\n         */\n        _tryShow: function (e) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n            var globalTrigger = tooltipModel.get('trigger');\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            // Always show item tooltip if mouse is on the element with dataIndex\n            if (el && el.dataIndex != null) {\n                // Use dataModel in element if possible\n                // Used when mouseover on a element like markPoint or edge\n                // In which case, the data is not main data in series.\n                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                var dataIndex = el.dataIndex;\n                var data = dataModel.getData();\n                var itemModel = data.getItemModel(dataIndex);\n                // Series or single data may use item trigger when global is axis trigger\n                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n                else {\n                    // Reset ticket\n                    this._ticket = '';\n                    // If either single data or series use item trigger\n                    this._hideAxisPointer();\n                    // Reset last hover and dispatch downplay action\n                    this._resetLastHover();\n\n                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\n                }\n\n                api.dispatchAction({\n                    type: 'showTip',\n                    from: this.uid,\n                    dataIndexInside: dataIndex,\n                    dataIndex: data.getRawIndex(dataIndex), // expose to user.\n                    seriesIndex: el.seriesIndex\n                });\n            }\n            // Tooltip provided directly. Like legend\n            else if (el && el.tooltip) {\n                var tooltipOpt = el.tooltip;\n                if (typeof tooltipOpt === 'string') {\n                    var content = tooltipOpt;\n                    tooltipOpt = {\n                        content: content,\n                        // Fixed formatter\n                        formatter: content\n                    };\n                }\n                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\n                var defaultHtml = subTooltipModel.get('content');\n                var asyncTicket = Math.random();\n                this._showTooltipContent(\n                    // TODO params\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el, api\n                );\n            }\n            else {\n                if (globalTrigger === 'item') {\n                    this._hide();\n                }\n                else {\n                    // Try show axis tooltip\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n\n                // Action of cross pointer\n                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\n                if (tooltipModel.get('axisPointer.type') === 'cross') {\n                    api.dispatchAction({\n                        type: 'showTip',\n                        from: this.uid,\n                        x: e.offsetX,\n                        y: e.offsetY\n                    });\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on axis\n         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} e\n         * @private\n         */\n        _showAxisTooltip: function (tooltipModel, ecModel, e) {\n            var axisPointerModel = tooltipModel.getModel('axisPointer');\n            var axisPointerType = axisPointerModel.get('type');\n\n            if (axisPointerType === 'cross') {\n                var el = e.target;\n                if (el && el.dataIndex != null) {\n                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\n                    var dataIndex = el.dataIndex;\n                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\n                }\n            }\n\n            this._showAxisPointer();\n            var allNotShow = true;\n            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\n                // Try show the axis pointer\n                var allCoordSys = seriesCoordSysSameAxis.coordSys;\n                var coordSys = allCoordSys[0];\n\n                // If mouse position is not in the grid or polar\n                var point = [e.offsetX, e.offsetY];\n\n                if (!coordSys.containPoint(point)) {\n                    // Hide axis pointer\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                allNotShow = false;\n                // Make sure point is discrete on cateogry axis\n                var dimensions = coordSys.dimensions;\n                var value = coordSys.pointToData(point, true);\n                point = coordSys.dataToPoint(value);\n\n                var baseAxis = coordSys.getBaseAxis();\n                var axisType = axisPointerModel.get('axis');\n                if (axisType === 'auto') {\n                    axisType = baseAxis.dim;\n                }\n\n                if (baseAxis.isBlank() || zrUtil.eqNaN(point[0]) || zrUtil.eqNaN(point[1])) {\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                var contentNotChange = false;\n                var lastHover = this._lastHover;\n                if (axisPointerType === 'cross') {\n                    // If hover data not changed\n                    // Possible when two axes are all category\n                    if (dataEqual(lastHover.data, value)) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value;\n                }\n                else {\n                    var valIndex = zrUtil.indexOf(dimensions, axisType);\n\n                    // If hover data not changed on the axis dimension\n                    if (lastHover.data === value[valIndex]) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value[valIndex];\n                }\n\n                var enableAnimation = tooltipModel.get('animation');\n\n                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\n                    this._showCartesianPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'polar' && !contentNotChange) {\n                    this._showPolarPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\n                    this._showSinglePointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n\n                if (axisPointerType !== 'cross') {\n                    this._dispatchAndShowSeriesTooltipContent(\n                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange, e.position\n                    );\n                }\n            }, this);\n\n            if (!this._tooltipModel.get('show')) {\n                this._hideAxisPointer();\n            }\n\n            if (allNotShow) {\n                this._hide();\n            }\n        },\n\n        /**\n         * Show tooltip on axis of cartesian coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         * @private\n         */\n        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n            var baseAxis = cartesian.getBaseAxis();\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && baseAxis.type === 'category'\n                && baseAxis.getBandWidth() > 20;\n\n            if (axisPointerType === 'cross') {\n                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\n                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\n\n                this._updateCrossText(cartesian, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\n                var otherExtent = otherAxis.getGlobalExtent();\n\n                if (cartesian.type === 'cartesian2d') {\n                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\n                        axisType, point, otherExtent\n                    );\n                }\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridLine(axisType, point, otherExtent) {\n                var targetShape = axisType === 'x'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                graphic.subPixelOptimizeLine({\n                    shape: targetShape,\n                    style: pointerEl.style\n                });\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridShadow(axisType, point, otherExtent) {\n                var axis = cartesian.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n                var span = otherExtent[1] - otherExtent[0];\n                var targetShape = axisType === 'x'\n                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\n                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _showSinglePointer: function (axisPointerModel, single, axisType, point, enableAnimation) {\n            var self = this;\n            var axisPointerType = axisPointerModel.get('type');\n            var moveAnimation =\n                enableAnimation\n                && axisPointerType !== 'cross'\n                && single.getBaseAxis().type === 'category';\n            var rect = single.getRect();\n            var otherExtent = [rect.y, rect.y + rect.height];\n\n            moveSingleLine(axisType, point, otherExtent);\n\n            /**\n             * @inner\n             */\n            function moveSingleLine(axisType, point, otherExtent) {\n                var axis = single.getAxis();\n                var orient = axis.orient;\n\n                var targetShape = orient === 'horizontal'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    single, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n        },\n\n        /**\n         * Show tooltip on axis of polar coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {Array.<module:echarts/coord/polar/Polar>} polar\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         */\n        _showPolarPointer: function (axisPointerModel, polar, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n\n            var angleAxis = polar.getAngleAxis();\n            var radiusAxis = polar.getRadiusAxis();\n\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && polar.getBaseAxis().type === 'category';\n\n            if (axisPointerType === 'cross') {\n                movePolarLine('angle', point, radiusAxis.getExtent());\n                movePolarLine('radius', point, angleAxis.getExtent());\n\n                this._updateCrossText(polar, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\n                var otherExtent = otherAxis.getExtent();\n\n                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\n                    axisType, point, otherExtent\n                );\n            }\n            /**\n             * @inner\n             */\n            function movePolarLine(axisType, point, otherExtent) {\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                if (axisType === 'angle') {\n                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\n                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\n                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\n                }\n                else {\n                    targetShape = {\n                        cx: polar.cx,\n                        cy: polar.cy,\n                        r: mouseCoord[0]\n                    };\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function movePolarShadow(axisType, point, otherExtent) {\n                var axis = polar.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                var radian = Math.PI / 180;\n\n                if (axisType === 'angle') {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        otherExtent[0], otherExtent[1],\n                        // In ECharts y is negative if angle is positive\n                        (-mouseCoord[1] - bandWidth / 2) * radian,\n                        (-mouseCoord[1] + bandWidth / 2) * radian\n                    );\n                }\n                else {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        mouseCoord[0] - bandWidth / 2,\n                        mouseCoord[0] + bandWidth / 2,\n                        0, Math.PI * 2\n                    );\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _updateCrossText: function (coordSys, point, axisPointerModel) {\n            var crossStyleModel = axisPointerModel.getModel('crossStyle');\n            var textStyleModel = crossStyleModel.getModel('textStyle');\n\n            var tooltipModel = this._tooltipModel;\n\n            var text = this._crossText;\n            if (!text) {\n                text = this._crossText = new graphic.Text({\n                    style: {\n                        textAlign: 'left',\n                        textVerticalAlign: 'bottom'\n                    }\n                });\n                this.group.add(text);\n            }\n\n            var value = coordSys.pointToData(point);\n\n            var dims = coordSys.dimensions;\n            value = zrUtil.map(value, function (val, idx) {\n                var axis = coordSys.getAxis(dims[idx]);\n                if (axis.type === 'category' || axis.type === 'time') {\n                    val = axis.scale.getLabel(val);\n                }\n                else {\n                    val = formatUtil.addCommas(\n                        val.toFixed(axis.getPixelPrecision())\n                    );\n                }\n                return val;\n            });\n\n            text.setStyle({\n                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\n                textFont: textStyleModel.getFont(),\n                text: value.join(', '),\n                x: point[0] + 5,\n                y: point[1] - 5\n            });\n            text.z = tooltipModel.get('z');\n            text.zlevel = tooltipModel.get('zlevel');\n        },\n\n        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\n            var tooltipModel = this._tooltipModel;\n            var z = tooltipModel.get('z');\n            var zlevel = tooltipModel.get('zlevel');\n            var axisPointers = this._axisPointers;\n            var coordSysName = coordSys.name;\n            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\n            if (axisPointers[coordSysName][axisType]) {\n                return axisPointers[coordSysName][axisType];\n            }\n\n            // Create if not exists\n            var pointerType = pointerModel.get('type');\n            var styleModel = pointerModel.getModel(pointerType + 'Style');\n            var isShadow = pointerType === 'shadow';\n            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\n\n            var elementType = coordSys.type === 'polar'\n                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\n                : (isShadow ? 'Rect' : 'Line');\n\n            isShadow ? (style.stroke = null) : (style.fill = null);\n\n            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\n                style: style,\n                z: z,\n                zlevel: zlevel,\n                silent: true,\n                shape: initShape\n            });\n\n            this.group.add(el);\n            return el;\n        },\n\n        /**\n         * Dispatch actions and show tooltip on series\n         * @param {Array.<module:echarts/model/Series>} seriesList\n         * @param {Array.<number>} point\n         * @param {Array.<number>} value\n         * @param {boolean} contentNotChange\n         * @param {Array.<number>|string|Function} [positionExpr]\n         */\n        _dispatchAndShowSeriesTooltipContent: function (\n            coordSys, seriesList, point, value, contentNotChange, positionExpr\n        ) {\n\n            var rootTooltipModel = this._tooltipModel;\n\n            var baseAxis = coordSys.getBaseAxis();\n            var baseDimIndex = ({x: 1, radius: 1, single: 1})[baseAxis.dim] ? 0 : 1;\n\n            if (!seriesList.length) {\n                return;\n            }\n\n            var payloadBatch = zrUtil.map(seriesList, function (series) {\n                return {\n                    seriesIndex: series.seriesIndex,\n                    dataIndexInside: series.getAxisTooltipDataIndex\n                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\n                        : series.getData().indexOfNearest(\n                            series.coordDimToDataDim(baseAxis.dim)[0],\n                            value[baseDimIndex],\n                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\n                            false, baseAxis.type === 'category' ? 0.5 : null\n                        )\n                };\n            });\n            var sampleSeriesIndex;\n            zrUtil.each(payloadBatch, function (payload, idx) {\n                if (seriesList[idx].getData().hasValue(payload.dataIndexInside)) {\n                    sampleSeriesIndex = idx;\n                }\n            });\n            // Fallback to 0.\n            sampleSeriesIndex = sampleSeriesIndex || 0;\n\n            var lastHover = this._lastHover;\n            var api = this._api;\n            // Dispatch downplay action\n            if (lastHover.payloadBatch && !contentNotChange) {\n                api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Dispatch highlight action\n            if (!contentNotChange) {\n                api.dispatchAction({\n                    type: 'highlight',\n                    batch: payloadBatch\n                });\n                lastHover.payloadBatch = payloadBatch;\n            }\n            // Dispatch showTip action\n            var dataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n            api.dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                // expose to user.\n                dataIndex: seriesList[sampleSeriesIndex].getData().getRawIndex(dataIndex),\n                seriesIndex: payloadBatch[sampleSeriesIndex].seriesIndex,\n                from: this.uid\n            });\n\n            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\n                var paramsList = zrUtil.map(seriesList, function (series, index) {\n                    return series.getDataParams(payloadBatch[index].dataIndexInside);\n                });\n\n                if (!contentNotChange) {\n                    // Update html content\n                    var firstDataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = baseAxis.type === 'time'\n                        ? baseAxis.scale.getLabel(value[baseDimIndex])\n                        : seriesList[sampleSeriesIndex].getData().getName(firstDataIndex);\n                    var defaultHtml = (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + zrUtil.map(seriesList, function (series, index) {\n                            return series.formatTooltip(payloadBatch[index].dataIndexInside, true);\n                        }).join('<br />');\n\n                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\n\n                    this._showTooltipContent(\n                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\n                        point[0], point[1], positionExpr, null, api\n                    );\n                }\n                else {\n                    updatePosition(\n                        positionExpr || rootTooltipModel.get('position'),\n                        point[0], point[1],\n                        rootTooltipModel.get('confine'),\n                        this._tooltipContent, paramsList, null, api\n                    );\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on item\n         * @param {module:echarts/model/Series} seriesModel\n         * @param {number} dataIndex\n         * @param {string} dataType\n         * @param {Object} e\n         */\n        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\n            // FIXME Graph data\n            var api = this._api;\n            var data = seriesModel.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var tooltipOpt = itemModel.get('tooltip', true);\n            if (typeof tooltipOpt === 'string') {\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                var tooltipContent = tooltipOpt;\n                tooltipOpt = {\n                    formatter: tooltipContent\n                };\n            }\n            var rootTooltipModel = this._tooltipModel;\n            var seriesTooltipModel = seriesModel.getModel(\n                'tooltip', rootTooltipModel\n            );\n            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\n\n            var params = seriesModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\n\n            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\n\n            this._showTooltipContent(\n                tooltipModel, defaultHtml, params, asyncTicket,\n                e.offsetX, e.offsetY, e.position, e.target, api\n            );\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, target, api\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\n                var tooltipContent = this._tooltipContent;\n                var confine = tooltipModel.get('confine');\n\n                var formatter = tooltipModel.get('formatter');\n                positionExpr = positionExpr || tooltipModel.get('position');\n                var html = defaultHtml;\n\n                if (formatter) {\n                    if (typeof formatter === 'string') {\n                        html = formatUtil.formatTpl(formatter, params, true);\n                    }\n                    else if (typeof formatter === 'function') {\n                        var self = this;\n                        var ticket = asyncTicket;\n                        var callback = function (cbTicket, html) {\n                            if (cbTicket === self._ticket) {\n                                tooltipContent.setContent(html);\n\n                                updatePosition(\n                                    positionExpr, x, y, confine,\n                                    tooltipContent, params, target, api\n                                );\n                            }\n                        };\n                        self._ticket = ticket;\n                        html = formatter(params, ticket, callback);\n                    }\n                }\n\n                tooltipContent.show(tooltipModel);\n                tooltipContent.setContent(html);\n\n                updatePosition(\n                    positionExpr, x, y, confine,\n                    tooltipContent, params, target, api\n                );\n            }\n        },\n\n        /**\n         * Show axis pointer\n         * @param {string} [coordSysName]\n         */\n        _showAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.show();\n                });\n            }\n            else {\n                this.group.eachChild(function (child) {\n                    child.show();\n                });\n                this.group.show();\n            }\n        },\n\n        _resetLastHover: function () {\n            var lastHover = this._lastHover;\n            if (lastHover.payloadBatch) {\n                this._api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Reset lastHover\n            this._lastHover = {};\n        },\n        /**\n         * Hide axis pointer\n         * @param {string} [coordSysName]\n         */\n        _hideAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.hide();\n                });\n            }\n            else {\n                if (this.group.children().length) {\n                    this.group.hide();\n                }\n            }\n        },\n\n        _hide: function () {\n            clearTimeout(this._showTimeout);\n\n            this._hideAxisPointer();\n            this._resetLastHover();\n            if (!this._alwaysShowContent) {\n                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._api.dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n\n            this._lastX = this._lastY = null;\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var zr = api.getZr();\n            this._tooltipContent.hide();\n\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 463\n// module chunks = 0","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        isBlank: function () {\n            return this._isBlank;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        setBlank: function (isBlank) {\n            this._isBlank = isBlank;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 464\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            // Default with axisTick\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 465\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 466\n// module chunks = 0","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 467\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n    var axisLabelInterval = require('./axisLabelInterval');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        getGlobalExtent: function () {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            return ret;\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 468\n// module chunks = 0","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 469\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 470\n// module chunks = 0","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this._model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this._model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this._model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n        else {\n            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n                if (coordList[i].getAxis('x').index === xAxisIndex\n                    || coordList[i].getAxis('y').index === yAxisIndex\n                ) {\n                    return coordList[i];\n                }\n            }\n        }\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 471\n// module chunks = 0","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 472\n// module chunks = 0","'use strict';\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('../axisHelper');\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/axisLabelInterval.js\n// module id = 473\n// module chunks = 0","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 474\n// module chunks = 0","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Array.<string>} [defaultNames]    Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [extraPrefix]             Prefix of name when filling the left dimensions.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\n        if (!data) {\n            return dimensions;\n        }\n\n        var value0 = retrieveValue(data[0]);\n        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\n\n        defaultNames = defaultNames || [];\n        extraPrefix = extraPrefix || 'extra';\n        for (var i = 0; i < dimSize; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 475\n// module chunks = 0","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (coordSys.type === 'singleAxis') {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/points.js\n// module id = 476\n// module chunks = 0","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 477\n// module chunks = 0","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption();\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts;\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 478\n// module chunks = 0","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 479\n// module chunks = 0","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: true,\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 480\n// module chunks = 0","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 481\n// module chunks = 0","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 482\n// module chunks = 0","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes) {\n            var style = getItemStyle.call(this, excludes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 483\n// module chunks = 0","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 484\n// module chunks = 0","\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 485\n// module chunks = 0","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 486\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 487\n// module chunks = 0","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataSample.js\n// module id = 488\n// module chunks = 0","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 489\n// module chunks = 0","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 490\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date);\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                mathCeil(extent[0] / interval) * interval,\n                mathFloor(extent[1] / interval) * interval\n            ];\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function () {\n        return new TimeScale();\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 491\n// module chunks = 0","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 492\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 493\n// module chunks = 0","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 494\n// module chunks = 0","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/symbol.js\n// module id = 495\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-175b5043\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"ca8489f0\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-175b5043\",\"scoped\":true,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/PanThumb/index.vue\n// module id = 500\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1a7b8b5a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./weekly_using.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"b11a3190\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-1a7b8b5a\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/dashboard/editor/weekly_using.vue\n// module id = 501\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-50d87894\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"67c1d9c0\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-50d87894\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/dashboard/default/index.vue\n// module id = 508\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-51b23524\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"5a720045\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-51b23524\",\"scoped\":true,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/dashboard/editor/index.vue\n// module id = 509\n// module chunks = 0","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(\"CountTo\",[],e):\"object\"==typeof exports?exports.CountTo=e():t.CountTo=e()}(this,function(){return function(t){function e(n){if(i[n])return i[n].exports;var a=i[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,e),a.l=!0,a.exports}var i={};return e.m=t,e.c=i,e.i=function(t){return t},e.d=function(t,i,n){e.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:n})},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,\"a\",i),i},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"/dist/\",e(e.s=5)}([function(t,e,i){var n=i(3)(i(1),i(4),null,null);t.exports=n.exports},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=i(2);e.default={props:{startVal:{type:Number,required:!1,default:0},endVal:{type:Number,required:!1,default:2017},duration:{type:Number,required:!1,default:3e3},autoplay:{type:Boolean,required:!1,default:!0},decimals:{type:Number,required:!1,default:0,validator:function(t){return t>=0}},decimal:{type:String,required:!1,default:\".\"},separator:{type:String,required:!1,default:\",\"},prefix:{type:String,required:!1,default:\"\"},suffix:{type:String,required:!1,default:\"\"},useEasing:{type:Boolean,required:!1,default:!0},easingFn:{type:Function,default:function(t,e,i,n){return i*(1-Math.pow(2,-10*t/n))*1024/1023+e}}},data:function(){return{localStartVal:this.startVal,displayValue:this.formatNumber(this.startVal),printVal:null,paused:!1,localDuration:this.duration,startTime:null,timestamp:null,remaining:null,rAF:null}},computed:{countDown:function(){return this.startVal>this.endVal}},mounted:function(){this.autoplay&&this.start(),this.$emit(\"mountedCallback\")},methods:{start:function(){this.localStartVal=this.startVal,this.startTime=null,this.localDuration=this.duration,this.paused=!1,this.rAF=(0,n.requestAnimationFrame)(this.count)},pauseResume:function(){this.paused?(this.resume(),this.paused=!1):(this.pause(),this.paused=!0)},pause:function(){(0,n.cancelAnimationFrame)(this.rAF)},resume:function(){this.startTime=null,this.localDuration=+this.remaining,this.localStartVal=+this.printVal,(0,n.requestAnimationFrame)(this.count)},reset:function(){this.startTime=null,(0,n.cancelAnimationFrame)(this.rAF),this.displayValue=this.formatNumber(this.startVal)},count:function(t){this.startTime||(this.startTime=t),this.timestamp=t;var e=t-this.startTime;this.remaining=this.localDuration-e,this.useEasing?this.countDown?this.printVal=this.localStartVal-this.easingFn(e,0,this.localStartVal-this.endVal,this.localDuration):this.printVal=this.easingFn(e,this.localStartVal,this.endVal-this.localStartVal,this.localDuration):this.countDown?this.printVal=this.localStartVal-(this.localStartVal-this.endVal)*(e/this.localDuration):this.printVal=this.localStartVal+(this.localStartVal-this.startVal)*(e/this.localDuration),this.countDown?this.printVal=this.printVal<this.endVal?this.endVal:this.printVal:this.printVal=this.printVal>this.endVal?this.endVal:this.printVal,this.displayValue=this.formatNumber(this.printVal),e<this.localDuration?this.rAF=(0,n.requestAnimationFrame)(this.count):this.$emit(\"callback\")},isNumber:function(t){return!isNaN(parseFloat(t))},formatNumber:function(t){t=t.toFixed(this.decimals),t+=\"\";var e=t.split(\".\"),i=e[0],n=e.length>1?this.decimal+e[1]:\"\",a=/(\\d+)(\\d{3})/;if(this.separator&&!this.isNumber(this.separator))for(;a.test(i);)i=i.replace(a,\"$1\"+this.separator+\"$2\");return this.prefix+i+n+this.suffix}},destroyed:function(){(0,n.cancelAnimationFrame)(this.rAF)}}},function(t,e,i){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});for(var n=0,a=\"webkit moz ms o\".split(\" \"),r=window.requestAnimationFrame,s=window.cancelAnimationFrame,o=void 0,u=0;u<a.length&&(!r||!s);u++)o=a[u],e.requestAnimationFrame=r=r||window[o+\"RequestAnimationFrame\"],e.cancelAnimationFrame=s=s||window[o+\"CancelAnimationFrame\"]||window[o+\"CancelRequestAnimationFrame\"];r&&s||(e.requestAnimationFrame=r=function(t){var e=(new Date).getTime(),i=Math.max(0,16-(e-n)),a=window.setTimeout(function(){t(e+i)},i);return n=e+i,a},e.cancelAnimationFrame=s=function(t){window.clearTimeout(t)}),e.requestAnimationFrame=r,e.cancelAnimationFrame=s},function(t,e){t.exports=function(t,e,i,n){var a,r=t=t||{},s=typeof t.default;\"object\"!==s&&\"function\"!==s||(a=t,r=t.default);var o=\"function\"==typeof r?r.options:r;if(e&&(o.render=e.render,o.staticRenderFns=e.staticRenderFns),i&&(o._scopeId=i),n){var u=Object.create(o.computed||null);Object.keys(n).forEach(function(t){var e=n[t];u[t]=function(){return e}}),o.computed=u}return{esModule:a,exports:r,options:o}}},function(t,e){t.exports={render:function(){var t=this,e=t.$createElement;return(t._self._c||e)(\"span\",[t._v(\"\\n  \"+t._s(t.displayValue)+\"\\n\")])},staticRenderFns:[]}},function(t,e,i){\"use strict\";function n(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,\"__esModule\",{value:!0});var a=i(0),r=n(a);e.default=r.default,\"undefined\"!=typeof window&&window.Vue&&window.Vue.component(\"count-to\",r.default)}])});\n//# sourceMappingURL=vue-count-to.min.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-count-to/dist/vue-count-to.min.js\n// module id = 530\n// module chunks = 0","var Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./line.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-71204a37\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./line.vue\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Charts/line.vue\n// module id = 531\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-50d87894\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-50d87894\\\"}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-50d87894\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/dashboard/default/index.vue\n// module id = 538\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-51b23524\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-51b23524\\\"}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-51b23524\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/dashboard/editor/index.vue\n// module id = 539\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1a7b8b5a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./weekly_using.vue\")\n}\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./weekly_using.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1a7b8b5a\\\"}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./weekly_using.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/dashboard/editor/weekly_using.vue\n// module id = 540\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"pan-item\",\n    style: ({\n      zIndex: _vm.zIndex,\n      height: _vm.height,\n      width: _vm.width\n    })\n  }, [_c('div', {\n    staticClass: \"pan-info\"\n  }, [_c('div', {\n    staticClass: \"pan-info-roles-container\"\n  }, [_vm._t(\"default\")], 2)]), _vm._v(\" \"), _c('img', {\n    staticClass: \"pan-thumb\",\n    attrs: {\n      \"src\": _vm.image\n    }\n  })])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-175b5043\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/PanThumb/index.vue\n// module id = 546\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"weekly-using-container\"\n  }, [_c('span', {\n    staticClass: \"weekly-using-container-title\"\n  }, [_vm._v(\"最近使用情况\")]), _vm._v(\" \"), _c('line-chart', {\n    attrs: {\n      \"listData\": _vm.listData\n    }\n  })], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-1a7b8b5a\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/dashboard/editor/weekly_using.vue\n// module id = 547\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dashboard-editor-container\"\n  }, [_c('div', {\n    staticClass: \" clearfix\"\n  }, [_c('PanThumb', {\n    staticStyle: {\n      \"float\": \"left\"\n    },\n    attrs: {\n      \"image\": _vm.avatar\n    }\n  }, [_vm._v(\" 你的权限:\\n            \"), _vm._l((_vm.roles), function(item) {\n    return _c('span', {\n      staticClass: \"pan-info-roles\"\n    }, [_vm._v(_vm._s(item))])\n  })], 2), _vm._v(\" \"), _c('a', {\n    staticClass: \"github-corner\",\n    attrs: {\n      \"href\": \"https://github.com/weihomechen/vue-mail-front\",\n      \"target\": \"_blank\",\n      \"aria-label\": \"View source on Github\"\n    }\n  }, [_c('svg', {\n    staticStyle: {\n      \"fill\": \"#4AB7BD\",\n      \"color\": \"#fff\",\n      \"position\": \"absolute\",\n      \"top\": \"50px\",\n      \"border\": \"0\",\n      \"right\": \"0\"\n    },\n    attrs: {\n      \"width\": \"80\",\n      \"height\": \"80\",\n      \"viewBox\": \"0 0 250 250\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_c('path', {\n    attrs: {\n      \"d\": \"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"\n    }\n  }), _vm._v(\" \"), _c('path', {\n    staticClass: \"octo-arm\",\n    staticStyle: {\n      \"transform-origin\": \"130px 106px\"\n    },\n    attrs: {\n      \"d\": \"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\",\n      \"fill\": \"currentColor\"\n    }\n  }), _vm._v(\" \"), _c('path', {\n    staticClass: \"octo-body\",\n    attrs: {\n      \"d\": \"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\",\n      \"fill\": \"currentColor\"\n    }\n  })])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-container\"\n  }, [_c('span', {\n    staticClass: \"display_name\"\n  }, [_vm._v(_vm._s(_vm.name))]), _vm._v(\" \"), _c('span', {\n    staticStyle: {\n      \"font-size\": \"20px\",\n      \"padding-top\": \"20px\",\n      \"display\": \"inline-block\"\n    }\n  }, [_vm._v(\"普通编辑dashboard\")])])], 1), _vm._v(\" \"), _c('div', [_c('img', {\n    staticClass: \"emptyGif\",\n    attrs: {\n      \"src\": _vm.emptyGif\n    }\n  })])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-50d87894\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/dashboard/default/index.vue\n// module id = 554\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dashboard-container\"\n  }, [_c('div', {\n    staticClass: \" clearfix\"\n  }, [_c('PanThumb', {\n    staticStyle: {\n      \"float\": \"left\"\n    },\n    attrs: {\n      \"image\": _vm.avatar\n    }\n  }, [_vm._v(\" 你的权限:\\n            \"), _vm._l((_vm.roles), function(item) {\n    return _c('span', {\n      staticClass: \"pan-info-roles\"\n    }, [_vm._v(_vm._s(item))])\n  })], 2), _vm._v(\" \"), _c('a', {\n    staticClass: \"github-corner\",\n    attrs: {\n      \"href\": \"https://github.com/weihomechen/vue-mail-front\",\n      \"target\": \"_blank\",\n      \"aria-label\": \"View source on Github\"\n    }\n  }, [_c('svg', {\n    staticStyle: {\n      \"fill\": \"#4AB7BD\",\n      \"color\": \"#fff\",\n      \"position\": \"absolute\",\n      \"top\": \"50px\",\n      \"border\": \"0\",\n      \"right\": \"0\"\n    },\n    attrs: {\n      \"width\": \"80\",\n      \"height\": \"80\",\n      \"viewBox\": \"0 0 250 250\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_c('path', {\n    attrs: {\n      \"d\": \"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"\n    }\n  }), _vm._v(\" \"), _c('path', {\n    staticClass: \"octo-arm\",\n    staticStyle: {\n      \"transform-origin\": \"130px 106px\"\n    },\n    attrs: {\n      \"d\": \"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\",\n      \"fill\": \"currentColor\"\n    }\n  }), _vm._v(\" \"), _c('path', {\n    staticClass: \"octo-body\",\n    attrs: {\n      \"d\": \"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\",\n      \"fill\": \"currentColor\"\n    }\n  })])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-container\"\n  }, [_c('span', {\n    staticClass: \"display_name\"\n  }, [_vm._v(_vm._s(_vm.name))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-wrapper\"\n  }, [_c('div', {\n    staticClass: \"info-item\"\n  }, [_c('countTo', {\n    staticClass: \"info-item-num\",\n    attrs: {\n      \"startVal\": 0,\n      \"endVal\": _vm.statisticsData.inbox_count,\n      \"duration\": 3400\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"info-item-text\"\n  }, [_vm._v(\"收件\")]), _vm._v(\" \"), _c('icon-svg', {\n    staticClass: \"dashboard-icon\",\n    attrs: {\n      \"icon-class\": \"a\"\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-item\",\n    staticStyle: {\n      \"cursor\": \"auto\"\n    }\n  }, [_c('countTo', {\n    staticClass: \"info-item-num\",\n    attrs: {\n      \"startVal\": 0,\n      \"endVal\": _vm.statisticsData.outbox_count,\n      \"duration\": 3600\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"info-item-text\"\n  }, [_vm._v(\"发件\")]), _vm._v(\" \"), _c('icon-svg', {\n    staticClass: \"dashboard-icon\",\n    attrs: {\n      \"icon-class\": \"b\"\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"info-item\"\n  }, [_c('countTo', {\n    ref: \"countTo3\",\n    staticClass: \"info-item-num\",\n    attrs: {\n      \"startVal\": 0,\n      \"endVal\": _vm.statisticsData.draft_count,\n      \"duration\": 3800\n    }\n  }), _vm._v(\" \"), _c('span', {\n    staticClass: \"info-item-text\"\n  }, [_vm._v(\"草稿\")]), _vm._v(\" \"), _c('icon-svg', {\n    staticClass: \"dashboard-icon\",\n    attrs: {\n      \"icon-class\": \"c\"\n    }\n  })], 1)])])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"btn-group\"\n  }, [_c('router-link', {\n    staticClass: \"pan-btn green-btn\",\n    attrs: {\n      \"to\": \"/mail_send/index\"\n    }\n  }, [_vm._v(\"写信\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn orange-btn\",\n    attrs: {\n      \"to\": \"/inbox/index\"\n    }\n  }, [_vm._v(\"收件箱\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn blue-btn\",\n    attrs: {\n      \"to\": \"/outbox/index\"\n    }\n  }, [_vm._v(\"发件箱\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn pink-btn\",\n    attrs: {\n      \"to\": \"/draftbox/index\"\n    }\n  }, [_vm._v(\"草稿箱\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn cyan-btn\",\n    attrs: {\n      \"to\": \"/mail_label/index\"\n    }\n  }, [_vm._v(\"标签管理\")]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"pan-btn red-btn\",\n    attrs: {\n      \"to\": \"/mail_contacts/index\"\n    }\n  }, [_vm._v(\"通讯录\")])], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"clearfix main-dashboard-container\"\n  }, [_c('div', {\n    staticClass: \"chart-container\"\n  }, [_c('WeeklyUsing', {\n    attrs: {\n      \"listData\": _vm.statisticsData.weekly_using\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"unread-mail-container\"\n  }, [_c('div', {\n    staticClass: \"unread-mail-title\"\n  }, [_vm._v(\"未读邮件\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"unread-mail-wrapper\"\n  }, [(_vm.unreadMails.length != 0) ? _vm._l((_vm.unreadMails), function(mail) {\n    return _c('div', {\n      staticClass: \"unread-mail-item\"\n    }, [_c('span', {\n      staticClass: \"unread-mail-content\",\n      on: {\n        \"click\": function($event) {\n          _vm.toUnreadMail(mail.id)\n        }\n      }\n    }, [_vm._v(\"\\n                            \" + _vm._s(mail.title) + \"\\n                        \")]), _vm._v(\" \"), _c('el-tag', {\n      attrs: {\n        \"type\": \"danger\"\n      }\n    }, [_vm._v(_vm._s(_vm._f(\"parseTime\")(mail.receiveDate, '{m}-{d} {h}:{i}')))]), _vm._v(\" \"), _c('el-tag', {\n      attrs: {\n        \"type\": \"primary\"\n      }\n    }, [_vm._v(_vm._s(mail.sendName))])], 1)\n  }) : [_c('div', {\n    staticClass: \"unread-mail-emptyTitle\"\n  }, [_vm._v(\"所有邮件都被你读过了\")])]], 2)])])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-51b23524\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/dashboard/editor/index.vue\n// module id = 555\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: _vm.className,\n    style: ({\n      height: _vm.height,\n      width: _vm.width\n    }),\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-71204a37\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Charts/line.vue\n// module id = 561\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"dashboard-container\"\n  }, [_c(_vm.currentRole, {\n    tag: \"component\"\n  })], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-7fc88004\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/dashboard/index.vue\n// module id = 564\n// module chunks = 0","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 570\n// module chunks = 0","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 571\n// module chunks = 0","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 572\n// module chunks = 0","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 573\n// module chunks = 0","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 574\n// module chunks = 0","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 575\n// module chunks = 0","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 576\n// module chunks = 0","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 577\n// module chunks = 0","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 578\n// module chunks = 0","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 579\n// module chunks = 0","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 580\n// module chunks = 0","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 581\n// module chunks = 0","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 582\n// module chunks = 0","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 583\n// module chunks = 0","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 584\n// module chunks = 0","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 585\n// module chunks = 0","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 586\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 587\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 588\n// module chunks = 0","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 589\n// module chunks = 0","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 590\n// module chunks = 0","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 591\n// module chunks = 0","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 592\n// module chunks = 0","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = require('../../contain/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 593\n// module chunks = 0","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 594\n// module chunks = 0","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 595\n// module chunks = 0","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 596\n// module chunks = 0","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 597\n// module chunks = 0","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 598\n// module chunks = 0","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 599\n// module chunks = 0","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 600\n// module chunks = 0","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 601\n// module chunks = 0","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = require('../../core/env');\n    var Path = require('../Path');\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 602\n// module chunks = 0","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 603\n// module chunks = 0","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 604\n// module chunks = 0","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 605\n// module chunks = 0","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 606\n// module chunks = 0","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 607\n// module chunks = 0","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.5.1';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 608\n// module chunks = 0"],"sourceRoot":""}